// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/bootstrap.proto

#include "api/bootstrap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class LightstepConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LightstepConfig>
      _instance;
} _LightstepConfig_default_instance_;
class ZipkinConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZipkinConfig>
      _instance;
} _ZipkinConfig_default_instance_;
class Tracing_HttpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tracing_Http>
      _instance;
} _Tracing_Http_default_instance_;
class TracingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tracing>
      _instance;
} _Tracing_default_instance_;
class AdminDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Admin>
      _instance;
} _Admin_default_instance_;
class ClusterManager_OutlierDetectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterManager_OutlierDetection>
      _instance;
} _ClusterManager_OutlierDetection_default_instance_;
class ClusterManagerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterManager>
      _instance;
} _ClusterManager_default_instance_;
class StatsdSinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatsdSink>
      _instance;
  const ::envoy::api::v2::Address* address_;
  ::google::protobuf::internal::ArenaStringPtr tcp_cluster_name_;
} _StatsdSink_default_instance_;
class StatsSinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatsSink>
      _instance;
} _StatsSink_default_instance_;
class TagSpecifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TagSpecifier>
      _instance;
} _TagSpecifier_default_instance_;
class StatsConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatsConfig>
      _instance;
} _StatsConfig_default_instance_;
class WatchdogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Watchdog>
      _instance;
} _Watchdog_default_instance_;
class RuntimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Runtime>
      _instance;
} _Runtime_default_instance_;
class RateLimitServiceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RateLimitServiceConfig>
      _instance;
} _RateLimitServiceConfig_default_instance_;
class Bootstrap_StaticResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap_StaticResources>
      _instance;
} _Bootstrap_StaticResources_default_instance_;
class Bootstrap_DynamicResources_DeprecatedV1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap_DynamicResources_DeprecatedV1>
      _instance;
} _Bootstrap_DynamicResources_DeprecatedV1_default_instance_;
class Bootstrap_DynamicResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap_DynamicResources>
      _instance;
} _Bootstrap_DynamicResources_default_instance_;
class BootstrapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap>
      _instance;
} _Bootstrap_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace protobuf_api_2fbootstrap_2eproto {
void InitDefaultsLightstepConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_LightstepConfig_default_instance_;
    new (ptr) ::envoy::api::v2::LightstepConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::LightstepConfig::InitAsDefaultInstance();
}

void InitDefaultsLightstepConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLightstepConfigImpl);
}

void InitDefaultsZipkinConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_ZipkinConfig_default_instance_;
    new (ptr) ::envoy::api::v2::ZipkinConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::ZipkinConfig::InitAsDefaultInstance();
}

void InitDefaultsZipkinConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsZipkinConfigImpl);
}

void InitDefaultsTracing_HttpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  {
    void* ptr = &::envoy::api::v2::_Tracing_Http_default_instance_;
    new (ptr) ::envoy::api::v2::Tracing_Http();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Tracing_Http::InitAsDefaultInstance();
}

void InitDefaultsTracing_Http() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTracing_HttpImpl);
}

void InitDefaultsTracingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsTracing_Http();
  {
    void* ptr = &::envoy::api::v2::_Tracing_default_instance_;
    new (ptr) ::envoy::api::v2::Tracing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Tracing::InitAsDefaultInstance();
}

void InitDefaultsTracing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTracingImpl);
}

void InitDefaultsAdminImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2faddress_2eproto::InitDefaultsAddress();
  {
    void* ptr = &::envoy::api::v2::_Admin_default_instance_;
    new (ptr) ::envoy::api::v2::Admin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Admin::InitAsDefaultInstance();
}

void InitDefaultsAdmin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAdminImpl);
}

void InitDefaultsClusterManager_OutlierDetectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_ClusterManager_OutlierDetection_default_instance_;
    new (ptr) ::envoy::api::v2::ClusterManager_OutlierDetection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::ClusterManager_OutlierDetection::InitAsDefaultInstance();
}

void InitDefaultsClusterManager_OutlierDetection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterManager_OutlierDetectionImpl);
}

void InitDefaultsClusterManagerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsClusterManager_OutlierDetection();
  protobuf_api_2faddress_2eproto::InitDefaultsBindConfig();
  protobuf_api_2fbase_2eproto::InitDefaultsApiConfigSource();
  {
    void* ptr = &::envoy::api::v2::_ClusterManager_default_instance_;
    new (ptr) ::envoy::api::v2::ClusterManager();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::ClusterManager::InitAsDefaultInstance();
}

void InitDefaultsClusterManager() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterManagerImpl);
}

void InitDefaultsStatsdSinkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2faddress_2eproto::InitDefaultsAddress();
  {
    void* ptr = &::envoy::api::v2::_StatsdSink_default_instance_;
    new (ptr) ::envoy::api::v2::StatsdSink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::StatsdSink::InitAsDefaultInstance();
}

void InitDefaultsStatsdSink() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatsdSinkImpl);
}

void InitDefaultsStatsSinkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  {
    void* ptr = &::envoy::api::v2::_StatsSink_default_instance_;
    new (ptr) ::envoy::api::v2::StatsSink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::StatsSink::InitAsDefaultInstance();
}

void InitDefaultsStatsSink() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatsSinkImpl);
}

void InitDefaultsTagSpecifierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_TagSpecifier_default_instance_;
    new (ptr) ::envoy::api::v2::TagSpecifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::TagSpecifier::InitAsDefaultInstance();
}

void InitDefaultsTagSpecifier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTagSpecifierImpl);
}

void InitDefaultsStatsConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsTagSpecifier();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::envoy::api::v2::_StatsConfig_default_instance_;
    new (ptr) ::envoy::api::v2::StatsConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::StatsConfig::InitAsDefaultInstance();
}

void InitDefaultsStatsConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatsConfigImpl);
}

void InitDefaultsWatchdogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::envoy::api::v2::_Watchdog_default_instance_;
    new (ptr) ::envoy::api::v2::Watchdog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Watchdog::InitAsDefaultInstance();
}

void InitDefaultsWatchdog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchdogImpl);
}

void InitDefaultsRuntimeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_Runtime_default_instance_;
    new (ptr) ::envoy::api::v2::Runtime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Runtime::InitAsDefaultInstance();
}

void InitDefaultsRuntime() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRuntimeImpl);
}

void InitDefaultsRateLimitServiceConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_RateLimitServiceConfig_default_instance_;
    new (ptr) ::envoy::api::v2::RateLimitServiceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::RateLimitServiceConfig::InitAsDefaultInstance();
}

void InitDefaultsRateLimitServiceConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRateLimitServiceConfigImpl);
}

void InitDefaultsBootstrap_StaticResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2flds_2eproto::InitDefaultsListener();
  protobuf_api_2fcds_2eproto::InitDefaultsCluster();
  protobuf_api_2fsds_2eproto::InitDefaultsSecret();
  {
    void* ptr = &::envoy::api::v2::_Bootstrap_StaticResources_default_instance_;
    new (ptr) ::envoy::api::v2::Bootstrap_StaticResources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Bootstrap_StaticResources::InitAsDefaultInstance();
}

void InitDefaultsBootstrap_StaticResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBootstrap_StaticResourcesImpl);
}

void InitDefaultsBootstrap_DynamicResources_DeprecatedV1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbase_2eproto::InitDefaultsConfigSource();
  {
    void* ptr = &::envoy::api::v2::_Bootstrap_DynamicResources_DeprecatedV1_default_instance_;
    new (ptr) ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1::InitAsDefaultInstance();
}

void InitDefaultsBootstrap_DynamicResources_DeprecatedV1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBootstrap_DynamicResources_DeprecatedV1Impl);
}

void InitDefaultsBootstrap_DynamicResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbase_2eproto::InitDefaultsConfigSource();
  protobuf_api_2fbase_2eproto::InitDefaultsApiConfigSource();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_DynamicResources_DeprecatedV1();
  {
    void* ptr = &::envoy::api::v2::_Bootstrap_DynamicResources_default_instance_;
    new (ptr) ::envoy::api::v2::Bootstrap_DynamicResources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Bootstrap_DynamicResources::InitAsDefaultInstance();
}

void InitDefaultsBootstrap_DynamicResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBootstrap_DynamicResourcesImpl);
}

void InitDefaultsBootstrapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbase_2eproto::InitDefaultsNode();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_StaticResources();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_DynamicResources();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsClusterManager();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsSink();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsConfig();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsWatchdog();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsTracing();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsRateLimitServiceConfig();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsRuntime();
  protobuf_api_2fbootstrap_2eproto::InitDefaultsAdmin();
  {
    void* ptr = &::envoy::api::v2::_Bootstrap_default_instance_;
    new (ptr) ::envoy::api::v2::Bootstrap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Bootstrap::InitAsDefaultInstance();
}

void InitDefaultsBootstrap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBootstrapImpl);
}

::google::protobuf::Metadata file_level_metadata[18];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LightstepConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LightstepConfig, collector_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LightstepConfig, access_token_file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ZipkinConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ZipkinConfig, collector_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ZipkinConfig, collector_endpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Tracing_Http, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Tracing_Http, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Tracing_Http, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Tracing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Tracing, http_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Admin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Admin, access_log_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Admin, profile_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Admin, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterManager_OutlierDetection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterManager_OutlierDetection, event_log_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterManager, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterManager, local_cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterManager, outlier_detection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterManager, upstream_bind_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterManager, load_stats_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsdSink, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsdSink, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::envoy::api::v2::StatsdSinkDefaultTypeInternal, address_),
  offsetof(::envoy::api::v2::StatsdSinkDefaultTypeInternal, tcp_cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsdSink, statsd_specifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsSink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsSink, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsSink, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::TagSpecifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::TagSpecifier, tag_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::TagSpecifier, regex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsConfig, stats_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::StatsConfig, use_all_default_tags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Watchdog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Watchdog, miss_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Watchdog, megamiss_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Watchdog, kill_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Watchdog, multikill_timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Runtime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Runtime, symlink_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Runtime, subdirectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Runtime, override_subdirectory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::RateLimitServiceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::RateLimitServiceConfig, cluster_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_StaticResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_StaticResources, listeners_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_StaticResources, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_StaticResources, secrets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1, sds_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_DynamicResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_DynamicResources, lds_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_DynamicResources, cds_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_DynamicResources, ads_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap_DynamicResources, deprecated_v1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, static_resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, dynamic_resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, cluster_manager_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, flags_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, stats_sinks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, stats_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, stats_flush_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, watchdog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, tracing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, rate_limit_service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, runtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Bootstrap, admin_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::envoy::api::v2::LightstepConfig)},
  { 7, -1, sizeof(::envoy::api::v2::ZipkinConfig)},
  { 14, -1, sizeof(::envoy::api::v2::Tracing_Http)},
  { 21, -1, sizeof(::envoy::api::v2::Tracing)},
  { 27, -1, sizeof(::envoy::api::v2::Admin)},
  { 35, -1, sizeof(::envoy::api::v2::ClusterManager_OutlierDetection)},
  { 41, -1, sizeof(::envoy::api::v2::ClusterManager)},
  { 50, -1, sizeof(::envoy::api::v2::StatsdSink)},
  { 58, -1, sizeof(::envoy::api::v2::StatsSink)},
  { 65, -1, sizeof(::envoy::api::v2::TagSpecifier)},
  { 72, -1, sizeof(::envoy::api::v2::StatsConfig)},
  { 79, -1, sizeof(::envoy::api::v2::Watchdog)},
  { 88, -1, sizeof(::envoy::api::v2::Runtime)},
  { 96, -1, sizeof(::envoy::api::v2::RateLimitServiceConfig)},
  { 102, -1, sizeof(::envoy::api::v2::Bootstrap_StaticResources)},
  { 110, -1, sizeof(::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1)},
  { 116, -1, sizeof(::envoy::api::v2::Bootstrap_DynamicResources)},
  { 125, -1, sizeof(::envoy::api::v2::Bootstrap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_LightstepConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_ZipkinConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Tracing_Http_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Tracing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Admin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_ClusterManager_OutlierDetection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_ClusterManager_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_StatsdSink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_StatsSink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_TagSpecifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_StatsConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Watchdog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Runtime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_RateLimitServiceConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Bootstrap_StaticResources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Bootstrap_DynamicResources_DeprecatedV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Bootstrap_DynamicResources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Bootstrap_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/bootstrap.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023api/bootstrap.proto\022\014envoy.api.v2\032\021api"
      "/address.proto\032\016api/base.proto\032\rapi/cds."
      "proto\032\rapi/lds.proto\032\rapi/sds.proto\032\036goo"
      "gle/protobuf/duration.proto\032\034google/prot"
      "obuf/struct.proto\032\036google/protobuf/wrapp"
      "ers.proto\"G\n\017LightstepConfig\022\031\n\021collecto"
      "r_cluster\030\001 \001(\t\022\031\n\021access_token_file\030\002 \001"
      "(\t\"E\n\014ZipkinConfig\022\031\n\021collector_cluster\030"
      "\001 \001(\t\022\032\n\022collector_endpoint\030\002 \001(\t\"r\n\007Tra"
      "cing\022(\n\004http\030\001 \001(\0132\032.envoy.api.v2.Tracin"
      "g.Http\032=\n\004Http\022\014\n\004name\030\001 \001(\t\022\'\n\006config\030\002"
      " \001(\0132\027.google.protobuf.Struct\"^\n\005Admin\022\027"
      "\n\017access_log_path\030\001 \001(\t\022\024\n\014profile_path\030"
      "\002 \001(\t\022&\n\007address\030\003 \001(\0132\025.envoy.api.v2.Ad"
      "dress\"\224\002\n\016ClusterManager\022\032\n\022local_cluste"
      "r_name\030\001 \001(\t\022H\n\021outlier_detection\030\002 \001(\0132"
      "-.envoy.api.v2.ClusterManager.OutlierDet"
      "ection\0226\n\024upstream_bind_config\030\003 \001(\0132\030.e"
      "nvoy.api.v2.BindConfig\0228\n\021load_stats_con"
      "fig\030\004 \001(\0132\035.envoy.api.v2.ApiConfigSource"
      "\032*\n\020OutlierDetection\022\026\n\016event_log_path\030\001"
      " \001(\t\"f\n\nStatsdSink\022(\n\007address\030\001 \001(\0132\025.en"
      "voy.api.v2.AddressH\000\022\032\n\020tcp_cluster_name"
      "\030\002 \001(\tH\000B\022\n\020statsd_specifier\"B\n\tStatsSin"
      "k\022\014\n\004name\030\001 \001(\t\022\'\n\006config\030\002 \001(\0132\027.google"
      ".protobuf.Struct\"/\n\014TagSpecifier\022\020\n\010tag_"
      "name\030\001 \001(\t\022\r\n\005regex\030\002 \001(\t\"w\n\013StatsConfig"
      "\022.\n\nstats_tags\030\001 \003(\0132\032.envoy.api.v2.TagS"
      "pecifier\0228\n\024use_all_default_tags\030\002 \001(\0132\032"
      ".google.protobuf.BoolValue\"\327\001\n\010Watchdog\022"
      "/\n\014miss_timeout\030\001 \001(\0132\031.google.protobuf."
      "Duration\0223\n\020megamiss_timeout\030\002 \001(\0132\031.goo"
      "gle.protobuf.Duration\022/\n\014kill_timeout\030\003 "
      "\001(\0132\031.google.protobuf.Duration\0224\n\021multik"
      "ill_timeout\030\004 \001(\0132\031.google.protobuf.Dura"
      "tion\"T\n\007Runtime\022\024\n\014symlink_root\030\001 \001(\t\022\024\n"
      "\014subdirectory\030\002 \001(\t\022\035\n\025override_subdirec"
      "tory\030\003 \001(\t\".\n\026RateLimitServiceConfig\022\024\n\014"
      "cluster_name\030\001 \001(\t\"\275\010\n\tBootstrap\022 \n\004node"
      "\030\001 \001(\0132\022.envoy.api.v2.Node\022A\n\020static_res"
      "ources\030\002 \001(\0132\'.envoy.api.v2.Bootstrap.St"
      "aticResources\022C\n\021dynamic_resources\030\003 \001(\013"
      "2(.envoy.api.v2.Bootstrap.DynamicResourc"
      "es\0225\n\017cluster_manager\030\004 \001(\0132\034.envoy.api."
      "v2.ClusterManager\022\022\n\nflags_path\030\005 \001(\t\022,\n"
      "\013stats_sinks\030\006 \003(\0132\027.envoy.api.v2.StatsS"
      "ink\022/\n\014stats_config\030\r \001(\0132\031.envoy.api.v2"
      ".StatsConfig\0227\n\024stats_flush_interval\030\007 \001"
      "(\0132\031.google.protobuf.Duration\022(\n\010watchdo"
      "g\030\010 \001(\0132\026.envoy.api.v2.Watchdog\022&\n\007traci"
      "ng\030\t \001(\0132\025.envoy.api.v2.Tracing\022@\n\022rate_"
      "limit_service\030\n \001(\0132$.envoy.api.v2.RateL"
      "imitServiceConfig\022&\n\007runtime\030\013 \001(\0132\025.env"
      "oy.api.v2.Runtime\022\"\n\005admin\030\014 \001(\0132\023.envoy"
      ".api.v2.Admin\032\214\001\n\017StaticResources\022)\n\tlis"
      "teners\030\001 \003(\0132\026.envoy.api.v2.Listener\022\'\n\010"
      "clusters\030\002 \003(\0132\025.envoy.api.v2.Cluster\022%\n"
      "\007secrets\030\003 \003(\0132\024.envoy.api.v2.Secret\032\263\002\n"
      "\020DynamicResources\022.\n\nlds_config\030\001 \001(\0132\032."
      "envoy.api.v2.ConfigSource\022.\n\ncds_config\030"
      "\002 \001(\0132\032.envoy.api.v2.ConfigSource\0221\n\nads"
      "_config\030\003 \001(\0132\035.envoy.api.v2.ApiConfigSo"
      "urce\022L\n\rdeprecated_v1\030\004 \001(\01325.envoy.api."
      "v2.Bootstrap.DynamicResources.Deprecated"
      "V1\032>\n\014DeprecatedV1\022.\n\nsds_config\030\001 \001(\0132\032"
      ".envoy.api.v2.ConfigSourceb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2634);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/bootstrap.proto", &protobuf_RegisterTypes);
  ::protobuf_api_2faddress_2eproto::AddDescriptors();
  ::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::protobuf_api_2fcds_2eproto::AddDescriptors();
  ::protobuf_api_2flds_2eproto::AddDescriptors();
  ::protobuf_api_2fsds_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2fbootstrap_2eproto
namespace envoy {
namespace api {
namespace v2 {

// ===================================================================

void LightstepConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightstepConfig::kCollectorClusterFieldNumber;
const int LightstepConfig::kAccessTokenFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightstepConfig::LightstepConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsLightstepConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LightstepConfig)
}
LightstepConfig::LightstepConfig(const LightstepConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collector_cluster().size() > 0) {
    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  access_token_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_token_file().size() > 0) {
    access_token_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_file_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LightstepConfig)
}

void LightstepConfig::SharedCtor() {
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LightstepConfig::~LightstepConfig() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LightstepConfig)
  SharedDtor();
}

void LightstepConfig::SharedDtor() {
  collector_cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LightstepConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LightstepConfig::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightstepConfig& LightstepConfig::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsLightstepConfig();
  return *internal_default_instance();
}

LightstepConfig* LightstepConfig::New(::google::protobuf::Arena* arena) const {
  LightstepConfig* n = new LightstepConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LightstepConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LightstepConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collector_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LightstepConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LightstepConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string collector_cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collector_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.LightstepConfig.collector_cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string access_token_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_token_file().data(), static_cast<int>(this->access_token_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.LightstepConfig.access_token_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LightstepConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LightstepConfig)
  return false;
#undef DO_
}

void LightstepConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LightstepConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.collector_cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collector_cluster(), output);
  }

  // string access_token_file = 2;
  if (this->access_token_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token_file().data(), static_cast<int>(this->access_token_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.access_token_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->access_token_file(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LightstepConfig)
}

::google::protobuf::uint8* LightstepConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LightstepConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.collector_cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collector_cluster(), target);
  }

  // string access_token_file = 2;
  if (this->access_token_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token_file().data(), static_cast<int>(this->access_token_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.access_token_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->access_token_file(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LightstepConfig)
  return target;
}

size_t LightstepConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LightstepConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector_cluster());
  }

  // string access_token_file = 2;
  if (this->access_token_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LightstepConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LightstepConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LightstepConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightstepConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LightstepConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LightstepConfig)
    MergeFrom(*source);
  }
}

void LightstepConfig::MergeFrom(const LightstepConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LightstepConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.collector_cluster().size() > 0) {

    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  if (from.access_token_file().size() > 0) {

    access_token_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_file_);
  }
}

void LightstepConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LightstepConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightstepConfig::CopyFrom(const LightstepConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LightstepConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightstepConfig::IsInitialized() const {
  return true;
}

void LightstepConfig::Swap(LightstepConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightstepConfig::InternalSwap(LightstepConfig* other) {
  using std::swap;
  collector_cluster_.Swap(&other->collector_cluster_);
  access_token_file_.Swap(&other->access_token_file_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LightstepConfig::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ZipkinConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZipkinConfig::kCollectorClusterFieldNumber;
const int ZipkinConfig::kCollectorEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZipkinConfig::ZipkinConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsZipkinConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ZipkinConfig)
}
ZipkinConfig::ZipkinConfig(const ZipkinConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collector_cluster().size() > 0) {
    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  collector_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collector_endpoint().size() > 0) {
    collector_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_endpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ZipkinConfig)
}

void ZipkinConfig::SharedCtor() {
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ZipkinConfig::~ZipkinConfig() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ZipkinConfig)
  SharedDtor();
}

void ZipkinConfig::SharedDtor() {
  collector_cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZipkinConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZipkinConfig::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZipkinConfig& ZipkinConfig::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsZipkinConfig();
  return *internal_default_instance();
}

ZipkinConfig* ZipkinConfig::New(::google::protobuf::Arena* arena) const {
  ZipkinConfig* n = new ZipkinConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZipkinConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ZipkinConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collector_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ZipkinConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ZipkinConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string collector_cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collector_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ZipkinConfig.collector_cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string collector_endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collector_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collector_endpoint().data(), static_cast<int>(this->collector_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ZipkinConfig.collector_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ZipkinConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ZipkinConfig)
  return false;
#undef DO_
}

void ZipkinConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ZipkinConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collector_cluster(), output);
  }

  // string collector_endpoint = 2;
  if (this->collector_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_endpoint().data(), static_cast<int>(this->collector_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collector_endpoint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ZipkinConfig)
}

::google::protobuf::uint8* ZipkinConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ZipkinConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collector_cluster(), target);
  }

  // string collector_endpoint = 2;
  if (this->collector_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_endpoint().data(), static_cast<int>(this->collector_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collector_endpoint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ZipkinConfig)
  return target;
}

size_t ZipkinConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ZipkinConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector_cluster());
  }

  // string collector_endpoint = 2;
  if (this->collector_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector_endpoint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZipkinConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ZipkinConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ZipkinConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZipkinConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ZipkinConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ZipkinConfig)
    MergeFrom(*source);
  }
}

void ZipkinConfig::MergeFrom(const ZipkinConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ZipkinConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.collector_cluster().size() > 0) {

    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  if (from.collector_endpoint().size() > 0) {

    collector_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_endpoint_);
  }
}

void ZipkinConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ZipkinConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZipkinConfig::CopyFrom(const ZipkinConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ZipkinConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZipkinConfig::IsInitialized() const {
  return true;
}

void ZipkinConfig::Swap(ZipkinConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZipkinConfig::InternalSwap(ZipkinConfig* other) {
  using std::swap;
  collector_cluster_.Swap(&other->collector_cluster_);
  collector_endpoint_.Swap(&other->collector_endpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZipkinConfig::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tracing_Http::InitAsDefaultInstance() {
  ::envoy::api::v2::_Tracing_Http_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracing_Http::kNameFieldNumber;
const int Tracing_Http::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracing_Http::Tracing_Http()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsTracing_Http();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Tracing.Http)
}
Tracing_Http::Tracing_Http(const Tracing_Http& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    config_ = new ::google::protobuf::Struct(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Tracing.Http)
}

void Tracing_Http::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_ = NULL;
  _cached_size_ = 0;
}

Tracing_Http::~Tracing_Http() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Tracing.Http)
  SharedDtor();
}

void Tracing_Http::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void Tracing_Http::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracing_Http::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tracing_Http& Tracing_Http::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsTracing_Http();
  return *internal_default_instance();
}

Tracing_Http* Tracing_Http::New(::google::protobuf::Arena* arena) const {
  Tracing_Http* n = new Tracing_Http;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracing_Http::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Tracing.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Tracing_Http::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Tracing.Http)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Tracing.Http.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Tracing.Http)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Tracing.Http)
  return false;
#undef DO_
}

void Tracing_Http::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Tracing.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Tracing.Http.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Tracing.Http)
}

::google::protobuf::uint8* Tracing_Http::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Tracing.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Tracing.Http.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Tracing.Http)
  return target;
}

size_t Tracing_Http::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Tracing.Http)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracing_Http::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Tracing.Http)
  GOOGLE_DCHECK_NE(&from, this);
  const Tracing_Http* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracing_Http>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Tracing.Http)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Tracing.Http)
    MergeFrom(*source);
  }
}

void Tracing_Http::MergeFrom(const Tracing_Http& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Tracing.Http)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
  }
}

void Tracing_Http::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Tracing.Http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracing_Http::CopyFrom(const Tracing_Http& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Tracing.Http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tracing_Http::IsInitialized() const {
  return true;
}

void Tracing_Http::Swap(Tracing_Http* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracing_Http::InternalSwap(Tracing_Http* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracing_Http::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tracing::InitAsDefaultInstance() {
  ::envoy::api::v2::_Tracing_default_instance_._instance.get_mutable()->http_ = const_cast< ::envoy::api::v2::Tracing_Http*>(
      ::envoy::api::v2::Tracing_Http::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracing::kHttpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracing::Tracing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsTracing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Tracing)
}
Tracing::Tracing(const Tracing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_http()) {
    http_ = new ::envoy::api::v2::Tracing_Http(*from.http_);
  } else {
    http_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Tracing)
}

void Tracing::SharedCtor() {
  http_ = NULL;
  _cached_size_ = 0;
}

Tracing::~Tracing() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Tracing)
  SharedDtor();
}

void Tracing::SharedDtor() {
  if (this != internal_default_instance()) delete http_;
}

void Tracing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracing::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tracing& Tracing::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsTracing();
  return *internal_default_instance();
}

Tracing* Tracing::New(::google::protobuf::Arena* arena) const {
  Tracing* n = new Tracing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracing::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && http_ != NULL) {
    delete http_;
  }
  http_ = NULL;
  _internal_metadata_.Clear();
}

bool Tracing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Tracing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Tracing.Http http = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Tracing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Tracing)
  return false;
#undef DO_
}

void Tracing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Tracing.Http http = 1;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->http_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Tracing)
}

::google::protobuf::uint8* Tracing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Tracing.Http http = 1;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->http_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Tracing)
  return target;
}

size_t Tracing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Tracing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.Tracing.Http http = 1;
  if (this->has_http()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->http_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Tracing)
  GOOGLE_DCHECK_NE(&from, this);
  const Tracing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Tracing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Tracing)
    MergeFrom(*source);
  }
}

void Tracing::MergeFrom(const Tracing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Tracing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_http()) {
    mutable_http()->::envoy::api::v2::Tracing_Http::MergeFrom(from.http());
  }
}

void Tracing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Tracing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracing::CopyFrom(const Tracing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Tracing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tracing::IsInitialized() const {
  return true;
}

void Tracing::Swap(Tracing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracing::InternalSwap(Tracing* other) {
  using std::swap;
  swap(http_, other->http_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracing::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Admin::InitAsDefaultInstance() {
  ::envoy::api::v2::_Admin_default_instance_._instance.get_mutable()->address_ = const_cast< ::envoy::api::v2::Address*>(
      ::envoy::api::v2::Address::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Admin::kAccessLogPathFieldNumber;
const int Admin::kProfilePathFieldNumber;
const int Admin::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Admin::Admin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsAdmin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Admin)
}
Admin::Admin(const Admin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  access_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_log_path().size() > 0) {
    access_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_path_);
  }
  profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.profile_path().size() > 0) {
    profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profile_path_);
  }
  if (from.has_address()) {
    address_ = new ::envoy::api::v2::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Admin)
}

void Admin::SharedCtor() {
  access_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = NULL;
  _cached_size_ = 0;
}

Admin::~Admin() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Admin)
  SharedDtor();
}

void Admin::SharedDtor() {
  access_log_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void Admin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Admin& Admin::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsAdmin();
  return *internal_default_instance();
}

Admin* Admin::New(::google::protobuf::Arena* arena) const {
  Admin* n = new Admin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Admin::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Admin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  _internal_metadata_.Clear();
}

bool Admin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Admin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string access_log_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_log_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_log_path().data(), static_cast<int>(this->access_log_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Admin.access_log_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string profile_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profile_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->profile_path().data(), static_cast<int>(this->profile_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Admin.profile_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Address address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Admin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Admin)
  return false;
#undef DO_
}

void Admin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Admin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_log_path = 1;
  if (this->access_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_path().data(), static_cast<int>(this->access_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.access_log_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_log_path(), output);
  }

  // string profile_path = 2;
  if (this->profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profile_path().data(), static_cast<int>(this->profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.profile_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->profile_path(), output);
  }

  // .envoy.api.v2.Address address = 3;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->address_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Admin)
}

::google::protobuf::uint8* Admin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Admin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_log_path = 1;
  if (this->access_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_path().data(), static_cast<int>(this->access_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.access_log_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_log_path(), target);
  }

  // string profile_path = 2;
  if (this->profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profile_path().data(), static_cast<int>(this->profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.profile_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->profile_path(), target);
  }

  // .envoy.api.v2.Address address = 3;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->address_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Admin)
  return target;
}

size_t Admin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Admin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string access_log_path = 1;
  if (this->access_log_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_log_path());
  }

  // string profile_path = 2;
  if (this->profile_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->profile_path());
  }

  // .envoy.api.v2.Address address = 3;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Admin)
  GOOGLE_DCHECK_NE(&from, this);
  const Admin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Admin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Admin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Admin)
    MergeFrom(*source);
  }
}

void Admin::MergeFrom(const Admin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Admin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.access_log_path().size() > 0) {

    access_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_path_);
  }
  if (from.profile_path().size() > 0) {

    profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profile_path_);
  }
  if (from.has_address()) {
    mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
  }
}

void Admin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Admin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin::CopyFrom(const Admin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Admin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin::IsInitialized() const {
  return true;
}

void Admin::Swap(Admin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Admin::InternalSwap(Admin* other) {
  using std::swap;
  access_log_path_.Swap(&other->access_log_path_);
  profile_path_.Swap(&other->profile_path_);
  swap(address_, other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Admin::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterManager_OutlierDetection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterManager_OutlierDetection::kEventLogPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterManager_OutlierDetection::ClusterManager_OutlierDetection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsClusterManager_OutlierDetection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterManager.OutlierDetection)
}
ClusterManager_OutlierDetection::ClusterManager_OutlierDetection(const ClusterManager_OutlierDetection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_log_path().size() > 0) {
    event_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_log_path_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterManager.OutlierDetection)
}

void ClusterManager_OutlierDetection::SharedCtor() {
  event_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClusterManager_OutlierDetection::~ClusterManager_OutlierDetection() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterManager.OutlierDetection)
  SharedDtor();
}

void ClusterManager_OutlierDetection::SharedDtor() {
  event_log_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterManager_OutlierDetection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterManager_OutlierDetection::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterManager_OutlierDetection& ClusterManager_OutlierDetection::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsClusterManager_OutlierDetection();
  return *internal_default_instance();
}

ClusterManager_OutlierDetection* ClusterManager_OutlierDetection::New(::google::protobuf::Arena* arena) const {
  ClusterManager_OutlierDetection* n = new ClusterManager_OutlierDetection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterManager_OutlierDetection::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterManager.OutlierDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClusterManager_OutlierDetection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterManager.OutlierDetection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_log_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_log_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_log_path().data(), static_cast<int>(this->event_log_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterManager.OutlierDetection.event_log_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterManager.OutlierDetection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterManager.OutlierDetection)
  return false;
#undef DO_
}

void ClusterManager_OutlierDetection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterManager.OutlierDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_log_path = 1;
  if (this->event_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_log_path().data(), static_cast<int>(this->event_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.OutlierDetection.event_log_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_log_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterManager.OutlierDetection)
}

::google::protobuf::uint8* ClusterManager_OutlierDetection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterManager.OutlierDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_log_path = 1;
  if (this->event_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_log_path().data(), static_cast<int>(this->event_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.OutlierDetection.event_log_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_log_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterManager.OutlierDetection)
  return target;
}

size_t ClusterManager_OutlierDetection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterManager.OutlierDetection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string event_log_path = 1;
  if (this->event_log_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_log_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterManager_OutlierDetection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterManager_OutlierDetection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterManager_OutlierDetection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterManager.OutlierDetection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterManager.OutlierDetection)
    MergeFrom(*source);
  }
}

void ClusterManager_OutlierDetection::MergeFrom(const ClusterManager_OutlierDetection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_log_path().size() > 0) {

    event_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_log_path_);
  }
}

void ClusterManager_OutlierDetection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterManager_OutlierDetection::CopyFrom(const ClusterManager_OutlierDetection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterManager_OutlierDetection::IsInitialized() const {
  return true;
}

void ClusterManager_OutlierDetection::Swap(ClusterManager_OutlierDetection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterManager_OutlierDetection::InternalSwap(ClusterManager_OutlierDetection* other) {
  using std::swap;
  event_log_path_.Swap(&other->event_log_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterManager_OutlierDetection::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterManager::InitAsDefaultInstance() {
  ::envoy::api::v2::_ClusterManager_default_instance_._instance.get_mutable()->outlier_detection_ = const_cast< ::envoy::api::v2::ClusterManager_OutlierDetection*>(
      ::envoy::api::v2::ClusterManager_OutlierDetection::internal_default_instance());
  ::envoy::api::v2::_ClusterManager_default_instance_._instance.get_mutable()->upstream_bind_config_ = const_cast< ::envoy::api::v2::BindConfig*>(
      ::envoy::api::v2::BindConfig::internal_default_instance());
  ::envoy::api::v2::_ClusterManager_default_instance_._instance.get_mutable()->load_stats_config_ = const_cast< ::envoy::api::v2::ApiConfigSource*>(
      ::envoy::api::v2::ApiConfigSource::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterManager::kLocalClusterNameFieldNumber;
const int ClusterManager::kOutlierDetectionFieldNumber;
const int ClusterManager::kUpstreamBindConfigFieldNumber;
const int ClusterManager::kLoadStatsConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterManager::ClusterManager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsClusterManager();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterManager)
}
ClusterManager::ClusterManager(const ClusterManager& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_cluster_name().size() > 0) {
    local_cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_cluster_name_);
  }
  if (from.has_outlier_detection()) {
    outlier_detection_ = new ::envoy::api::v2::ClusterManager_OutlierDetection(*from.outlier_detection_);
  } else {
    outlier_detection_ = NULL;
  }
  if (from.has_upstream_bind_config()) {
    upstream_bind_config_ = new ::envoy::api::v2::BindConfig(*from.upstream_bind_config_);
  } else {
    upstream_bind_config_ = NULL;
  }
  if (from.has_load_stats_config()) {
    load_stats_config_ = new ::envoy::api::v2::ApiConfigSource(*from.load_stats_config_);
  } else {
    load_stats_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterManager)
}

void ClusterManager::SharedCtor() {
  local_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&outlier_detection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_stats_config_) -
      reinterpret_cast<char*>(&outlier_detection_)) + sizeof(load_stats_config_));
  _cached_size_ = 0;
}

ClusterManager::~ClusterManager() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterManager)
  SharedDtor();
}

void ClusterManager::SharedDtor() {
  local_cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete outlier_detection_;
  if (this != internal_default_instance()) delete upstream_bind_config_;
  if (this != internal_default_instance()) delete load_stats_config_;
}

void ClusterManager::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterManager::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterManager& ClusterManager::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsClusterManager();
  return *internal_default_instance();
}

ClusterManager* ClusterManager::New(::google::protobuf::Arena* arena) const {
  ClusterManager* n = new ClusterManager;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterManager::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && outlier_detection_ != NULL) {
    delete outlier_detection_;
  }
  outlier_detection_ = NULL;
  if (GetArenaNoVirtual() == NULL && upstream_bind_config_ != NULL) {
    delete upstream_bind_config_;
  }
  upstream_bind_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && load_stats_config_ != NULL) {
    delete load_stats_config_;
  }
  load_stats_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ClusterManager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterManager)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string local_cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_cluster_name().data(), static_cast<int>(this->local_cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterManager.local_cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_outlier_detection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.BindConfig upstream_bind_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_upstream_bind_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ApiConfigSource load_stats_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load_stats_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterManager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterManager)
  return false;
#undef DO_
}

void ClusterManager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_cluster_name = 1;
  if (this->local_cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_cluster_name().data(), static_cast<int>(this->local_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.local_cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->local_cluster_name(), output);
  }

  // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
  if (this->has_outlier_detection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->outlier_detection_, output);
  }

  // .envoy.api.v2.BindConfig upstream_bind_config = 3;
  if (this->has_upstream_bind_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->upstream_bind_config_, output);
  }

  // .envoy.api.v2.ApiConfigSource load_stats_config = 4;
  if (this->has_load_stats_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->load_stats_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterManager)
}

::google::protobuf::uint8* ClusterManager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_cluster_name = 1;
  if (this->local_cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_cluster_name().data(), static_cast<int>(this->local_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.local_cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->local_cluster_name(), target);
  }

  // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
  if (this->has_outlier_detection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->outlier_detection_, deterministic, target);
  }

  // .envoy.api.v2.BindConfig upstream_bind_config = 3;
  if (this->has_upstream_bind_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->upstream_bind_config_, deterministic, target);
  }

  // .envoy.api.v2.ApiConfigSource load_stats_config = 4;
  if (this->has_load_stats_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->load_stats_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterManager)
  return target;
}

size_t ClusterManager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterManager)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string local_cluster_name = 1;
  if (this->local_cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_cluster_name());
  }

  // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
  if (this->has_outlier_detection()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->outlier_detection_);
  }

  // .envoy.api.v2.BindConfig upstream_bind_config = 3;
  if (this->has_upstream_bind_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->upstream_bind_config_);
  }

  // .envoy.api.v2.ApiConfigSource load_stats_config = 4;
  if (this->has_load_stats_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->load_stats_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterManager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterManager)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterManager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterManager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterManager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterManager)
    MergeFrom(*source);
  }
}

void ClusterManager::MergeFrom(const ClusterManager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterManager)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_cluster_name().size() > 0) {

    local_cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_cluster_name_);
  }
  if (from.has_outlier_detection()) {
    mutable_outlier_detection()->::envoy::api::v2::ClusterManager_OutlierDetection::MergeFrom(from.outlier_detection());
  }
  if (from.has_upstream_bind_config()) {
    mutable_upstream_bind_config()->::envoy::api::v2::BindConfig::MergeFrom(from.upstream_bind_config());
  }
  if (from.has_load_stats_config()) {
    mutable_load_stats_config()->::envoy::api::v2::ApiConfigSource::MergeFrom(from.load_stats_config());
  }
}

void ClusterManager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterManager::CopyFrom(const ClusterManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterManager::IsInitialized() const {
  return true;
}

void ClusterManager::Swap(ClusterManager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterManager::InternalSwap(ClusterManager* other) {
  using std::swap;
  local_cluster_name_.Swap(&other->local_cluster_name_);
  swap(outlier_detection_, other->outlier_detection_);
  swap(upstream_bind_config_, other->upstream_bind_config_);
  swap(load_stats_config_, other->load_stats_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterManager::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatsdSink::InitAsDefaultInstance() {
  ::envoy::api::v2::_StatsdSink_default_instance_.address_ = const_cast< ::envoy::api::v2::Address*>(
      ::envoy::api::v2::Address::internal_default_instance());
  ::envoy::api::v2::_StatsdSink_default_instance_.tcp_cluster_name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatsdSink::kAddressFieldNumber;
const int StatsdSink::kTcpClusterNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatsdSink::StatsdSink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsdSink();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.StatsdSink)
}
StatsdSink::StatsdSink(const StatsdSink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_statsd_specifier();
  switch (from.statsd_specifier_case()) {
    case kAddress: {
      mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
      break;
    }
    case kTcpClusterName: {
      set_tcp_cluster_name(from.tcp_cluster_name());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.StatsdSink)
}

void StatsdSink::SharedCtor() {
  clear_has_statsd_specifier();
  _cached_size_ = 0;
}

StatsdSink::~StatsdSink() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.StatsdSink)
  SharedDtor();
}

void StatsdSink::SharedDtor() {
  if (has_statsd_specifier()) {
    clear_statsd_specifier();
  }
}

void StatsdSink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatsdSink::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatsdSink& StatsdSink::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsdSink();
  return *internal_default_instance();
}

StatsdSink* StatsdSink::New(::google::protobuf::Arena* arena) const {
  StatsdSink* n = new StatsdSink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatsdSink::clear_statsd_specifier() {
// @@protoc_insertion_point(one_of_clear_start:envoy.api.v2.StatsdSink)
  switch (statsd_specifier_case()) {
    case kAddress: {
      delete statsd_specifier_.address_;
      break;
    }
    case kTcpClusterName: {
      statsd_specifier_.tcp_cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STATSD_SPECIFIER_NOT_SET;
}


void StatsdSink::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.StatsdSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_statsd_specifier();
  _internal_metadata_.Clear();
}

bool StatsdSink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.StatsdSink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Address address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tcp_cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tcp_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tcp_cluster_name().data(), static_cast<int>(this->tcp_cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.StatsdSink.tcp_cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.StatsdSink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.StatsdSink)
  return false;
#undef DO_
}

void StatsdSink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.StatsdSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Address address = 1;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *statsd_specifier_.address_, output);
  }

  // string tcp_cluster_name = 2;
  if (has_tcp_cluster_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tcp_cluster_name().data(), static_cast<int>(this->tcp_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsdSink.tcp_cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tcp_cluster_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.StatsdSink)
}

::google::protobuf::uint8* StatsdSink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.StatsdSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Address address = 1;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *statsd_specifier_.address_, deterministic, target);
  }

  // string tcp_cluster_name = 2;
  if (has_tcp_cluster_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tcp_cluster_name().data(), static_cast<int>(this->tcp_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsdSink.tcp_cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tcp_cluster_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.StatsdSink)
  return target;
}

size_t StatsdSink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.StatsdSink)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (statsd_specifier_case()) {
    // .envoy.api.v2.Address address = 1;
    case kAddress: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *statsd_specifier_.address_);
      break;
    }
    // string tcp_cluster_name = 2;
    case kTcpClusterName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tcp_cluster_name());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatsdSink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.StatsdSink)
  GOOGLE_DCHECK_NE(&from, this);
  const StatsdSink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatsdSink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.StatsdSink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.StatsdSink)
    MergeFrom(*source);
  }
}

void StatsdSink::MergeFrom(const StatsdSink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.StatsdSink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.statsd_specifier_case()) {
    case kAddress: {
      mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
      break;
    }
    case kTcpClusterName: {
      set_tcp_cluster_name(from.tcp_cluster_name());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void StatsdSink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.StatsdSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatsdSink::CopyFrom(const StatsdSink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.StatsdSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsdSink::IsInitialized() const {
  return true;
}

void StatsdSink::Swap(StatsdSink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatsdSink::InternalSwap(StatsdSink* other) {
  using std::swap;
  swap(statsd_specifier_, other->statsd_specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatsdSink::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatsSink::InitAsDefaultInstance() {
  ::envoy::api::v2::_StatsSink_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatsSink::kNameFieldNumber;
const int StatsSink::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatsSink::StatsSink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsSink();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.StatsSink)
}
StatsSink::StatsSink(const StatsSink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    config_ = new ::google::protobuf::Struct(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.StatsSink)
}

void StatsSink::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_ = NULL;
  _cached_size_ = 0;
}

StatsSink::~StatsSink() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.StatsSink)
  SharedDtor();
}

void StatsSink::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void StatsSink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatsSink::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatsSink& StatsSink::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsSink();
  return *internal_default_instance();
}

StatsSink* StatsSink::New(::google::protobuf::Arena* arena) const {
  StatsSink* n = new StatsSink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatsSink::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.StatsSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool StatsSink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.StatsSink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.StatsSink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.StatsSink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.StatsSink)
  return false;
#undef DO_
}

void StatsSink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.StatsSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsSink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.StatsSink)
}

::google::protobuf::uint8* StatsSink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.StatsSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsSink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.StatsSink)
  return target;
}

size_t StatsSink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.StatsSink)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatsSink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.StatsSink)
  GOOGLE_DCHECK_NE(&from, this);
  const StatsSink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatsSink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.StatsSink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.StatsSink)
    MergeFrom(*source);
  }
}

void StatsSink::MergeFrom(const StatsSink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.StatsSink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
  }
}

void StatsSink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.StatsSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatsSink::CopyFrom(const StatsSink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.StatsSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsSink::IsInitialized() const {
  return true;
}

void StatsSink::Swap(StatsSink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatsSink::InternalSwap(StatsSink* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatsSink::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TagSpecifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TagSpecifier::kTagNameFieldNumber;
const int TagSpecifier::kRegexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TagSpecifier::TagSpecifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsTagSpecifier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.TagSpecifier)
}
TagSpecifier::TagSpecifier(const TagSpecifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag_name().size() > 0) {
    tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
  }
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.regex().size() > 0) {
    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.TagSpecifier)
}

void TagSpecifier::SharedCtor() {
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TagSpecifier::~TagSpecifier() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.TagSpecifier)
  SharedDtor();
}

void TagSpecifier::SharedDtor() {
  tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TagSpecifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TagSpecifier::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TagSpecifier& TagSpecifier::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsTagSpecifier();
  return *internal_default_instance();
}

TagSpecifier* TagSpecifier::New(::google::protobuf::Arena* arena) const {
  TagSpecifier* n = new TagSpecifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TagSpecifier::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.TagSpecifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TagSpecifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.TagSpecifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tag_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag_name().data(), static_cast<int>(this->tag_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.TagSpecifier.tag_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.TagSpecifier.regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.TagSpecifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.TagSpecifier)
  return false;
#undef DO_
}

void TagSpecifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.TagSpecifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tag_name = 1;
  if (this->tag_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.TagSpecifier.tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag_name(), output);
  }

  // string regex = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.TagSpecifier.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->regex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.TagSpecifier)
}

::google::protobuf::uint8* TagSpecifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.TagSpecifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tag_name = 1;
  if (this->tag_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.TagSpecifier.tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag_name(), target);
  }

  // string regex = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.TagSpecifier.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->regex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.TagSpecifier)
  return target;
}

size_t TagSpecifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.TagSpecifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tag_name = 1;
  if (this->tag_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag_name());
  }

  // string regex = 2;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TagSpecifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.TagSpecifier)
  GOOGLE_DCHECK_NE(&from, this);
  const TagSpecifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TagSpecifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.TagSpecifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.TagSpecifier)
    MergeFrom(*source);
  }
}

void TagSpecifier::MergeFrom(const TagSpecifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.TagSpecifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tag_name().size() > 0) {

    tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
  }
  if (from.regex().size() > 0) {

    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
}

void TagSpecifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.TagSpecifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TagSpecifier::CopyFrom(const TagSpecifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.TagSpecifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TagSpecifier::IsInitialized() const {
  return true;
}

void TagSpecifier::Swap(TagSpecifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TagSpecifier::InternalSwap(TagSpecifier* other) {
  using std::swap;
  tag_name_.Swap(&other->tag_name_);
  regex_.Swap(&other->regex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TagSpecifier::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatsConfig::InitAsDefaultInstance() {
  ::envoy::api::v2::_StatsConfig_default_instance_._instance.get_mutable()->use_all_default_tags_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatsConfig::kStatsTagsFieldNumber;
const int StatsConfig::kUseAllDefaultTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatsConfig::StatsConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.StatsConfig)
}
StatsConfig::StatsConfig(const StatsConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stats_tags_(from.stats_tags_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_use_all_default_tags()) {
    use_all_default_tags_ = new ::google::protobuf::BoolValue(*from.use_all_default_tags_);
  } else {
    use_all_default_tags_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.StatsConfig)
}

void StatsConfig::SharedCtor() {
  use_all_default_tags_ = NULL;
  _cached_size_ = 0;
}

StatsConfig::~StatsConfig() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.StatsConfig)
  SharedDtor();
}

void StatsConfig::SharedDtor() {
  if (this != internal_default_instance()) delete use_all_default_tags_;
}

void StatsConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatsConfig::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatsConfig& StatsConfig::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsStatsConfig();
  return *internal_default_instance();
}

StatsConfig* StatsConfig::New(::google::protobuf::Arena* arena) const {
  StatsConfig* n = new StatsConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.StatsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_tags_.Clear();
  if (GetArenaNoVirtual() == NULL && use_all_default_tags_ != NULL) {
    delete use_all_default_tags_;
  }
  use_all_default_tags_ = NULL;
  _internal_metadata_.Clear();
}

bool StatsConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.StatsConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .envoy.api.v2.TagSpecifier stats_tags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stats_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue use_all_default_tags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_use_all_default_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.StatsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.StatsConfig)
  return false;
#undef DO_
}

void StatsConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.StatsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.TagSpecifier stats_tags = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stats_tags(static_cast<int>(i)), output);
  }

  // .google.protobuf.BoolValue use_all_default_tags = 2;
  if (this->has_use_all_default_tags()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->use_all_default_tags_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.StatsConfig)
}

::google::protobuf::uint8* StatsConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.StatsConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.TagSpecifier stats_tags = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->stats_tags(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.BoolValue use_all_default_tags = 2;
  if (this->has_use_all_default_tags()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->use_all_default_tags_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.StatsConfig)
  return target;
}

size_t StatsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.StatsConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.TagSpecifier stats_tags = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats_tags(static_cast<int>(i)));
    }
  }

  // .google.protobuf.BoolValue use_all_default_tags = 2;
  if (this->has_use_all_default_tags()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->use_all_default_tags_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatsConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.StatsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const StatsConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatsConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.StatsConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.StatsConfig)
    MergeFrom(*source);
  }
}

void StatsConfig::MergeFrom(const StatsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.StatsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_tags_.MergeFrom(from.stats_tags_);
  if (from.has_use_all_default_tags()) {
    mutable_use_all_default_tags()->::google::protobuf::BoolValue::MergeFrom(from.use_all_default_tags());
  }
}

void StatsConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.StatsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatsConfig::CopyFrom(const StatsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.StatsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsConfig::IsInitialized() const {
  return true;
}

void StatsConfig::Swap(StatsConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatsConfig::InternalSwap(StatsConfig* other) {
  using std::swap;
  stats_tags_.InternalSwap(&other->stats_tags_);
  swap(use_all_default_tags_, other->use_all_default_tags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatsConfig::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Watchdog::InitAsDefaultInstance() {
  ::envoy::api::v2::_Watchdog_default_instance_._instance.get_mutable()->miss_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::envoy::api::v2::_Watchdog_default_instance_._instance.get_mutable()->megamiss_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::envoy::api::v2::_Watchdog_default_instance_._instance.get_mutable()->kill_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::envoy::api::v2::_Watchdog_default_instance_._instance.get_mutable()->multikill_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Watchdog::kMissTimeoutFieldNumber;
const int Watchdog::kMegamissTimeoutFieldNumber;
const int Watchdog::kKillTimeoutFieldNumber;
const int Watchdog::kMultikillTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Watchdog::Watchdog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsWatchdog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Watchdog)
}
Watchdog::Watchdog(const Watchdog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_miss_timeout()) {
    miss_timeout_ = new ::google::protobuf::Duration(*from.miss_timeout_);
  } else {
    miss_timeout_ = NULL;
  }
  if (from.has_megamiss_timeout()) {
    megamiss_timeout_ = new ::google::protobuf::Duration(*from.megamiss_timeout_);
  } else {
    megamiss_timeout_ = NULL;
  }
  if (from.has_kill_timeout()) {
    kill_timeout_ = new ::google::protobuf::Duration(*from.kill_timeout_);
  } else {
    kill_timeout_ = NULL;
  }
  if (from.has_multikill_timeout()) {
    multikill_timeout_ = new ::google::protobuf::Duration(*from.multikill_timeout_);
  } else {
    multikill_timeout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Watchdog)
}

void Watchdog::SharedCtor() {
  ::memset(&miss_timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&multikill_timeout_) -
      reinterpret_cast<char*>(&miss_timeout_)) + sizeof(multikill_timeout_));
  _cached_size_ = 0;
}

Watchdog::~Watchdog() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Watchdog)
  SharedDtor();
}

void Watchdog::SharedDtor() {
  if (this != internal_default_instance()) delete miss_timeout_;
  if (this != internal_default_instance()) delete megamiss_timeout_;
  if (this != internal_default_instance()) delete kill_timeout_;
  if (this != internal_default_instance()) delete multikill_timeout_;
}

void Watchdog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Watchdog::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Watchdog& Watchdog::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsWatchdog();
  return *internal_default_instance();
}

Watchdog* Watchdog::New(::google::protobuf::Arena* arena) const {
  Watchdog* n = new Watchdog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Watchdog::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Watchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && miss_timeout_ != NULL) {
    delete miss_timeout_;
  }
  miss_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && megamiss_timeout_ != NULL) {
    delete megamiss_timeout_;
  }
  megamiss_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && kill_timeout_ != NULL) {
    delete kill_timeout_;
  }
  kill_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && multikill_timeout_ != NULL) {
    delete multikill_timeout_;
  }
  multikill_timeout_ = NULL;
  _internal_metadata_.Clear();
}

bool Watchdog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Watchdog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration miss_timeout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_miss_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration megamiss_timeout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_megamiss_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration kill_timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kill_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration multikill_timeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multikill_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Watchdog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Watchdog)
  return false;
#undef DO_
}

void Watchdog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Watchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration miss_timeout = 1;
  if (this->has_miss_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->miss_timeout_, output);
  }

  // .google.protobuf.Duration megamiss_timeout = 2;
  if (this->has_megamiss_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->megamiss_timeout_, output);
  }

  // .google.protobuf.Duration kill_timeout = 3;
  if (this->has_kill_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->kill_timeout_, output);
  }

  // .google.protobuf.Duration multikill_timeout = 4;
  if (this->has_multikill_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->multikill_timeout_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Watchdog)
}

::google::protobuf::uint8* Watchdog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Watchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration miss_timeout = 1;
  if (this->has_miss_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->miss_timeout_, deterministic, target);
  }

  // .google.protobuf.Duration megamiss_timeout = 2;
  if (this->has_megamiss_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->megamiss_timeout_, deterministic, target);
  }

  // .google.protobuf.Duration kill_timeout = 3;
  if (this->has_kill_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->kill_timeout_, deterministic, target);
  }

  // .google.protobuf.Duration multikill_timeout = 4;
  if (this->has_multikill_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->multikill_timeout_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Watchdog)
  return target;
}

size_t Watchdog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Watchdog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration miss_timeout = 1;
  if (this->has_miss_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->miss_timeout_);
  }

  // .google.protobuf.Duration megamiss_timeout = 2;
  if (this->has_megamiss_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->megamiss_timeout_);
  }

  // .google.protobuf.Duration kill_timeout = 3;
  if (this->has_kill_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->kill_timeout_);
  }

  // .google.protobuf.Duration multikill_timeout = 4;
  if (this->has_multikill_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->multikill_timeout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Watchdog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Watchdog)
  GOOGLE_DCHECK_NE(&from, this);
  const Watchdog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Watchdog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Watchdog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Watchdog)
    MergeFrom(*source);
  }
}

void Watchdog::MergeFrom(const Watchdog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Watchdog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_miss_timeout()) {
    mutable_miss_timeout()->::google::protobuf::Duration::MergeFrom(from.miss_timeout());
  }
  if (from.has_megamiss_timeout()) {
    mutable_megamiss_timeout()->::google::protobuf::Duration::MergeFrom(from.megamiss_timeout());
  }
  if (from.has_kill_timeout()) {
    mutable_kill_timeout()->::google::protobuf::Duration::MergeFrom(from.kill_timeout());
  }
  if (from.has_multikill_timeout()) {
    mutable_multikill_timeout()->::google::protobuf::Duration::MergeFrom(from.multikill_timeout());
  }
}

void Watchdog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Watchdog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Watchdog::CopyFrom(const Watchdog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Watchdog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Watchdog::IsInitialized() const {
  return true;
}

void Watchdog::Swap(Watchdog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Watchdog::InternalSwap(Watchdog* other) {
  using std::swap;
  swap(miss_timeout_, other->miss_timeout_);
  swap(megamiss_timeout_, other->megamiss_timeout_);
  swap(kill_timeout_, other->kill_timeout_);
  swap(multikill_timeout_, other->multikill_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Watchdog::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Runtime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Runtime::kSymlinkRootFieldNumber;
const int Runtime::kSubdirectoryFieldNumber;
const int Runtime::kOverrideSubdirectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Runtime::Runtime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsRuntime();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Runtime)
}
Runtime::Runtime(const Runtime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symlink_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symlink_root().size() > 0) {
    symlink_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symlink_root_);
  }
  subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subdirectory().size() > 0) {
    subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subdirectory_);
  }
  override_subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.override_subdirectory().size() > 0) {
    override_subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.override_subdirectory_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Runtime)
}

void Runtime::SharedCtor() {
  symlink_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  override_subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Runtime::~Runtime() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Runtime)
  SharedDtor();
}

void Runtime::SharedDtor() {
  symlink_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdirectory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  override_subdirectory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Runtime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Runtime::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Runtime& Runtime::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsRuntime();
  return *internal_default_instance();
}

Runtime* Runtime::New(::google::protobuf::Arena* arena) const {
  Runtime* n = new Runtime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Runtime::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Runtime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symlink_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  override_subdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Runtime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Runtime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symlink_root = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symlink_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symlink_root().data(), static_cast<int>(this->symlink_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Runtime.symlink_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subdirectory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subdirectory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subdirectory().data(), static_cast<int>(this->subdirectory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Runtime.subdirectory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string override_subdirectory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_override_subdirectory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->override_subdirectory().data(), static_cast<int>(this->override_subdirectory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Runtime.override_subdirectory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Runtime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Runtime)
  return false;
#undef DO_
}

void Runtime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Runtime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symlink_root = 1;
  if (this->symlink_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symlink_root().data(), static_cast<int>(this->symlink_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.symlink_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symlink_root(), output);
  }

  // string subdirectory = 2;
  if (this->subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subdirectory().data(), static_cast<int>(this->subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.subdirectory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subdirectory(), output);
  }

  // string override_subdirectory = 3;
  if (this->override_subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->override_subdirectory().data(), static_cast<int>(this->override_subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.override_subdirectory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->override_subdirectory(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Runtime)
}

::google::protobuf::uint8* Runtime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Runtime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symlink_root = 1;
  if (this->symlink_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symlink_root().data(), static_cast<int>(this->symlink_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.symlink_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symlink_root(), target);
  }

  // string subdirectory = 2;
  if (this->subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subdirectory().data(), static_cast<int>(this->subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.subdirectory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subdirectory(), target);
  }

  // string override_subdirectory = 3;
  if (this->override_subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->override_subdirectory().data(), static_cast<int>(this->override_subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.override_subdirectory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->override_subdirectory(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Runtime)
  return target;
}

size_t Runtime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Runtime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symlink_root = 1;
  if (this->symlink_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symlink_root());
  }

  // string subdirectory = 2;
  if (this->subdirectory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subdirectory());
  }

  // string override_subdirectory = 3;
  if (this->override_subdirectory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->override_subdirectory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Runtime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Runtime)
  GOOGLE_DCHECK_NE(&from, this);
  const Runtime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Runtime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Runtime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Runtime)
    MergeFrom(*source);
  }
}

void Runtime::MergeFrom(const Runtime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Runtime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symlink_root().size() > 0) {

    symlink_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symlink_root_);
  }
  if (from.subdirectory().size() > 0) {

    subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subdirectory_);
  }
  if (from.override_subdirectory().size() > 0) {

    override_subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.override_subdirectory_);
  }
}

void Runtime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Runtime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Runtime::CopyFrom(const Runtime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Runtime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Runtime::IsInitialized() const {
  return true;
}

void Runtime::Swap(Runtime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Runtime::InternalSwap(Runtime* other) {
  using std::swap;
  symlink_root_.Swap(&other->symlink_root_);
  subdirectory_.Swap(&other->subdirectory_);
  override_subdirectory_.Swap(&other->override_subdirectory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Runtime::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RateLimitServiceConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RateLimitServiceConfig::kClusterNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RateLimitServiceConfig::RateLimitServiceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsRateLimitServiceConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.RateLimitServiceConfig)
}
RateLimitServiceConfig::RateLimitServiceConfig(const RateLimitServiceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.RateLimitServiceConfig)
}

void RateLimitServiceConfig::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RateLimitServiceConfig::~RateLimitServiceConfig() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.RateLimitServiceConfig)
  SharedDtor();
}

void RateLimitServiceConfig::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RateLimitServiceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RateLimitServiceConfig::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RateLimitServiceConfig& RateLimitServiceConfig::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsRateLimitServiceConfig();
  return *internal_default_instance();
}

RateLimitServiceConfig* RateLimitServiceConfig::New(::google::protobuf::Arena* arena) const {
  RateLimitServiceConfig* n = new RateLimitServiceConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RateLimitServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.RateLimitServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RateLimitServiceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.RateLimitServiceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.RateLimitServiceConfig.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.RateLimitServiceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.RateLimitServiceConfig)
  return false;
#undef DO_
}

void RateLimitServiceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.RateLimitServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RateLimitServiceConfig.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.RateLimitServiceConfig)
}

::google::protobuf::uint8* RateLimitServiceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.RateLimitServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RateLimitServiceConfig.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.RateLimitServiceConfig)
  return target;
}

size_t RateLimitServiceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.RateLimitServiceConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RateLimitServiceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.RateLimitServiceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RateLimitServiceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RateLimitServiceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.RateLimitServiceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.RateLimitServiceConfig)
    MergeFrom(*source);
  }
}

void RateLimitServiceConfig::MergeFrom(const RateLimitServiceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.RateLimitServiceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
}

void RateLimitServiceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.RateLimitServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RateLimitServiceConfig::CopyFrom(const RateLimitServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.RateLimitServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RateLimitServiceConfig::IsInitialized() const {
  return true;
}

void RateLimitServiceConfig::Swap(RateLimitServiceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RateLimitServiceConfig::InternalSwap(RateLimitServiceConfig* other) {
  using std::swap;
  cluster_name_.Swap(&other->cluster_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RateLimitServiceConfig::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bootstrap_StaticResources::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap_StaticResources::kListenersFieldNumber;
const int Bootstrap_StaticResources::kClustersFieldNumber;
const int Bootstrap_StaticResources::kSecretsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap_StaticResources::Bootstrap_StaticResources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_StaticResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap.StaticResources)
}
Bootstrap_StaticResources::Bootstrap_StaticResources(const Bootstrap_StaticResources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      listeners_(from.listeners_),
      clusters_(from.clusters_),
      secrets_(from.secrets_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap.StaticResources)
}

void Bootstrap_StaticResources::SharedCtor() {
  _cached_size_ = 0;
}

Bootstrap_StaticResources::~Bootstrap_StaticResources() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap.StaticResources)
  SharedDtor();
}

void Bootstrap_StaticResources::SharedDtor() {
}

void Bootstrap_StaticResources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap_StaticResources::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap_StaticResources& Bootstrap_StaticResources::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_StaticResources();
  return *internal_default_instance();
}

Bootstrap_StaticResources* Bootstrap_StaticResources::New(::google::protobuf::Arena* arena) const {
  Bootstrap_StaticResources* n = new Bootstrap_StaticResources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap_StaticResources::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap.StaticResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listeners_.Clear();
  clusters_.Clear();
  secrets_.Clear();
  _internal_metadata_.Clear();
}

bool Bootstrap_StaticResources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap.StaticResources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .envoy.api.v2.Listener listeners = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_listeners()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.Cluster clusters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.Secret secrets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_secrets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap.StaticResources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap.StaticResources)
  return false;
#undef DO_
}

void Bootstrap_StaticResources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap.StaticResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.Listener listeners = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listeners_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->listeners(static_cast<int>(i)), output);
  }

  // repeated .envoy.api.v2.Cluster clusters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->clusters(static_cast<int>(i)), output);
  }

  // repeated .envoy.api.v2.Secret secrets = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->secrets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->secrets(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap.StaticResources)
}

::google::protobuf::uint8* Bootstrap_StaticResources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap.StaticResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.Listener listeners = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listeners_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->listeners(static_cast<int>(i)), deterministic, target);
  }

  // repeated .envoy.api.v2.Cluster clusters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->clusters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .envoy.api.v2.Secret secrets = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->secrets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->secrets(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap.StaticResources)
  return target;
}

size_t Bootstrap_StaticResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap.StaticResources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.Listener listeners = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->listeners_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->listeners(static_cast<int>(i)));
    }
  }

  // repeated .envoy.api.v2.Cluster clusters = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clusters(static_cast<int>(i)));
    }
  }

  // repeated .envoy.api.v2.Secret secrets = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->secrets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->secrets(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap_StaticResources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap.StaticResources)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap_StaticResources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap_StaticResources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap.StaticResources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap.StaticResources)
    MergeFrom(*source);
  }
}

void Bootstrap_StaticResources::MergeFrom(const Bootstrap_StaticResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap.StaticResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listeners_.MergeFrom(from.listeners_);
  clusters_.MergeFrom(from.clusters_);
  secrets_.MergeFrom(from.secrets_);
}

void Bootstrap_StaticResources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap.StaticResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap_StaticResources::CopyFrom(const Bootstrap_StaticResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap.StaticResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap_StaticResources::IsInitialized() const {
  return true;
}

void Bootstrap_StaticResources::Swap(Bootstrap_StaticResources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap_StaticResources::InternalSwap(Bootstrap_StaticResources* other) {
  using std::swap;
  listeners_.InternalSwap(&other->listeners_);
  clusters_.InternalSwap(&other->clusters_);
  secrets_.InternalSwap(&other->secrets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap_StaticResources::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bootstrap_DynamicResources_DeprecatedV1::InitAsDefaultInstance() {
  ::envoy::api::v2::_Bootstrap_DynamicResources_DeprecatedV1_default_instance_._instance.get_mutable()->sds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap_DynamicResources_DeprecatedV1::kSdsConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap_DynamicResources_DeprecatedV1::Bootstrap_DynamicResources_DeprecatedV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_DynamicResources_DeprecatedV1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
}
Bootstrap_DynamicResources_DeprecatedV1::Bootstrap_DynamicResources_DeprecatedV1(const Bootstrap_DynamicResources_DeprecatedV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sds_config()) {
    sds_config_ = new ::envoy::api::v2::ConfigSource(*from.sds_config_);
  } else {
    sds_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
}

void Bootstrap_DynamicResources_DeprecatedV1::SharedCtor() {
  sds_config_ = NULL;
  _cached_size_ = 0;
}

Bootstrap_DynamicResources_DeprecatedV1::~Bootstrap_DynamicResources_DeprecatedV1() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  SharedDtor();
}

void Bootstrap_DynamicResources_DeprecatedV1::SharedDtor() {
  if (this != internal_default_instance()) delete sds_config_;
}

void Bootstrap_DynamicResources_DeprecatedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap_DynamicResources_DeprecatedV1::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap_DynamicResources_DeprecatedV1& Bootstrap_DynamicResources_DeprecatedV1::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_DynamicResources_DeprecatedV1();
  return *internal_default_instance();
}

Bootstrap_DynamicResources_DeprecatedV1* Bootstrap_DynamicResources_DeprecatedV1::New(::google::protobuf::Arena* arena) const {
  Bootstrap_DynamicResources_DeprecatedV1* n = new Bootstrap_DynamicResources_DeprecatedV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap_DynamicResources_DeprecatedV1::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sds_config_ != NULL) {
    delete sds_config_;
  }
  sds_config_ = NULL;
  _internal_metadata_.Clear();
}

bool Bootstrap_DynamicResources_DeprecatedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.ConfigSource sds_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  return false;
#undef DO_
}

void Bootstrap_DynamicResources_DeprecatedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource sds_config = 1;
  if (this->has_sds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sds_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
}

::google::protobuf::uint8* Bootstrap_DynamicResources_DeprecatedV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource sds_config = 1;
  if (this->has_sds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->sds_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  return target;
}

size_t Bootstrap_DynamicResources_DeprecatedV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.ConfigSource sds_config = 1;
  if (this->has_sds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sds_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap_DynamicResources_DeprecatedV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap_DynamicResources_DeprecatedV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap_DynamicResources_DeprecatedV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
    MergeFrom(*source);
  }
}

void Bootstrap_DynamicResources_DeprecatedV1::MergeFrom(const Bootstrap_DynamicResources_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sds_config()) {
    mutable_sds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.sds_config());
  }
}

void Bootstrap_DynamicResources_DeprecatedV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap_DynamicResources_DeprecatedV1::CopyFrom(const Bootstrap_DynamicResources_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap_DynamicResources_DeprecatedV1::IsInitialized() const {
  return true;
}

void Bootstrap_DynamicResources_DeprecatedV1::Swap(Bootstrap_DynamicResources_DeprecatedV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap_DynamicResources_DeprecatedV1::InternalSwap(Bootstrap_DynamicResources_DeprecatedV1* other) {
  using std::swap;
  swap(sds_config_, other->sds_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap_DynamicResources_DeprecatedV1::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bootstrap_DynamicResources::InitAsDefaultInstance() {
  ::envoy::api::v2::_Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->lds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->cds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->ads_config_ = const_cast< ::envoy::api::v2::ApiConfigSource*>(
      ::envoy::api::v2::ApiConfigSource::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->deprecated_v1_ = const_cast< ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1*>(
      ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap_DynamicResources::kLdsConfigFieldNumber;
const int Bootstrap_DynamicResources::kCdsConfigFieldNumber;
const int Bootstrap_DynamicResources::kAdsConfigFieldNumber;
const int Bootstrap_DynamicResources::kDeprecatedV1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap_DynamicResources::Bootstrap_DynamicResources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_DynamicResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap.DynamicResources)
}
Bootstrap_DynamicResources::Bootstrap_DynamicResources(const Bootstrap_DynamicResources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lds_config()) {
    lds_config_ = new ::envoy::api::v2::ConfigSource(*from.lds_config_);
  } else {
    lds_config_ = NULL;
  }
  if (from.has_cds_config()) {
    cds_config_ = new ::envoy::api::v2::ConfigSource(*from.cds_config_);
  } else {
    cds_config_ = NULL;
  }
  if (from.has_ads_config()) {
    ads_config_ = new ::envoy::api::v2::ApiConfigSource(*from.ads_config_);
  } else {
    ads_config_ = NULL;
  }
  if (from.has_deprecated_v1()) {
    deprecated_v1_ = new ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1(*from.deprecated_v1_);
  } else {
    deprecated_v1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap.DynamicResources)
}

void Bootstrap_DynamicResources::SharedCtor() {
  ::memset(&lds_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecated_v1_) -
      reinterpret_cast<char*>(&lds_config_)) + sizeof(deprecated_v1_));
  _cached_size_ = 0;
}

Bootstrap_DynamicResources::~Bootstrap_DynamicResources() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap.DynamicResources)
  SharedDtor();
}

void Bootstrap_DynamicResources::SharedDtor() {
  if (this != internal_default_instance()) delete lds_config_;
  if (this != internal_default_instance()) delete cds_config_;
  if (this != internal_default_instance()) delete ads_config_;
  if (this != internal_default_instance()) delete deprecated_v1_;
}

void Bootstrap_DynamicResources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap_DynamicResources::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap_DynamicResources& Bootstrap_DynamicResources::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap_DynamicResources();
  return *internal_default_instance();
}

Bootstrap_DynamicResources* Bootstrap_DynamicResources::New(::google::protobuf::Arena* arena) const {
  Bootstrap_DynamicResources* n = new Bootstrap_DynamicResources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap_DynamicResources::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap.DynamicResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lds_config_ != NULL) {
    delete lds_config_;
  }
  lds_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && cds_config_ != NULL) {
    delete cds_config_;
  }
  cds_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && ads_config_ != NULL) {
    delete ads_config_;
  }
  ads_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && deprecated_v1_ != NULL) {
    delete deprecated_v1_;
  }
  deprecated_v1_ = NULL;
  _internal_metadata_.Clear();
}

bool Bootstrap_DynamicResources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap.DynamicResources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.ConfigSource lds_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ConfigSource cds_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ApiConfigSource ads_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ads_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deprecated_v1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap.DynamicResources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap.DynamicResources)
  return false;
#undef DO_
}

void Bootstrap_DynamicResources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap.DynamicResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource lds_config = 1;
  if (this->has_lds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lds_config_, output);
  }

  // .envoy.api.v2.ConfigSource cds_config = 2;
  if (this->has_cds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cds_config_, output);
  }

  // .envoy.api.v2.ApiConfigSource ads_config = 3;
  if (this->has_ads_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ads_config_, output);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
  if (this->has_deprecated_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->deprecated_v1_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap.DynamicResources)
}

::google::protobuf::uint8* Bootstrap_DynamicResources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap.DynamicResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource lds_config = 1;
  if (this->has_lds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lds_config_, deterministic, target);
  }

  // .envoy.api.v2.ConfigSource cds_config = 2;
  if (this->has_cds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->cds_config_, deterministic, target);
  }

  // .envoy.api.v2.ApiConfigSource ads_config = 3;
  if (this->has_ads_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ads_config_, deterministic, target);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
  if (this->has_deprecated_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->deprecated_v1_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap.DynamicResources)
  return target;
}

size_t Bootstrap_DynamicResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap.DynamicResources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.ConfigSource lds_config = 1;
  if (this->has_lds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lds_config_);
  }

  // .envoy.api.v2.ConfigSource cds_config = 2;
  if (this->has_cds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cds_config_);
  }

  // .envoy.api.v2.ApiConfigSource ads_config = 3;
  if (this->has_ads_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ads_config_);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
  if (this->has_deprecated_v1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deprecated_v1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap_DynamicResources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap_DynamicResources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap_DynamicResources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap.DynamicResources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap.DynamicResources)
    MergeFrom(*source);
  }
}

void Bootstrap_DynamicResources::MergeFrom(const Bootstrap_DynamicResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lds_config()) {
    mutable_lds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.lds_config());
  }
  if (from.has_cds_config()) {
    mutable_cds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.cds_config());
  }
  if (from.has_ads_config()) {
    mutable_ads_config()->::envoy::api::v2::ApiConfigSource::MergeFrom(from.ads_config());
  }
  if (from.has_deprecated_v1()) {
    mutable_deprecated_v1()->::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1::MergeFrom(from.deprecated_v1());
  }
}

void Bootstrap_DynamicResources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap_DynamicResources::CopyFrom(const Bootstrap_DynamicResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap_DynamicResources::IsInitialized() const {
  return true;
}

void Bootstrap_DynamicResources::Swap(Bootstrap_DynamicResources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap_DynamicResources::InternalSwap(Bootstrap_DynamicResources* other) {
  using std::swap;
  swap(lds_config_, other->lds_config_);
  swap(cds_config_, other->cds_config_);
  swap(ads_config_, other->ads_config_);
  swap(deprecated_v1_, other->deprecated_v1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap_DynamicResources::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bootstrap::InitAsDefaultInstance() {
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->node_ = const_cast< ::envoy::api::v2::Node*>(
      ::envoy::api::v2::Node::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->static_resources_ = const_cast< ::envoy::api::v2::Bootstrap_StaticResources*>(
      ::envoy::api::v2::Bootstrap_StaticResources::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->dynamic_resources_ = const_cast< ::envoy::api::v2::Bootstrap_DynamicResources*>(
      ::envoy::api::v2::Bootstrap_DynamicResources::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->cluster_manager_ = const_cast< ::envoy::api::v2::ClusterManager*>(
      ::envoy::api::v2::ClusterManager::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->stats_config_ = const_cast< ::envoy::api::v2::StatsConfig*>(
      ::envoy::api::v2::StatsConfig::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->stats_flush_interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->watchdog_ = const_cast< ::envoy::api::v2::Watchdog*>(
      ::envoy::api::v2::Watchdog::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->tracing_ = const_cast< ::envoy::api::v2::Tracing*>(
      ::envoy::api::v2::Tracing::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->rate_limit_service_ = const_cast< ::envoy::api::v2::RateLimitServiceConfig*>(
      ::envoy::api::v2::RateLimitServiceConfig::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->runtime_ = const_cast< ::envoy::api::v2::Runtime*>(
      ::envoy::api::v2::Runtime::internal_default_instance());
  ::envoy::api::v2::_Bootstrap_default_instance_._instance.get_mutable()->admin_ = const_cast< ::envoy::api::v2::Admin*>(
      ::envoy::api::v2::Admin::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap::kNodeFieldNumber;
const int Bootstrap::kStaticResourcesFieldNumber;
const int Bootstrap::kDynamicResourcesFieldNumber;
const int Bootstrap::kClusterManagerFieldNumber;
const int Bootstrap::kFlagsPathFieldNumber;
const int Bootstrap::kStatsSinksFieldNumber;
const int Bootstrap::kStatsConfigFieldNumber;
const int Bootstrap::kStatsFlushIntervalFieldNumber;
const int Bootstrap::kWatchdogFieldNumber;
const int Bootstrap::kTracingFieldNumber;
const int Bootstrap::kRateLimitServiceFieldNumber;
const int Bootstrap::kRuntimeFieldNumber;
const int Bootstrap::kAdminFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap::Bootstrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap)
}
Bootstrap::Bootstrap(const Bootstrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stats_sinks_(from.stats_sinks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flags_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.flags_path().size() > 0) {
    flags_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flags_path_);
  }
  if (from.has_node()) {
    node_ = new ::envoy::api::v2::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  if (from.has_static_resources()) {
    static_resources_ = new ::envoy::api::v2::Bootstrap_StaticResources(*from.static_resources_);
  } else {
    static_resources_ = NULL;
  }
  if (from.has_dynamic_resources()) {
    dynamic_resources_ = new ::envoy::api::v2::Bootstrap_DynamicResources(*from.dynamic_resources_);
  } else {
    dynamic_resources_ = NULL;
  }
  if (from.has_cluster_manager()) {
    cluster_manager_ = new ::envoy::api::v2::ClusterManager(*from.cluster_manager_);
  } else {
    cluster_manager_ = NULL;
  }
  if (from.has_stats_flush_interval()) {
    stats_flush_interval_ = new ::google::protobuf::Duration(*from.stats_flush_interval_);
  } else {
    stats_flush_interval_ = NULL;
  }
  if (from.has_watchdog()) {
    watchdog_ = new ::envoy::api::v2::Watchdog(*from.watchdog_);
  } else {
    watchdog_ = NULL;
  }
  if (from.has_tracing()) {
    tracing_ = new ::envoy::api::v2::Tracing(*from.tracing_);
  } else {
    tracing_ = NULL;
  }
  if (from.has_rate_limit_service()) {
    rate_limit_service_ = new ::envoy::api::v2::RateLimitServiceConfig(*from.rate_limit_service_);
  } else {
    rate_limit_service_ = NULL;
  }
  if (from.has_runtime()) {
    runtime_ = new ::envoy::api::v2::Runtime(*from.runtime_);
  } else {
    runtime_ = NULL;
  }
  if (from.has_admin()) {
    admin_ = new ::envoy::api::v2::Admin(*from.admin_);
  } else {
    admin_ = NULL;
  }
  if (from.has_stats_config()) {
    stats_config_ = new ::envoy::api::v2::StatsConfig(*from.stats_config_);
  } else {
    stats_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap)
}

void Bootstrap::SharedCtor() {
  flags_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stats_config_) -
      reinterpret_cast<char*>(&node_)) + sizeof(stats_config_));
  _cached_size_ = 0;
}

Bootstrap::~Bootstrap() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap)
  SharedDtor();
}

void Bootstrap::SharedDtor() {
  flags_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_;
  if (this != internal_default_instance()) delete static_resources_;
  if (this != internal_default_instance()) delete dynamic_resources_;
  if (this != internal_default_instance()) delete cluster_manager_;
  if (this != internal_default_instance()) delete stats_flush_interval_;
  if (this != internal_default_instance()) delete watchdog_;
  if (this != internal_default_instance()) delete tracing_;
  if (this != internal_default_instance()) delete rate_limit_service_;
  if (this != internal_default_instance()) delete runtime_;
  if (this != internal_default_instance()) delete admin_;
  if (this != internal_default_instance()) delete stats_config_;
}

void Bootstrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap::descriptor() {
  ::protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap& Bootstrap::default_instance() {
  ::protobuf_api_2fbootstrap_2eproto::InitDefaultsBootstrap();
  return *internal_default_instance();
}

Bootstrap* Bootstrap::New(::google::protobuf::Arena* arena) const {
  Bootstrap* n = new Bootstrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_sinks_.Clear();
  flags_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  if (GetArenaNoVirtual() == NULL && static_resources_ != NULL) {
    delete static_resources_;
  }
  static_resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && dynamic_resources_ != NULL) {
    delete dynamic_resources_;
  }
  dynamic_resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && cluster_manager_ != NULL) {
    delete cluster_manager_;
  }
  cluster_manager_ = NULL;
  if (GetArenaNoVirtual() == NULL && stats_flush_interval_ != NULL) {
    delete stats_flush_interval_;
  }
  stats_flush_interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && watchdog_ != NULL) {
    delete watchdog_;
  }
  watchdog_ = NULL;
  if (GetArenaNoVirtual() == NULL && tracing_ != NULL) {
    delete tracing_;
  }
  tracing_ = NULL;
  if (GetArenaNoVirtual() == NULL && rate_limit_service_ != NULL) {
    delete rate_limit_service_;
  }
  rate_limit_service_ = NULL;
  if (GetArenaNoVirtual() == NULL && runtime_ != NULL) {
    delete runtime_;
  }
  runtime_ = NULL;
  if (GetArenaNoVirtual() == NULL && admin_ != NULL) {
    delete admin_;
  }
  admin_ = NULL;
  if (GetArenaNoVirtual() == NULL && stats_config_ != NULL) {
    delete stats_config_;
  }
  stats_config_ = NULL;
  _internal_metadata_.Clear();
}

bool Bootstrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Node node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_static_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ClusterManager cluster_manager = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster_manager()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string flags_path = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flags_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->flags_path().data(), static_cast<int>(this->flags_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Bootstrap.flags_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stats_sinks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration stats_flush_interval = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stats_flush_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Watchdog watchdog = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_watchdog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Tracing tracing = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tracing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rate_limit_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Runtime runtime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_runtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Admin admin = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_admin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.StatsConfig stats_config = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stats_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap)
  return false;
#undef DO_
}

void Bootstrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->node_, output);
  }

  // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
  if (this->has_static_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->static_resources_, output);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
  if (this->has_dynamic_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dynamic_resources_, output);
  }

  // .envoy.api.v2.ClusterManager cluster_manager = 4;
  if (this->has_cluster_manager()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->cluster_manager_, output);
  }

  // string flags_path = 5;
  if (this->flags_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flags_path().data(), static_cast<int>(this->flags_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Bootstrap.flags_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->flags_path(), output);
  }

  // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_sinks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->stats_sinks(static_cast<int>(i)), output);
  }

  // .google.protobuf.Duration stats_flush_interval = 7;
  if (this->has_stats_flush_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->stats_flush_interval_, output);
  }

  // .envoy.api.v2.Watchdog watchdog = 8;
  if (this->has_watchdog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->watchdog_, output);
  }

  // .envoy.api.v2.Tracing tracing = 9;
  if (this->has_tracing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->tracing_, output);
  }

  // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
  if (this->has_rate_limit_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->rate_limit_service_, output);
  }

  // .envoy.api.v2.Runtime runtime = 11;
  if (this->has_runtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->runtime_, output);
  }

  // .envoy.api.v2.Admin admin = 12;
  if (this->has_admin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->admin_, output);
  }

  // .envoy.api.v2.StatsConfig stats_config = 13;
  if (this->has_stats_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->stats_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap)
}

::google::protobuf::uint8* Bootstrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->node_, deterministic, target);
  }

  // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
  if (this->has_static_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->static_resources_, deterministic, target);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
  if (this->has_dynamic_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->dynamic_resources_, deterministic, target);
  }

  // .envoy.api.v2.ClusterManager cluster_manager = 4;
  if (this->has_cluster_manager()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->cluster_manager_, deterministic, target);
  }

  // string flags_path = 5;
  if (this->flags_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flags_path().data(), static_cast<int>(this->flags_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Bootstrap.flags_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->flags_path(), target);
  }

  // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_sinks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->stats_sinks(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Duration stats_flush_interval = 7;
  if (this->has_stats_flush_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->stats_flush_interval_, deterministic, target);
  }

  // .envoy.api.v2.Watchdog watchdog = 8;
  if (this->has_watchdog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->watchdog_, deterministic, target);
  }

  // .envoy.api.v2.Tracing tracing = 9;
  if (this->has_tracing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->tracing_, deterministic, target);
  }

  // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
  if (this->has_rate_limit_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->rate_limit_service_, deterministic, target);
  }

  // .envoy.api.v2.Runtime runtime = 11;
  if (this->has_runtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->runtime_, deterministic, target);
  }

  // .envoy.api.v2.Admin admin = 12;
  if (this->has_admin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->admin_, deterministic, target);
  }

  // .envoy.api.v2.StatsConfig stats_config = 13;
  if (this->has_stats_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->stats_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap)
  return target;
}

size_t Bootstrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_sinks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats_sinks(static_cast<int>(i)));
    }
  }

  // string flags_path = 5;
  if (this->flags_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->flags_path());
  }

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
  if (this->has_static_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->static_resources_);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
  if (this->has_dynamic_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dynamic_resources_);
  }

  // .envoy.api.v2.ClusterManager cluster_manager = 4;
  if (this->has_cluster_manager()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_manager_);
  }

  // .google.protobuf.Duration stats_flush_interval = 7;
  if (this->has_stats_flush_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stats_flush_interval_);
  }

  // .envoy.api.v2.Watchdog watchdog = 8;
  if (this->has_watchdog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->watchdog_);
  }

  // .envoy.api.v2.Tracing tracing = 9;
  if (this->has_tracing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tracing_);
  }

  // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
  if (this->has_rate_limit_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rate_limit_service_);
  }

  // .envoy.api.v2.Runtime runtime = 11;
  if (this->has_runtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->runtime_);
  }

  // .envoy.api.v2.Admin admin = 12;
  if (this->has_admin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->admin_);
  }

  // .envoy.api.v2.StatsConfig stats_config = 13;
  if (this->has_stats_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stats_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap)
    MergeFrom(*source);
  }
}

void Bootstrap::MergeFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_sinks_.MergeFrom(from.stats_sinks_);
  if (from.flags_path().size() > 0) {

    flags_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flags_path_);
  }
  if (from.has_node()) {
    mutable_node()->::envoy::api::v2::Node::MergeFrom(from.node());
  }
  if (from.has_static_resources()) {
    mutable_static_resources()->::envoy::api::v2::Bootstrap_StaticResources::MergeFrom(from.static_resources());
  }
  if (from.has_dynamic_resources()) {
    mutable_dynamic_resources()->::envoy::api::v2::Bootstrap_DynamicResources::MergeFrom(from.dynamic_resources());
  }
  if (from.has_cluster_manager()) {
    mutable_cluster_manager()->::envoy::api::v2::ClusterManager::MergeFrom(from.cluster_manager());
  }
  if (from.has_stats_flush_interval()) {
    mutable_stats_flush_interval()->::google::protobuf::Duration::MergeFrom(from.stats_flush_interval());
  }
  if (from.has_watchdog()) {
    mutable_watchdog()->::envoy::api::v2::Watchdog::MergeFrom(from.watchdog());
  }
  if (from.has_tracing()) {
    mutable_tracing()->::envoy::api::v2::Tracing::MergeFrom(from.tracing());
  }
  if (from.has_rate_limit_service()) {
    mutable_rate_limit_service()->::envoy::api::v2::RateLimitServiceConfig::MergeFrom(from.rate_limit_service());
  }
  if (from.has_runtime()) {
    mutable_runtime()->::envoy::api::v2::Runtime::MergeFrom(from.runtime());
  }
  if (from.has_admin()) {
    mutable_admin()->::envoy::api::v2::Admin::MergeFrom(from.admin());
  }
  if (from.has_stats_config()) {
    mutable_stats_config()->::envoy::api::v2::StatsConfig::MergeFrom(from.stats_config());
  }
}

void Bootstrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap::CopyFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap::IsInitialized() const {
  return true;
}

void Bootstrap::Swap(Bootstrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap::InternalSwap(Bootstrap* other) {
  using std::swap;
  stats_sinks_.InternalSwap(&other->stats_sinks_);
  flags_path_.Swap(&other->flags_path_);
  swap(node_, other->node_);
  swap(static_resources_, other->static_resources_);
  swap(dynamic_resources_, other->dynamic_resources_);
  swap(cluster_manager_, other->cluster_manager_);
  swap(stats_flush_interval_, other->stats_flush_interval_);
  swap(watchdog_, other->watchdog_);
  swap(tracing_, other->tracing_);
  swap(rate_limit_service_, other->rate_limit_service_);
  swap(runtime_, other->runtime_);
  swap(admin_, other->admin_);
  swap(stats_config_, other->stats_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
