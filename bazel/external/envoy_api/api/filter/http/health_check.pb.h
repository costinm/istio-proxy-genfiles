// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/filter/http/health_check.proto

#ifndef PROTOBUF_api_2ffilter_2fhttp_2fhealth_5fcheck_2eproto__INCLUDED
#define PROTOBUF_api_2ffilter_2fhttp_2fhealth_5fcheck_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_api_2ffilter_2fhttp_2fhealth_5fcheck_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHealthCheckImpl();
void InitDefaultsHealthCheck();
inline void InitDefaults() {
  InitDefaultsHealthCheck();
}
}  // namespace protobuf_api_2ffilter_2fhttp_2fhealth_5fcheck_2eproto
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace http {
class HealthCheck;
class HealthCheckDefaultTypeInternal;
extern HealthCheckDefaultTypeInternal _HealthCheck_default_instance_;
}  // namespace http
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace http {

// ===================================================================

class HealthCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.filter.http.HealthCheck) */ {
 public:
  HealthCheck();
  virtual ~HealthCheck();

  HealthCheck(const HealthCheck& from);

  inline HealthCheck& operator=(const HealthCheck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HealthCheck(HealthCheck&& from) noexcept
    : HealthCheck() {
    *this = ::std::move(from);
  }

  inline HealthCheck& operator=(HealthCheck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HealthCheck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HealthCheck* internal_default_instance() {
    return reinterpret_cast<const HealthCheck*>(
               &_HealthCheck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HealthCheck* other);
  friend void swap(HealthCheck& a, HealthCheck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HealthCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  HealthCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HealthCheck& from);
  void MergeFrom(const HealthCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HealthCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string endpoint = 2 [(.validate.rules) = {
  void clear_endpoint();
  static const int kEndpointFieldNumber = 2;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // .google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = {
  bool has_pass_through_mode() const;
  void clear_pass_through_mode();
  static const int kPassThroughModeFieldNumber = 1;
  const ::google::protobuf::BoolValue& pass_through_mode() const;
  ::google::protobuf::BoolValue* release_pass_through_mode();
  ::google::protobuf::BoolValue* mutable_pass_through_mode();
  void set_allocated_pass_through_mode(::google::protobuf::BoolValue* pass_through_mode);

  // .google.protobuf.Duration cache_time = 3;
  bool has_cache_time() const;
  void clear_cache_time();
  static const int kCacheTimeFieldNumber = 3;
  const ::google::protobuf::Duration& cache_time() const;
  ::google::protobuf::Duration* release_cache_time();
  ::google::protobuf::Duration* mutable_cache_time();
  void set_allocated_cache_time(::google::protobuf::Duration* cache_time);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.filter.http.HealthCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::google::protobuf::BoolValue* pass_through_mode_;
  ::google::protobuf::Duration* cache_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2ffilter_2fhttp_2fhealth_5fcheck_2eproto::TableStruct;
  friend void ::protobuf_api_2ffilter_2fhttp_2fhealth_5fcheck_2eproto::InitDefaultsHealthCheckImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HealthCheck

// .google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = {
inline bool HealthCheck::has_pass_through_mode() const {
  return this != internal_default_instance() && pass_through_mode_ != NULL;
}
inline const ::google::protobuf::BoolValue& HealthCheck::pass_through_mode() const {
  const ::google::protobuf::BoolValue* p = pass_through_mode_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.http.HealthCheck.pass_through_mode)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* HealthCheck::release_pass_through_mode() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.http.HealthCheck.pass_through_mode)
  
  ::google::protobuf::BoolValue* temp = pass_through_mode_;
  pass_through_mode_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* HealthCheck::mutable_pass_through_mode() {
  
  if (pass_through_mode_ == NULL) {
    pass_through_mode_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.http.HealthCheck.pass_through_mode)
  return pass_through_mode_;
}
inline void HealthCheck::set_allocated_pass_through_mode(::google::protobuf::BoolValue* pass_through_mode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pass_through_mode_);
  }
  if (pass_through_mode) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(pass_through_mode)->GetArena();
    if (message_arena != submessage_arena) {
      pass_through_mode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pass_through_mode, submessage_arena);
    }
    
  } else {
    
  }
  pass_through_mode_ = pass_through_mode;
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.http.HealthCheck.pass_through_mode)
}

// string endpoint = 2 [(.validate.rules) = {
inline void HealthCheck::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HealthCheck::endpoint() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.http.HealthCheck.endpoint)
  return endpoint_.GetNoArena();
}
inline void HealthCheck::set_endpoint(const ::std::string& value) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.filter.http.HealthCheck.endpoint)
}
#if LANG_CXX11
inline void HealthCheck::set_endpoint(::std::string&& value) {
  
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.filter.http.HealthCheck.endpoint)
}
#endif
inline void HealthCheck::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.filter.http.HealthCheck.endpoint)
}
inline void HealthCheck::set_endpoint(const char* value, size_t size) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.filter.http.HealthCheck.endpoint)
}
inline ::std::string* HealthCheck::mutable_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.http.HealthCheck.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HealthCheck::release_endpoint() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.http.HealthCheck.endpoint)
  
  return endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HealthCheck::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    
  } else {
    
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.http.HealthCheck.endpoint)
}

// .google.protobuf.Duration cache_time = 3;
inline bool HealthCheck::has_cache_time() const {
  return this != internal_default_instance() && cache_time_ != NULL;
}
inline const ::google::protobuf::Duration& HealthCheck::cache_time() const {
  const ::google::protobuf::Duration* p = cache_time_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.http.HealthCheck.cache_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* HealthCheck::release_cache_time() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.http.HealthCheck.cache_time)
  
  ::google::protobuf::Duration* temp = cache_time_;
  cache_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* HealthCheck::mutable_cache_time() {
  
  if (cache_time_ == NULL) {
    cache_time_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.http.HealthCheck.cache_time)
  return cache_time_;
}
inline void HealthCheck::set_allocated_cache_time(::google::protobuf::Duration* cache_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cache_time_);
  }
  if (cache_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(cache_time)->GetArena();
    if (message_arena != submessage_arena) {
      cache_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cache_time, submessage_arena);
    }
    
  } else {
    
  }
  cache_time_ = cache_time;
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.http.HealthCheck.cache_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace http
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2ffilter_2fhttp_2fhealth_5fcheck_2eproto__INCLUDED
