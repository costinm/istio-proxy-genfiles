// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/filter/http/router.proto

#ifndef PROTOBUF_api_2ffilter_2fhttp_2frouter_2eproto__INCLUDED
#define PROTOBUF_api_2ffilter_2fhttp_2frouter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "api/filter/accesslog/accesslog.pb.h"
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_api_2ffilter_2fhttp_2frouter_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRouterImpl();
void InitDefaultsRouter();
inline void InitDefaults() {
  InitDefaultsRouter();
}
}  // namespace protobuf_api_2ffilter_2fhttp_2frouter_2eproto
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace http {
class Router;
class RouterDefaultTypeInternal;
extern RouterDefaultTypeInternal _Router_default_instance_;
}  // namespace http
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace http {

// ===================================================================

class Router : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.filter.http.Router) */ {
 public:
  Router();
  virtual ~Router();

  Router(const Router& from);

  inline Router& operator=(const Router& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Router(Router&& from) noexcept
    : Router() {
    *this = ::std::move(from);
  }

  inline Router& operator=(Router&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Router& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Router* internal_default_instance() {
    return reinterpret_cast<const Router*>(
               &_Router_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Router* other);
  friend void swap(Router& a, Router& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Router* New() const PROTOBUF_FINAL { return New(NULL); }

  Router* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Router& from);
  void MergeFrom(const Router& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Router* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.filter.accesslog.AccessLog upstream_log = 3;
  int upstream_log_size() const;
  void clear_upstream_log();
  static const int kUpstreamLogFieldNumber = 3;
  const ::envoy::api::v2::filter::accesslog::AccessLog& upstream_log(int index) const;
  ::envoy::api::v2::filter::accesslog::AccessLog* mutable_upstream_log(int index);
  ::envoy::api::v2::filter::accesslog::AccessLog* add_upstream_log();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >*
      mutable_upstream_log();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >&
      upstream_log() const;

  // .google.protobuf.BoolValue dynamic_stats = 1;
  bool has_dynamic_stats() const;
  void clear_dynamic_stats();
  static const int kDynamicStatsFieldNumber = 1;
  const ::google::protobuf::BoolValue& dynamic_stats() const;
  ::google::protobuf::BoolValue* release_dynamic_stats();
  ::google::protobuf::BoolValue* mutable_dynamic_stats();
  void set_allocated_dynamic_stats(::google::protobuf::BoolValue* dynamic_stats);

  // bool start_child_span = 2;
  void clear_start_child_span();
  static const int kStartChildSpanFieldNumber = 2;
  bool start_child_span() const;
  void set_start_child_span(bool value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.filter.http.Router)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog > upstream_log_;
  ::google::protobuf::BoolValue* dynamic_stats_;
  bool start_child_span_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2ffilter_2fhttp_2frouter_2eproto::TableStruct;
  friend void ::protobuf_api_2ffilter_2fhttp_2frouter_2eproto::InitDefaultsRouterImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Router

// .google.protobuf.BoolValue dynamic_stats = 1;
inline bool Router::has_dynamic_stats() const {
  return this != internal_default_instance() && dynamic_stats_ != NULL;
}
inline const ::google::protobuf::BoolValue& Router::dynamic_stats() const {
  const ::google::protobuf::BoolValue* p = dynamic_stats_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.http.Router.dynamic_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* Router::release_dynamic_stats() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.http.Router.dynamic_stats)
  
  ::google::protobuf::BoolValue* temp = dynamic_stats_;
  dynamic_stats_ = NULL;
  return temp;
}
inline ::google::protobuf::BoolValue* Router::mutable_dynamic_stats() {
  
  if (dynamic_stats_ == NULL) {
    dynamic_stats_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.http.Router.dynamic_stats)
  return dynamic_stats_;
}
inline void Router::set_allocated_dynamic_stats(::google::protobuf::BoolValue* dynamic_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dynamic_stats_);
  }
  if (dynamic_stats) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(dynamic_stats)->GetArena();
    if (message_arena != submessage_arena) {
      dynamic_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dynamic_stats, submessage_arena);
    }
    
  } else {
    
  }
  dynamic_stats_ = dynamic_stats;
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.http.Router.dynamic_stats)
}

// bool start_child_span = 2;
inline void Router::clear_start_child_span() {
  start_child_span_ = false;
}
inline bool Router::start_child_span() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.http.Router.start_child_span)
  return start_child_span_;
}
inline void Router::set_start_child_span(bool value) {
  
  start_child_span_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.filter.http.Router.start_child_span)
}

// repeated .envoy.api.v2.filter.accesslog.AccessLog upstream_log = 3;
inline int Router::upstream_log_size() const {
  return upstream_log_.size();
}
inline const ::envoy::api::v2::filter::accesslog::AccessLog& Router::upstream_log(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.http.Router.upstream_log)
  return upstream_log_.Get(index);
}
inline ::envoy::api::v2::filter::accesslog::AccessLog* Router::mutable_upstream_log(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.http.Router.upstream_log)
  return upstream_log_.Mutable(index);
}
inline ::envoy::api::v2::filter::accesslog::AccessLog* Router::add_upstream_log() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.filter.http.Router.upstream_log)
  return upstream_log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >*
Router::mutable_upstream_log() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.filter.http.Router.upstream_log)
  return &upstream_log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >&
Router::upstream_log() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.filter.http.Router.upstream_log)
  return upstream_log_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace http
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2ffilter_2fhttp_2frouter_2eproto__INCLUDED
