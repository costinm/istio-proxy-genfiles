// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/filter/network/tcp_proxy.proto

#include "api/filter/network/tcp_proxy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace network {
class TcpProxy_DeprecatedV1_TCPRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TcpProxy_DeprecatedV1_TCPRoute>
      _instance;
} _TcpProxy_DeprecatedV1_TCPRoute_default_instance_;
class TcpProxy_DeprecatedV1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TcpProxy_DeprecatedV1>
      _instance;
} _TcpProxy_DeprecatedV1_default_instance_;
class TcpProxyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TcpProxy>
      _instance;
} _TcpProxy_default_instance_;
}  // namespace network
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto {
void InitDefaultsTcpProxy_DeprecatedV1_TCPRouteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_api_2faddress_2eproto::InitDefaultsCidrRange();
  {
    void* ptr = &::envoy::api::v2::filter::network::_TcpProxy_DeprecatedV1_TCPRoute_default_instance_;
    new (ptr) ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute::InitAsDefaultInstance();
}

void InitDefaultsTcpProxy_DeprecatedV1_TCPRoute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTcpProxy_DeprecatedV1_TCPRouteImpl);
}

void InitDefaultsTcpProxy_DeprecatedV1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1_TCPRoute();
  {
    void* ptr = &::envoy::api::v2::filter::network::_TcpProxy_DeprecatedV1_default_instance_;
    new (ptr) ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1::InitAsDefaultInstance();
}

void InitDefaultsTcpProxy_DeprecatedV1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTcpProxy_DeprecatedV1Impl);
}

void InitDefaultsTcpProxyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_api_2ffilter_2faccesslog_2faccesslog_2eproto::InitDefaultsAccessLog();
  protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsUInt32Value();
  {
    void* ptr = &::envoy::api::v2::filter::network::_TcpProxy_default_instance_;
    new (ptr) ::envoy::api::v2::filter::network::TcpProxy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::filter::network::TcpProxy::InitAsDefaultInstance();
}

void InitDefaultsTcpProxy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTcpProxyImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute, destination_ip_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute, destination_ports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute, source_ip_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute, source_ports_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1, routes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, stat_prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, downstream_idle_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, upstream_idle_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, access_log_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, deprecated_v1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::filter::network::TcpProxy, max_connect_attempts_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute)},
  { 10, -1, sizeof(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1)},
  { 16, -1, sizeof(::envoy::api::v2::filter::network::TcpProxy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::filter::network::_TcpProxy_DeprecatedV1_TCPRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::filter::network::_TcpProxy_DeprecatedV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::filter::network::_TcpProxy_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/filter/network/tcp_proxy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"api/filter/network/tcp_proxy.proto\022\033en"
      "voy.api.v2.filter.network\032$api/filter/ac"
      "cesslog/accesslog.proto\032\021api/address.pro"
      "to\032\036google/protobuf/duration.proto\032\036goog"
      "le/protobuf/wrappers.proto\032\027validate/val"
      "idate.proto\"\212\005\n\010TcpProxy\022\023\n\013stat_prefix\030"
      "\001 \001(\t\022\017\n\007cluster\030\002 \001(\t\022:\n\027downstream_idl"
      "e_timeout\030\003 \001(\0132\031.google.protobuf.Durati"
      "on\0228\n\025upstream_idle_timeout\030\004 \001(\0132\031.goog"
      "le.protobuf.Duration\022<\n\naccess_log\030\005 \003(\013"
      "2(.envoy.api.v2.filter.accesslog.AccessL"
      "og\022I\n\rdeprecated_v1\030\006 \001(\01322.envoy.api.v2"
      ".filter.network.TcpProxy.DeprecatedV1\022E\n"
      "\024max_connect_attempts\030\007 \001(\0132\034.google.pro"
      "tobuf.UInt32ValueB\t\272\351\300\003\004*\002(\001\032\221\002\n\014Depreca"
      "tedV1\022K\n\006routes\030\001 \003(\0132;.envoy.api.v2.fil"
      "ter.network.TcpProxy.DeprecatedV1.TCPRou"
      "te\032\263\001\n\010TCPRoute\022\017\n\007cluster\030\001 \001(\t\0224\n\023dest"
      "ination_ip_list\030\002 \003(\0132\027.envoy.api.v2.Cid"
      "rRange\022\031\n\021destination_ports\030\003 \001(\t\022/\n\016sou"
      "rce_ip_list\030\004 \003(\0132\027.envoy.api.v2.CidrRan"
      "ge\022\024\n\014source_ports\030\005 \001(\tB\tZ\007networkb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 883);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/filter/network/tcp_proxy.proto", &protobuf_RegisterTypes);
  ::protobuf_api_2ffilter_2faccesslog_2faccesslog_2eproto::AddDescriptors();
  ::protobuf_api_2faddress_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_validate_2fvalidate_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace network {

// ===================================================================

void TcpProxy_DeprecatedV1_TCPRoute::InitAsDefaultInstance() {
}
void TcpProxy_DeprecatedV1_TCPRoute::clear_destination_ip_list() {
  destination_ip_list_.Clear();
}
void TcpProxy_DeprecatedV1_TCPRoute::clear_source_ip_list() {
  source_ip_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TcpProxy_DeprecatedV1_TCPRoute::kClusterFieldNumber;
const int TcpProxy_DeprecatedV1_TCPRoute::kDestinationIpListFieldNumber;
const int TcpProxy_DeprecatedV1_TCPRoute::kDestinationPortsFieldNumber;
const int TcpProxy_DeprecatedV1_TCPRoute::kSourceIpListFieldNumber;
const int TcpProxy_DeprecatedV1_TCPRoute::kSourcePortsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TcpProxy_DeprecatedV1_TCPRoute::TcpProxy_DeprecatedV1_TCPRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1_TCPRoute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
}
TcpProxy_DeprecatedV1_TCPRoute::TcpProxy_DeprecatedV1_TCPRoute(const TcpProxy_DeprecatedV1_TCPRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      destination_ip_list_(from.destination_ip_list_),
      source_ip_list_(from.source_ip_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster().size() > 0) {
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  destination_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination_ports().size() > 0) {
    destination_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_ports_);
  }
  source_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_ports().size() > 0) {
    source_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_ports_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
}

void TcpProxy_DeprecatedV1_TCPRoute::SharedCtor() {
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TcpProxy_DeprecatedV1_TCPRoute::~TcpProxy_DeprecatedV1_TCPRoute() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  SharedDtor();
}

void TcpProxy_DeprecatedV1_TCPRoute::SharedDtor() {
  cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_ports_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ports_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TcpProxy_DeprecatedV1_TCPRoute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TcpProxy_DeprecatedV1_TCPRoute::descriptor() {
  ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TcpProxy_DeprecatedV1_TCPRoute& TcpProxy_DeprecatedV1_TCPRoute::default_instance() {
  ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1_TCPRoute();
  return *internal_default_instance();
}

TcpProxy_DeprecatedV1_TCPRoute* TcpProxy_DeprecatedV1_TCPRoute::New(::google::protobuf::Arena* arena) const {
  TcpProxy_DeprecatedV1_TCPRoute* n = new TcpProxy_DeprecatedV1_TCPRoute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TcpProxy_DeprecatedV1_TCPRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destination_ip_list_.Clear();
  source_ip_list_.Clear();
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TcpProxy_DeprecatedV1_TCPRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.CidrRange destination_ip_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_destination_ip_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination_ports = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_ports()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_ports().data(), static_cast<int>(this->destination_ports().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.CidrRange source_ip_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_source_ip_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_ports = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_ports()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_ports().data(), static_cast<int>(this->source_ports().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  return false;
#undef DO_
}

void TcpProxy_DeprecatedV1_TCPRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster = 1;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster(), output);
  }

  // repeated .envoy.api.v2.CidrRange destination_ip_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->destination_ip_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->destination_ip_list(static_cast<int>(i)), output);
  }

  // string destination_ports = 3;
  if (this->destination_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_ports().data(), static_cast<int>(this->destination_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->destination_ports(), output);
  }

  // repeated .envoy.api.v2.CidrRange source_ip_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_ip_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->source_ip_list(static_cast<int>(i)), output);
  }

  // string source_ports = 5;
  if (this->source_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_ports().data(), static_cast<int>(this->source_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->source_ports(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
}

::google::protobuf::uint8* TcpProxy_DeprecatedV1_TCPRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster = 1;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster(), target);
  }

  // repeated .envoy.api.v2.CidrRange destination_ip_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->destination_ip_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->destination_ip_list(static_cast<int>(i)), deterministic, target);
  }

  // string destination_ports = 3;
  if (this->destination_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_ports().data(), static_cast<int>(this->destination_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destination_ports(), target);
  }

  // repeated .envoy.api.v2.CidrRange source_ip_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_ip_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->source_ip_list(static_cast<int>(i)), deterministic, target);
  }

  // string source_ports = 5;
  if (this->source_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_ports().data(), static_cast<int>(this->source_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->source_ports(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  return target;
}

size_t TcpProxy_DeprecatedV1_TCPRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.CidrRange destination_ip_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->destination_ip_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->destination_ip_list(static_cast<int>(i)));
    }
  }

  // repeated .envoy.api.v2.CidrRange source_ip_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->source_ip_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->source_ip_list(static_cast<int>(i)));
    }
  }

  // string cluster = 1;
  if (this->cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster());
  }

  // string destination_ports = 3;
  if (this->destination_ports().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_ports());
  }

  // string source_ports = 5;
  if (this->source_ports().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_ports());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TcpProxy_DeprecatedV1_TCPRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const TcpProxy_DeprecatedV1_TCPRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TcpProxy_DeprecatedV1_TCPRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
    MergeFrom(*source);
  }
}

void TcpProxy_DeprecatedV1_TCPRoute::MergeFrom(const TcpProxy_DeprecatedV1_TCPRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  destination_ip_list_.MergeFrom(from.destination_ip_list_);
  source_ip_list_.MergeFrom(from.source_ip_list_);
  if (from.cluster().size() > 0) {

    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  if (from.destination_ports().size() > 0) {

    destination_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_ports_);
  }
  if (from.source_ports().size() > 0) {

    source_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_ports_);
  }
}

void TcpProxy_DeprecatedV1_TCPRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TcpProxy_DeprecatedV1_TCPRoute::CopyFrom(const TcpProxy_DeprecatedV1_TCPRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TcpProxy_DeprecatedV1_TCPRoute::IsInitialized() const {
  return true;
}

void TcpProxy_DeprecatedV1_TCPRoute::Swap(TcpProxy_DeprecatedV1_TCPRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TcpProxy_DeprecatedV1_TCPRoute::InternalSwap(TcpProxy_DeprecatedV1_TCPRoute* other) {
  using std::swap;
  destination_ip_list_.InternalSwap(&other->destination_ip_list_);
  source_ip_list_.InternalSwap(&other->source_ip_list_);
  cluster_.Swap(&other->cluster_);
  destination_ports_.Swap(&other->destination_ports_);
  source_ports_.Swap(&other->source_ports_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TcpProxy_DeprecatedV1_TCPRoute::GetMetadata() const {
  protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TcpProxy_DeprecatedV1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TcpProxy_DeprecatedV1::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TcpProxy_DeprecatedV1::TcpProxy_DeprecatedV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
}
TcpProxy_DeprecatedV1::TcpProxy_DeprecatedV1(const TcpProxy_DeprecatedV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      routes_(from.routes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
}

void TcpProxy_DeprecatedV1::SharedCtor() {
  _cached_size_ = 0;
}

TcpProxy_DeprecatedV1::~TcpProxy_DeprecatedV1() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  SharedDtor();
}

void TcpProxy_DeprecatedV1::SharedDtor() {
}

void TcpProxy_DeprecatedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TcpProxy_DeprecatedV1::descriptor() {
  ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TcpProxy_DeprecatedV1& TcpProxy_DeprecatedV1::default_instance() {
  ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1();
  return *internal_default_instance();
}

TcpProxy_DeprecatedV1* TcpProxy_DeprecatedV1::New(::google::protobuf::Arena* arena) const {
  TcpProxy_DeprecatedV1* n = new TcpProxy_DeprecatedV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TcpProxy_DeprecatedV1::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  _internal_metadata_.Clear();
}

bool TcpProxy_DeprecatedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute routes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  return false;
#undef DO_
}

void TcpProxy_DeprecatedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute routes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->routes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
}

::google::protobuf::uint8* TcpProxy_DeprecatedV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute routes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->routes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  return target;
}

size_t TcpProxy_DeprecatedV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute routes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TcpProxy_DeprecatedV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TcpProxy_DeprecatedV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TcpProxy_DeprecatedV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
    MergeFrom(*source);
  }
}

void TcpProxy_DeprecatedV1::MergeFrom(const TcpProxy_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
}

void TcpProxy_DeprecatedV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TcpProxy_DeprecatedV1::CopyFrom(const TcpProxy_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TcpProxy_DeprecatedV1::IsInitialized() const {
  return true;
}

void TcpProxy_DeprecatedV1::Swap(TcpProxy_DeprecatedV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TcpProxy_DeprecatedV1::InternalSwap(TcpProxy_DeprecatedV1* other) {
  using std::swap;
  routes_.InternalSwap(&other->routes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TcpProxy_DeprecatedV1::GetMetadata() const {
  protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TcpProxy::InitAsDefaultInstance() {
  ::envoy::api::v2::filter::network::_TcpProxy_default_instance_._instance.get_mutable()->downstream_idle_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::envoy::api::v2::filter::network::_TcpProxy_default_instance_._instance.get_mutable()->upstream_idle_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::envoy::api::v2::filter::network::_TcpProxy_default_instance_._instance.get_mutable()->deprecated_v1_ = const_cast< ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1*>(
      ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1::internal_default_instance());
  ::envoy::api::v2::filter::network::_TcpProxy_default_instance_._instance.get_mutable()->max_connect_attempts_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
}
void TcpProxy::clear_downstream_idle_timeout() {
  if (GetArenaNoVirtual() == NULL && downstream_idle_timeout_ != NULL) {
    delete downstream_idle_timeout_;
  }
  downstream_idle_timeout_ = NULL;
}
void TcpProxy::clear_upstream_idle_timeout() {
  if (GetArenaNoVirtual() == NULL && upstream_idle_timeout_ != NULL) {
    delete upstream_idle_timeout_;
  }
  upstream_idle_timeout_ = NULL;
}
void TcpProxy::clear_access_log() {
  access_log_.Clear();
}
void TcpProxy::clear_max_connect_attempts() {
  if (GetArenaNoVirtual() == NULL && max_connect_attempts_ != NULL) {
    delete max_connect_attempts_;
  }
  max_connect_attempts_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TcpProxy::kStatPrefixFieldNumber;
const int TcpProxy::kClusterFieldNumber;
const int TcpProxy::kDownstreamIdleTimeoutFieldNumber;
const int TcpProxy::kUpstreamIdleTimeoutFieldNumber;
const int TcpProxy::kAccessLogFieldNumber;
const int TcpProxy::kDeprecatedV1FieldNumber;
const int TcpProxy::kMaxConnectAttemptsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TcpProxy::TcpProxy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.filter.network.TcpProxy)
}
TcpProxy::TcpProxy(const TcpProxy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      access_log_(from.access_log_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stat_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stat_prefix().size() > 0) {
    stat_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stat_prefix_);
  }
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster().size() > 0) {
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  if (from.has_downstream_idle_timeout()) {
    downstream_idle_timeout_ = new ::google::protobuf::Duration(*from.downstream_idle_timeout_);
  } else {
    downstream_idle_timeout_ = NULL;
  }
  if (from.has_upstream_idle_timeout()) {
    upstream_idle_timeout_ = new ::google::protobuf::Duration(*from.upstream_idle_timeout_);
  } else {
    upstream_idle_timeout_ = NULL;
  }
  if (from.has_deprecated_v1()) {
    deprecated_v1_ = new ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1(*from.deprecated_v1_);
  } else {
    deprecated_v1_ = NULL;
  }
  if (from.has_max_connect_attempts()) {
    max_connect_attempts_ = new ::google::protobuf::UInt32Value(*from.max_connect_attempts_);
  } else {
    max_connect_attempts_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.filter.network.TcpProxy)
}

void TcpProxy::SharedCtor() {
  stat_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&downstream_idle_timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_connect_attempts_) -
      reinterpret_cast<char*>(&downstream_idle_timeout_)) + sizeof(max_connect_attempts_));
  _cached_size_ = 0;
}

TcpProxy::~TcpProxy() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.filter.network.TcpProxy)
  SharedDtor();
}

void TcpProxy::SharedDtor() {
  stat_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete downstream_idle_timeout_;
  if (this != internal_default_instance()) delete upstream_idle_timeout_;
  if (this != internal_default_instance()) delete deprecated_v1_;
  if (this != internal_default_instance()) delete max_connect_attempts_;
}

void TcpProxy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TcpProxy::descriptor() {
  ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TcpProxy& TcpProxy::default_instance() {
  ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy();
  return *internal_default_instance();
}

TcpProxy* TcpProxy::New(::google::protobuf::Arena* arena) const {
  TcpProxy* n = new TcpProxy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TcpProxy::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.filter.network.TcpProxy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_log_.Clear();
  stat_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && downstream_idle_timeout_ != NULL) {
    delete downstream_idle_timeout_;
  }
  downstream_idle_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && upstream_idle_timeout_ != NULL) {
    delete upstream_idle_timeout_;
  }
  upstream_idle_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && deprecated_v1_ != NULL) {
    delete deprecated_v1_;
  }
  deprecated_v1_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_connect_attempts_ != NULL) {
    delete max_connect_attempts_;
  }
  max_connect_attempts_ = NULL;
  _internal_metadata_.Clear();
}

bool TcpProxy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.filter.network.TcpProxy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string stat_prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stat_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stat_prefix().data(), static_cast<int>(this->stat_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.filter.network.TcpProxy.stat_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.filter.network.TcpProxy.cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration downstream_idle_timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_downstream_idle_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration upstream_idle_timeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upstream_idle_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.filter.accesslog.AccessLog access_log = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_access_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1 deprecated_v1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deprecated_v1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value max_connect_attempts = 7 [(.validate.rules) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_connect_attempts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.filter.network.TcpProxy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.filter.network.TcpProxy)
  return false;
#undef DO_
}

void TcpProxy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.filter.network.TcpProxy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stat_prefix = 1;
  if (this->stat_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stat_prefix().data(), static_cast<int>(this->stat_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.stat_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stat_prefix(), output);
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster(), output);
  }

  // .google.protobuf.Duration downstream_idle_timeout = 3;
  if (this->has_downstream_idle_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->downstream_idle_timeout_, output);
  }

  // .google.protobuf.Duration upstream_idle_timeout = 4;
  if (this->has_upstream_idle_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->upstream_idle_timeout_, output);
  }

  // repeated .envoy.api.v2.filter.accesslog.AccessLog access_log = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->access_log_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->access_log(static_cast<int>(i)), output);
  }

  // .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1 deprecated_v1 = 6;
  if (this->has_deprecated_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->deprecated_v1_, output);
  }

  // .google.protobuf.UInt32Value max_connect_attempts = 7 [(.validate.rules) = {
  if (this->has_max_connect_attempts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->max_connect_attempts_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.filter.network.TcpProxy)
}

::google::protobuf::uint8* TcpProxy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.filter.network.TcpProxy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stat_prefix = 1;
  if (this->stat_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stat_prefix().data(), static_cast<int>(this->stat_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.stat_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stat_prefix(), target);
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.filter.network.TcpProxy.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster(), target);
  }

  // .google.protobuf.Duration downstream_idle_timeout = 3;
  if (this->has_downstream_idle_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->downstream_idle_timeout_, deterministic, target);
  }

  // .google.protobuf.Duration upstream_idle_timeout = 4;
  if (this->has_upstream_idle_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->upstream_idle_timeout_, deterministic, target);
  }

  // repeated .envoy.api.v2.filter.accesslog.AccessLog access_log = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->access_log_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->access_log(static_cast<int>(i)), deterministic, target);
  }

  // .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1 deprecated_v1 = 6;
  if (this->has_deprecated_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->deprecated_v1_, deterministic, target);
  }

  // .google.protobuf.UInt32Value max_connect_attempts = 7 [(.validate.rules) = {
  if (this->has_max_connect_attempts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->max_connect_attempts_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.filter.network.TcpProxy)
  return target;
}

size_t TcpProxy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.filter.network.TcpProxy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.filter.accesslog.AccessLog access_log = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->access_log_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->access_log(static_cast<int>(i)));
    }
  }

  // string stat_prefix = 1;
  if (this->stat_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stat_prefix());
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster());
  }

  // .google.protobuf.Duration downstream_idle_timeout = 3;
  if (this->has_downstream_idle_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->downstream_idle_timeout_);
  }

  // .google.protobuf.Duration upstream_idle_timeout = 4;
  if (this->has_upstream_idle_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upstream_idle_timeout_);
  }

  // .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1 deprecated_v1 = 6;
  if (this->has_deprecated_v1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deprecated_v1_);
  }

  // .google.protobuf.UInt32Value max_connect_attempts = 7 [(.validate.rules) = {
  if (this->has_max_connect_attempts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_connect_attempts_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TcpProxy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.filter.network.TcpProxy)
  GOOGLE_DCHECK_NE(&from, this);
  const TcpProxy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TcpProxy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.filter.network.TcpProxy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.filter.network.TcpProxy)
    MergeFrom(*source);
  }
}

void TcpProxy::MergeFrom(const TcpProxy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.filter.network.TcpProxy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  access_log_.MergeFrom(from.access_log_);
  if (from.stat_prefix().size() > 0) {

    stat_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stat_prefix_);
  }
  if (from.cluster().size() > 0) {

    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  if (from.has_downstream_idle_timeout()) {
    mutable_downstream_idle_timeout()->::google::protobuf::Duration::MergeFrom(from.downstream_idle_timeout());
  }
  if (from.has_upstream_idle_timeout()) {
    mutable_upstream_idle_timeout()->::google::protobuf::Duration::MergeFrom(from.upstream_idle_timeout());
  }
  if (from.has_deprecated_v1()) {
    mutable_deprecated_v1()->::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1::MergeFrom(from.deprecated_v1());
  }
  if (from.has_max_connect_attempts()) {
    mutable_max_connect_attempts()->::google::protobuf::UInt32Value::MergeFrom(from.max_connect_attempts());
  }
}

void TcpProxy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.filter.network.TcpProxy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TcpProxy::CopyFrom(const TcpProxy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.filter.network.TcpProxy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TcpProxy::IsInitialized() const {
  return true;
}

void TcpProxy::Swap(TcpProxy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TcpProxy::InternalSwap(TcpProxy* other) {
  using std::swap;
  access_log_.InternalSwap(&other->access_log_);
  stat_prefix_.Swap(&other->stat_prefix_);
  cluster_.Swap(&other->cluster_);
  swap(downstream_idle_timeout_, other->downstream_idle_timeout_);
  swap(upstream_idle_timeout_, other->upstream_idle_timeout_);
  swap(deprecated_v1_, other->deprecated_v1_);
  swap(max_connect_attempts_, other->max_connect_attempts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TcpProxy::GetMetadata() const {
  protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace network
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
