// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/filter/network/tcp_proxy.proto

#ifndef PROTOBUF_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto__INCLUDED
#define PROTOBUF_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "api/filter/accesslog/accesslog.pb.h"
#include "api/address.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTcpProxy_DeprecatedV1_TCPRouteImpl();
void InitDefaultsTcpProxy_DeprecatedV1_TCPRoute();
void InitDefaultsTcpProxy_DeprecatedV1Impl();
void InitDefaultsTcpProxy_DeprecatedV1();
void InitDefaultsTcpProxyImpl();
void InitDefaultsTcpProxy();
inline void InitDefaults() {
  InitDefaultsTcpProxy_DeprecatedV1_TCPRoute();
  InitDefaultsTcpProxy_DeprecatedV1();
  InitDefaultsTcpProxy();
}
}  // namespace protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace network {
class TcpProxy;
class TcpProxyDefaultTypeInternal;
extern TcpProxyDefaultTypeInternal _TcpProxy_default_instance_;
class TcpProxy_DeprecatedV1;
class TcpProxy_DeprecatedV1DefaultTypeInternal;
extern TcpProxy_DeprecatedV1DefaultTypeInternal _TcpProxy_DeprecatedV1_default_instance_;
class TcpProxy_DeprecatedV1_TCPRoute;
class TcpProxy_DeprecatedV1_TCPRouteDefaultTypeInternal;
extern TcpProxy_DeprecatedV1_TCPRouteDefaultTypeInternal _TcpProxy_DeprecatedV1_TCPRoute_default_instance_;
}  // namespace network
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace envoy {
namespace api {
namespace v2 {
namespace filter {
namespace network {

// ===================================================================

class TcpProxy_DeprecatedV1_TCPRoute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute) */ {
 public:
  TcpProxy_DeprecatedV1_TCPRoute();
  virtual ~TcpProxy_DeprecatedV1_TCPRoute();

  TcpProxy_DeprecatedV1_TCPRoute(const TcpProxy_DeprecatedV1_TCPRoute& from);

  inline TcpProxy_DeprecatedV1_TCPRoute& operator=(const TcpProxy_DeprecatedV1_TCPRoute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TcpProxy_DeprecatedV1_TCPRoute(TcpProxy_DeprecatedV1_TCPRoute&& from) noexcept
    : TcpProxy_DeprecatedV1_TCPRoute() {
    *this = ::std::move(from);
  }

  inline TcpProxy_DeprecatedV1_TCPRoute& operator=(TcpProxy_DeprecatedV1_TCPRoute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TcpProxy_DeprecatedV1_TCPRoute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TcpProxy_DeprecatedV1_TCPRoute* internal_default_instance() {
    return reinterpret_cast<const TcpProxy_DeprecatedV1_TCPRoute*>(
               &_TcpProxy_DeprecatedV1_TCPRoute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TcpProxy_DeprecatedV1_TCPRoute* other);
  friend void swap(TcpProxy_DeprecatedV1_TCPRoute& a, TcpProxy_DeprecatedV1_TCPRoute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TcpProxy_DeprecatedV1_TCPRoute* New() const PROTOBUF_FINAL { return New(NULL); }

  TcpProxy_DeprecatedV1_TCPRoute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TcpProxy_DeprecatedV1_TCPRoute& from);
  void MergeFrom(const TcpProxy_DeprecatedV1_TCPRoute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TcpProxy_DeprecatedV1_TCPRoute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.CidrRange destination_ip_list = 2;
  int destination_ip_list_size() const;
  void clear_destination_ip_list();
  static const int kDestinationIpListFieldNumber = 2;
  const ::envoy::api::v2::CidrRange& destination_ip_list(int index) const;
  ::envoy::api::v2::CidrRange* mutable_destination_ip_list(int index);
  ::envoy::api::v2::CidrRange* add_destination_ip_list();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >*
      mutable_destination_ip_list();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >&
      destination_ip_list() const;

  // repeated .envoy.api.v2.CidrRange source_ip_list = 4;
  int source_ip_list_size() const;
  void clear_source_ip_list();
  static const int kSourceIpListFieldNumber = 4;
  const ::envoy::api::v2::CidrRange& source_ip_list(int index) const;
  ::envoy::api::v2::CidrRange* mutable_source_ip_list(int index);
  ::envoy::api::v2::CidrRange* add_source_ip_list();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >*
      mutable_source_ip_list();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >&
      source_ip_list() const;

  // string cluster = 1;
  void clear_cluster();
  static const int kClusterFieldNumber = 1;
  const ::std::string& cluster() const;
  void set_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster(::std::string&& value);
  #endif
  void set_cluster(const char* value);
  void set_cluster(const char* value, size_t size);
  ::std::string* mutable_cluster();
  ::std::string* release_cluster();
  void set_allocated_cluster(::std::string* cluster);

  // string destination_ports = 3;
  void clear_destination_ports();
  static const int kDestinationPortsFieldNumber = 3;
  const ::std::string& destination_ports() const;
  void set_destination_ports(const ::std::string& value);
  #if LANG_CXX11
  void set_destination_ports(::std::string&& value);
  #endif
  void set_destination_ports(const char* value);
  void set_destination_ports(const char* value, size_t size);
  ::std::string* mutable_destination_ports();
  ::std::string* release_destination_ports();
  void set_allocated_destination_ports(::std::string* destination_ports);

  // string source_ports = 5;
  void clear_source_ports();
  static const int kSourcePortsFieldNumber = 5;
  const ::std::string& source_ports() const;
  void set_source_ports(const ::std::string& value);
  #if LANG_CXX11
  void set_source_ports(::std::string&& value);
  #endif
  void set_source_ports(const char* value);
  void set_source_ports(const char* value, size_t size);
  ::std::string* mutable_source_ports();
  ::std::string* release_source_ports();
  void set_allocated_source_ports(::std::string* source_ports);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange > destination_ip_list_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange > source_ip_list_;
  ::google::protobuf::internal::ArenaStringPtr cluster_;
  ::google::protobuf::internal::ArenaStringPtr destination_ports_;
  ::google::protobuf::internal::ArenaStringPtr source_ports_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::TableStruct;
  friend void ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1_TCPRouteImpl();
};
// -------------------------------------------------------------------

class TcpProxy_DeprecatedV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1) */ {
 public:
  TcpProxy_DeprecatedV1();
  virtual ~TcpProxy_DeprecatedV1();

  TcpProxy_DeprecatedV1(const TcpProxy_DeprecatedV1& from);

  inline TcpProxy_DeprecatedV1& operator=(const TcpProxy_DeprecatedV1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TcpProxy_DeprecatedV1(TcpProxy_DeprecatedV1&& from) noexcept
    : TcpProxy_DeprecatedV1() {
    *this = ::std::move(from);
  }

  inline TcpProxy_DeprecatedV1& operator=(TcpProxy_DeprecatedV1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TcpProxy_DeprecatedV1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TcpProxy_DeprecatedV1* internal_default_instance() {
    return reinterpret_cast<const TcpProxy_DeprecatedV1*>(
               &_TcpProxy_DeprecatedV1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TcpProxy_DeprecatedV1* other);
  friend void swap(TcpProxy_DeprecatedV1& a, TcpProxy_DeprecatedV1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TcpProxy_DeprecatedV1* New() const PROTOBUF_FINAL { return New(NULL); }

  TcpProxy_DeprecatedV1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TcpProxy_DeprecatedV1& from);
  void MergeFrom(const TcpProxy_DeprecatedV1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TcpProxy_DeprecatedV1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TcpProxy_DeprecatedV1_TCPRoute TCPRoute;

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute routes = 1;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 1;
  const ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute& routes(int index) const;
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute* mutable_routes(int index);
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute* add_routes();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute >&
      routes() const;

  // @@protoc_insertion_point(class_scope:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute > routes_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::TableStruct;
  friend void ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxy_DeprecatedV1Impl();
};
// -------------------------------------------------------------------

class TcpProxy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.filter.network.TcpProxy) */ {
 public:
  TcpProxy();
  virtual ~TcpProxy();

  TcpProxy(const TcpProxy& from);

  inline TcpProxy& operator=(const TcpProxy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TcpProxy(TcpProxy&& from) noexcept
    : TcpProxy() {
    *this = ::std::move(from);
  }

  inline TcpProxy& operator=(TcpProxy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TcpProxy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TcpProxy* internal_default_instance() {
    return reinterpret_cast<const TcpProxy*>(
               &_TcpProxy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TcpProxy* other);
  friend void swap(TcpProxy& a, TcpProxy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TcpProxy* New() const PROTOBUF_FINAL { return New(NULL); }

  TcpProxy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TcpProxy& from);
  void MergeFrom(const TcpProxy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TcpProxy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TcpProxy_DeprecatedV1 DeprecatedV1;

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.filter.accesslog.AccessLog access_log = 5;
  int access_log_size() const;
  void clear_access_log();
  static const int kAccessLogFieldNumber = 5;
  const ::envoy::api::v2::filter::accesslog::AccessLog& access_log(int index) const;
  ::envoy::api::v2::filter::accesslog::AccessLog* mutable_access_log(int index);
  ::envoy::api::v2::filter::accesslog::AccessLog* add_access_log();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >*
      mutable_access_log();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >&
      access_log() const;

  // string stat_prefix = 1;
  void clear_stat_prefix();
  static const int kStatPrefixFieldNumber = 1;
  const ::std::string& stat_prefix() const;
  void set_stat_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_stat_prefix(::std::string&& value);
  #endif
  void set_stat_prefix(const char* value);
  void set_stat_prefix(const char* value, size_t size);
  ::std::string* mutable_stat_prefix();
  ::std::string* release_stat_prefix();
  void set_allocated_stat_prefix(::std::string* stat_prefix);

  // string cluster = 2;
  void clear_cluster();
  static const int kClusterFieldNumber = 2;
  const ::std::string& cluster() const;
  void set_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster(::std::string&& value);
  #endif
  void set_cluster(const char* value);
  void set_cluster(const char* value, size_t size);
  ::std::string* mutable_cluster();
  ::std::string* release_cluster();
  void set_allocated_cluster(::std::string* cluster);

  // .google.protobuf.Duration downstream_idle_timeout = 3;
  bool has_downstream_idle_timeout() const;
  void clear_downstream_idle_timeout();
  static const int kDownstreamIdleTimeoutFieldNumber = 3;
  const ::google::protobuf::Duration& downstream_idle_timeout() const;
  ::google::protobuf::Duration* release_downstream_idle_timeout();
  ::google::protobuf::Duration* mutable_downstream_idle_timeout();
  void set_allocated_downstream_idle_timeout(::google::protobuf::Duration* downstream_idle_timeout);

  // .google.protobuf.Duration upstream_idle_timeout = 4;
  bool has_upstream_idle_timeout() const;
  void clear_upstream_idle_timeout();
  static const int kUpstreamIdleTimeoutFieldNumber = 4;
  const ::google::protobuf::Duration& upstream_idle_timeout() const;
  ::google::protobuf::Duration* release_upstream_idle_timeout();
  ::google::protobuf::Duration* mutable_upstream_idle_timeout();
  void set_allocated_upstream_idle_timeout(::google::protobuf::Duration* upstream_idle_timeout);

  // .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1 deprecated_v1 = 6;
  bool has_deprecated_v1() const;
  void clear_deprecated_v1();
  static const int kDeprecatedV1FieldNumber = 6;
  const ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1& deprecated_v1() const;
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* release_deprecated_v1();
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* mutable_deprecated_v1();
  void set_allocated_deprecated_v1(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* deprecated_v1);

  // .google.protobuf.UInt32Value max_connect_attempts = 7 [(.validate.rules) = {
  bool has_max_connect_attempts() const;
  void clear_max_connect_attempts();
  static const int kMaxConnectAttemptsFieldNumber = 7;
  const ::google::protobuf::UInt32Value& max_connect_attempts() const;
  ::google::protobuf::UInt32Value* release_max_connect_attempts();
  ::google::protobuf::UInt32Value* mutable_max_connect_attempts();
  void set_allocated_max_connect_attempts(::google::protobuf::UInt32Value* max_connect_attempts);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.filter.network.TcpProxy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog > access_log_;
  ::google::protobuf::internal::ArenaStringPtr stat_prefix_;
  ::google::protobuf::internal::ArenaStringPtr cluster_;
  ::google::protobuf::Duration* downstream_idle_timeout_;
  ::google::protobuf::Duration* upstream_idle_timeout_;
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* deprecated_v1_;
  ::google::protobuf::UInt32Value* max_connect_attempts_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::TableStruct;
  friend void ::protobuf_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto::InitDefaultsTcpProxyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TcpProxy_DeprecatedV1_TCPRoute

// string cluster = 1;
inline void TcpProxy_DeprecatedV1_TCPRoute::clear_cluster() {
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TcpProxy_DeprecatedV1_TCPRoute::cluster() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
  return cluster_.GetNoArena();
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_cluster(const ::std::string& value) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
}
#if LANG_CXX11
inline void TcpProxy_DeprecatedV1_TCPRoute::set_cluster(::std::string&& value) {
  
  cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
}
#endif
inline void TcpProxy_DeprecatedV1_TCPRoute::set_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_cluster(const char* value, size_t size) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
}
inline ::std::string* TcpProxy_DeprecatedV1_TCPRoute::mutable_cluster() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
  return cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TcpProxy_DeprecatedV1_TCPRoute::release_cluster() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
  
  return cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_allocated_cluster(::std::string* cluster) {
  if (cluster != NULL) {
    
  } else {
    
  }
  cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.cluster)
}

// repeated .envoy.api.v2.CidrRange destination_ip_list = 2;
inline int TcpProxy_DeprecatedV1_TCPRoute::destination_ip_list_size() const {
  return destination_ip_list_.size();
}
inline const ::envoy::api::v2::CidrRange& TcpProxy_DeprecatedV1_TCPRoute::destination_ip_list(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ip_list)
  return destination_ip_list_.Get(index);
}
inline ::envoy::api::v2::CidrRange* TcpProxy_DeprecatedV1_TCPRoute::mutable_destination_ip_list(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ip_list)
  return destination_ip_list_.Mutable(index);
}
inline ::envoy::api::v2::CidrRange* TcpProxy_DeprecatedV1_TCPRoute::add_destination_ip_list() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ip_list)
  return destination_ip_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >*
TcpProxy_DeprecatedV1_TCPRoute::mutable_destination_ip_list() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ip_list)
  return &destination_ip_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >&
TcpProxy_DeprecatedV1_TCPRoute::destination_ip_list() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ip_list)
  return destination_ip_list_;
}

// string destination_ports = 3;
inline void TcpProxy_DeprecatedV1_TCPRoute::clear_destination_ports() {
  destination_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TcpProxy_DeprecatedV1_TCPRoute::destination_ports() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
  return destination_ports_.GetNoArena();
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_destination_ports(const ::std::string& value) {
  
  destination_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
}
#if LANG_CXX11
inline void TcpProxy_DeprecatedV1_TCPRoute::set_destination_ports(::std::string&& value) {
  
  destination_ports_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
}
#endif
inline void TcpProxy_DeprecatedV1_TCPRoute::set_destination_ports(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destination_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_destination_ports(const char* value, size_t size) {
  
  destination_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
}
inline ::std::string* TcpProxy_DeprecatedV1_TCPRoute::mutable_destination_ports() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
  return destination_ports_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TcpProxy_DeprecatedV1_TCPRoute::release_destination_ports() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
  
  return destination_ports_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_allocated_destination_ports(::std::string* destination_ports) {
  if (destination_ports != NULL) {
    
  } else {
    
  }
  destination_ports_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_ports);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.destination_ports)
}

// repeated .envoy.api.v2.CidrRange source_ip_list = 4;
inline int TcpProxy_DeprecatedV1_TCPRoute::source_ip_list_size() const {
  return source_ip_list_.size();
}
inline const ::envoy::api::v2::CidrRange& TcpProxy_DeprecatedV1_TCPRoute::source_ip_list(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ip_list)
  return source_ip_list_.Get(index);
}
inline ::envoy::api::v2::CidrRange* TcpProxy_DeprecatedV1_TCPRoute::mutable_source_ip_list(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ip_list)
  return source_ip_list_.Mutable(index);
}
inline ::envoy::api::v2::CidrRange* TcpProxy_DeprecatedV1_TCPRoute::add_source_ip_list() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ip_list)
  return source_ip_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >*
TcpProxy_DeprecatedV1_TCPRoute::mutable_source_ip_list() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ip_list)
  return &source_ip_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::CidrRange >&
TcpProxy_DeprecatedV1_TCPRoute::source_ip_list() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ip_list)
  return source_ip_list_;
}

// string source_ports = 5;
inline void TcpProxy_DeprecatedV1_TCPRoute::clear_source_ports() {
  source_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TcpProxy_DeprecatedV1_TCPRoute::source_ports() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
  return source_ports_.GetNoArena();
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_source_ports(const ::std::string& value) {
  
  source_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
}
#if LANG_CXX11
inline void TcpProxy_DeprecatedV1_TCPRoute::set_source_ports(::std::string&& value) {
  
  source_ports_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
}
#endif
inline void TcpProxy_DeprecatedV1_TCPRoute::set_source_ports(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_source_ports(const char* value, size_t size) {
  
  source_ports_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
}
inline ::std::string* TcpProxy_DeprecatedV1_TCPRoute::mutable_source_ports() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
  return source_ports_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TcpProxy_DeprecatedV1_TCPRoute::release_source_ports() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
  
  return source_ports_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TcpProxy_DeprecatedV1_TCPRoute::set_allocated_source_ports(::std::string* source_ports) {
  if (source_ports != NULL) {
    
  } else {
    
  }
  source_ports_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_ports);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute.source_ports)
}

// -------------------------------------------------------------------

// TcpProxy_DeprecatedV1

// repeated .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.TCPRoute routes = 1;
inline int TcpProxy_DeprecatedV1::routes_size() const {
  return routes_.size();
}
inline void TcpProxy_DeprecatedV1::clear_routes() {
  routes_.Clear();
}
inline const ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute& TcpProxy_DeprecatedV1::routes(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.routes)
  return routes_.Get(index);
}
inline ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute* TcpProxy_DeprecatedV1::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.routes)
  return routes_.Mutable(index);
}
inline ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute* TcpProxy_DeprecatedV1::add_routes() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute >*
TcpProxy_DeprecatedV1::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1_TCPRoute >&
TcpProxy_DeprecatedV1::routes() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.filter.network.TcpProxy.DeprecatedV1.routes)
  return routes_;
}

// -------------------------------------------------------------------

// TcpProxy

// string stat_prefix = 1;
inline void TcpProxy::clear_stat_prefix() {
  stat_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TcpProxy::stat_prefix() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
  return stat_prefix_.GetNoArena();
}
inline void TcpProxy::set_stat_prefix(const ::std::string& value) {
  
  stat_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
}
#if LANG_CXX11
inline void TcpProxy::set_stat_prefix(::std::string&& value) {
  
  stat_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
}
#endif
inline void TcpProxy::set_stat_prefix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stat_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
}
inline void TcpProxy::set_stat_prefix(const char* value, size_t size) {
  
  stat_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
}
inline ::std::string* TcpProxy::mutable_stat_prefix() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
  return stat_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TcpProxy::release_stat_prefix() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
  
  return stat_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TcpProxy::set_allocated_stat_prefix(::std::string* stat_prefix) {
  if (stat_prefix != NULL) {
    
  } else {
    
  }
  stat_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stat_prefix);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.stat_prefix)
}

// string cluster = 2;
inline void TcpProxy::clear_cluster() {
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TcpProxy::cluster() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.cluster)
  return cluster_.GetNoArena();
}
inline void TcpProxy::set_cluster(const ::std::string& value) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.filter.network.TcpProxy.cluster)
}
#if LANG_CXX11
inline void TcpProxy::set_cluster(::std::string&& value) {
  
  cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.filter.network.TcpProxy.cluster)
}
#endif
inline void TcpProxy::set_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.filter.network.TcpProxy.cluster)
}
inline void TcpProxy::set_cluster(const char* value, size_t size) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.filter.network.TcpProxy.cluster)
}
inline ::std::string* TcpProxy::mutable_cluster() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.cluster)
  return cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TcpProxy::release_cluster() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.cluster)
  
  return cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TcpProxy::set_allocated_cluster(::std::string* cluster) {
  if (cluster != NULL) {
    
  } else {
    
  }
  cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.cluster)
}

// .google.protobuf.Duration downstream_idle_timeout = 3;
inline bool TcpProxy::has_downstream_idle_timeout() const {
  return this != internal_default_instance() && downstream_idle_timeout_ != NULL;
}
inline const ::google::protobuf::Duration& TcpProxy::downstream_idle_timeout() const {
  const ::google::protobuf::Duration* p = downstream_idle_timeout_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.downstream_idle_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* TcpProxy::release_downstream_idle_timeout() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.downstream_idle_timeout)
  
  ::google::protobuf::Duration* temp = downstream_idle_timeout_;
  downstream_idle_timeout_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* TcpProxy::mutable_downstream_idle_timeout() {
  
  if (downstream_idle_timeout_ == NULL) {
    downstream_idle_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.downstream_idle_timeout)
  return downstream_idle_timeout_;
}
inline void TcpProxy::set_allocated_downstream_idle_timeout(::google::protobuf::Duration* downstream_idle_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(downstream_idle_timeout_);
  }
  if (downstream_idle_timeout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(downstream_idle_timeout)->GetArena();
    if (message_arena != submessage_arena) {
      downstream_idle_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, downstream_idle_timeout, submessage_arena);
    }
    
  } else {
    
  }
  downstream_idle_timeout_ = downstream_idle_timeout;
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.downstream_idle_timeout)
}

// .google.protobuf.Duration upstream_idle_timeout = 4;
inline bool TcpProxy::has_upstream_idle_timeout() const {
  return this != internal_default_instance() && upstream_idle_timeout_ != NULL;
}
inline const ::google::protobuf::Duration& TcpProxy::upstream_idle_timeout() const {
  const ::google::protobuf::Duration* p = upstream_idle_timeout_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.upstream_idle_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* TcpProxy::release_upstream_idle_timeout() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.upstream_idle_timeout)
  
  ::google::protobuf::Duration* temp = upstream_idle_timeout_;
  upstream_idle_timeout_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* TcpProxy::mutable_upstream_idle_timeout() {
  
  if (upstream_idle_timeout_ == NULL) {
    upstream_idle_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.upstream_idle_timeout)
  return upstream_idle_timeout_;
}
inline void TcpProxy::set_allocated_upstream_idle_timeout(::google::protobuf::Duration* upstream_idle_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(upstream_idle_timeout_);
  }
  if (upstream_idle_timeout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(upstream_idle_timeout)->GetArena();
    if (message_arena != submessage_arena) {
      upstream_idle_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, upstream_idle_timeout, submessage_arena);
    }
    
  } else {
    
  }
  upstream_idle_timeout_ = upstream_idle_timeout;
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.upstream_idle_timeout)
}

// repeated .envoy.api.v2.filter.accesslog.AccessLog access_log = 5;
inline int TcpProxy::access_log_size() const {
  return access_log_.size();
}
inline const ::envoy::api::v2::filter::accesslog::AccessLog& TcpProxy::access_log(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.access_log)
  return access_log_.Get(index);
}
inline ::envoy::api::v2::filter::accesslog::AccessLog* TcpProxy::mutable_access_log(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.access_log)
  return access_log_.Mutable(index);
}
inline ::envoy::api::v2::filter::accesslog::AccessLog* TcpProxy::add_access_log() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.filter.network.TcpProxy.access_log)
  return access_log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >*
TcpProxy::mutable_access_log() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.filter.network.TcpProxy.access_log)
  return &access_log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::filter::accesslog::AccessLog >&
TcpProxy::access_log() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.filter.network.TcpProxy.access_log)
  return access_log_;
}

// .envoy.api.v2.filter.network.TcpProxy.DeprecatedV1 deprecated_v1 = 6;
inline bool TcpProxy::has_deprecated_v1() const {
  return this != internal_default_instance() && deprecated_v1_ != NULL;
}
inline void TcpProxy::clear_deprecated_v1() {
  if (GetArenaNoVirtual() == NULL && deprecated_v1_ != NULL) {
    delete deprecated_v1_;
  }
  deprecated_v1_ = NULL;
}
inline const ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1& TcpProxy::deprecated_v1() const {
  const ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* p = deprecated_v1_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.deprecated_v1)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1*>(
      &::envoy::api::v2::filter::network::_TcpProxy_DeprecatedV1_default_instance_);
}
inline ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* TcpProxy::release_deprecated_v1() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.deprecated_v1)
  
  ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* temp = deprecated_v1_;
  deprecated_v1_ = NULL;
  return temp;
}
inline ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* TcpProxy::mutable_deprecated_v1() {
  
  if (deprecated_v1_ == NULL) {
    deprecated_v1_ = new ::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.deprecated_v1)
  return deprecated_v1_;
}
inline void TcpProxy::set_allocated_deprecated_v1(::envoy::api::v2::filter::network::TcpProxy_DeprecatedV1* deprecated_v1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deprecated_v1_;
  }
  if (deprecated_v1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deprecated_v1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deprecated_v1, submessage_arena);
    }
    
  } else {
    
  }
  deprecated_v1_ = deprecated_v1;
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.deprecated_v1)
}

// .google.protobuf.UInt32Value max_connect_attempts = 7 [(.validate.rules) = {
inline bool TcpProxy::has_max_connect_attempts() const {
  return this != internal_default_instance() && max_connect_attempts_ != NULL;
}
inline const ::google::protobuf::UInt32Value& TcpProxy::max_connect_attempts() const {
  const ::google::protobuf::UInt32Value* p = max_connect_attempts_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.filter.network.TcpProxy.max_connect_attempts)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::UInt32Value*>(
      &::google::protobuf::_UInt32Value_default_instance_);
}
inline ::google::protobuf::UInt32Value* TcpProxy::release_max_connect_attempts() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.filter.network.TcpProxy.max_connect_attempts)
  
  ::google::protobuf::UInt32Value* temp = max_connect_attempts_;
  max_connect_attempts_ = NULL;
  return temp;
}
inline ::google::protobuf::UInt32Value* TcpProxy::mutable_max_connect_attempts() {
  
  if (max_connect_attempts_ == NULL) {
    max_connect_attempts_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.filter.network.TcpProxy.max_connect_attempts)
  return max_connect_attempts_;
}
inline void TcpProxy::set_allocated_max_connect_attempts(::google::protobuf::UInt32Value* max_connect_attempts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_connect_attempts_);
  }
  if (max_connect_attempts) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(max_connect_attempts)->GetArena();
    if (message_arena != submessage_arena) {
      max_connect_attempts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_connect_attempts, submessage_arena);
    }
    
  } else {
    
  }
  max_connect_attempts_ = max_connect_attempts;
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.filter.network.TcpProxy.max_connect_attempts)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace network
}  // namespace filter
}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2ffilter_2fnetwork_2ftcp_5fproxy_2eproto__INCLUDED
