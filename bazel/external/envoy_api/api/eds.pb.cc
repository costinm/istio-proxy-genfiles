// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/eds.proto

#include "api/eds.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class LbEndpointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LbEndpoint>
      _instance;
} _LbEndpoint_default_instance_;
class LocalityLbEndpointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalityLbEndpoints>
      _instance;
} _LocalityLbEndpoints_default_instance_;
class EndpointLoadMetricStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndpointLoadMetricStats>
      _instance;
} _EndpointLoadMetricStats_default_instance_;
class UpstreamLocalityStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpstreamLocalityStats>
      _instance;
} _UpstreamLocalityStats_default_instance_;
class ClusterStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterStats>
      _instance;
} _ClusterStats_default_instance_;
class LoadStatsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadStatsRequest>
      _instance;
} _LoadStatsRequest_default_instance_;
class ClusterLoadAssignment_PolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterLoadAssignment_Policy>
      _instance;
} _ClusterLoadAssignment_Policy_default_instance_;
class ClusterLoadAssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterLoadAssignment>
      _instance;
} _ClusterLoadAssignment_default_instance_;
class LoadStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadStatsResponse>
      _instance;
} _LoadStatsResponse_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace protobuf_api_2feds_2eproto {
void InitDefaultsLbEndpointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbase_2eproto::InitDefaultsEndpoint();
  protobuf_api_2fbase_2eproto::InitDefaultsMetadata();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsUInt32Value();
  {
    void* ptr = &::envoy::api::v2::_LbEndpoint_default_instance_;
    new (ptr) ::envoy::api::v2::LbEndpoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::LbEndpoint::InitAsDefaultInstance();
}

void InitDefaultsLbEndpoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLbEndpointImpl);
}

void InitDefaultsLocalityLbEndpointsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbase_2eproto::InitDefaultsLocality();
  protobuf_api_2feds_2eproto::InitDefaultsLbEndpoint();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsUInt32Value();
  {
    void* ptr = &::envoy::api::v2::_LocalityLbEndpoints_default_instance_;
    new (ptr) ::envoy::api::v2::LocalityLbEndpoints();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::LocalityLbEndpoints::InitAsDefaultInstance();
}

void InitDefaultsLocalityLbEndpoints() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalityLbEndpointsImpl);
}

void InitDefaultsEndpointLoadMetricStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_EndpointLoadMetricStats_default_instance_;
    new (ptr) ::envoy::api::v2::EndpointLoadMetricStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::EndpointLoadMetricStats::InitAsDefaultInstance();
}

void InitDefaultsEndpointLoadMetricStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEndpointLoadMetricStatsImpl);
}

void InitDefaultsUpstreamLocalityStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbase_2eproto::InitDefaultsLocality();
  protobuf_api_2feds_2eproto::InitDefaultsEndpointLoadMetricStats();
  {
    void* ptr = &::envoy::api::v2::_UpstreamLocalityStats_default_instance_;
    new (ptr) ::envoy::api::v2::UpstreamLocalityStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::UpstreamLocalityStats::InitAsDefaultInstance();
}

void InitDefaultsUpstreamLocalityStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpstreamLocalityStatsImpl);
}

void InitDefaultsClusterStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2feds_2eproto::InitDefaultsUpstreamLocalityStats();
  {
    void* ptr = &::envoy::api::v2::_ClusterStats_default_instance_;
    new (ptr) ::envoy::api::v2::ClusterStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::ClusterStats::InitAsDefaultInstance();
}

void InitDefaultsClusterStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterStatsImpl);
}

void InitDefaultsLoadStatsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2fbase_2eproto::InitDefaultsNode();
  protobuf_api_2feds_2eproto::InitDefaultsClusterStats();
  {
    void* ptr = &::envoy::api::v2::_LoadStatsRequest_default_instance_;
    new (ptr) ::envoy::api::v2::LoadStatsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::LoadStatsRequest::InitAsDefaultInstance();
}

void InitDefaultsLoadStatsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadStatsRequestImpl);
}

void InitDefaultsClusterLoadAssignment_PolicyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_ClusterLoadAssignment_Policy_default_instance_;
    new (ptr) ::envoy::api::v2::ClusterLoadAssignment_Policy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::ClusterLoadAssignment_Policy::InitAsDefaultInstance();
}

void InitDefaultsClusterLoadAssignment_Policy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterLoadAssignment_PolicyImpl);
}

void InitDefaultsClusterLoadAssignmentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2feds_2eproto::InitDefaultsLocalityLbEndpoints();
  protobuf_api_2feds_2eproto::InitDefaultsClusterLoadAssignment_Policy();
  {
    void* ptr = &::envoy::api::v2::_ClusterLoadAssignment_default_instance_;
    new (ptr) ::envoy::api::v2::ClusterLoadAssignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::ClusterLoadAssignment::InitAsDefaultInstance();
}

void InitDefaultsClusterLoadAssignment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClusterLoadAssignmentImpl);
}

void InitDefaultsLoadStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::envoy::api::v2::_LoadStatsResponse_default_instance_;
    new (ptr) ::envoy::api::v2::LoadStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::LoadStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsLoadStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoadStatsResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LbEndpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LbEndpoint, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LbEndpoint, health_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LbEndpoint, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LbEndpoint, load_balancing_weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LocalityLbEndpoints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LocalityLbEndpoints, locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LocalityLbEndpoints, lb_endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LocalityLbEndpoints, load_balancing_weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::EndpointLoadMetricStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::EndpointLoadMetricStats, metric_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::EndpointLoadMetricStats, num_requests_finished_with_metric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::EndpointLoadMetricStats, total_metric_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::UpstreamLocalityStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::UpstreamLocalityStats, locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::UpstreamLocalityStats, total_successful_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::UpstreamLocalityStats, total_requests_in_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::UpstreamLocalityStats, total_error_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::UpstreamLocalityStats, load_metric_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterStats, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterStats, upstream_locality_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterStats, total_dropped_requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LoadStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LoadStatsRequest, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LoadStatsRequest, cluster_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterLoadAssignment_Policy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterLoadAssignment_Policy, drop_overload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterLoadAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterLoadAssignment, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterLoadAssignment, endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterLoadAssignment, failover_endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::ClusterLoadAssignment, policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LoadStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LoadStatsResponse, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::LoadStatsResponse, load_reporting_interval_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::envoy::api::v2::LbEndpoint)},
  { 9, -1, sizeof(::envoy::api::v2::LocalityLbEndpoints)},
  { 17, -1, sizeof(::envoy::api::v2::EndpointLoadMetricStats)},
  { 25, -1, sizeof(::envoy::api::v2::UpstreamLocalityStats)},
  { 35, -1, sizeof(::envoy::api::v2::ClusterStats)},
  { 43, -1, sizeof(::envoy::api::v2::LoadStatsRequest)},
  { 50, -1, sizeof(::envoy::api::v2::ClusterLoadAssignment_Policy)},
  { 56, -1, sizeof(::envoy::api::v2::ClusterLoadAssignment)},
  { 65, -1, sizeof(::envoy::api::v2::LoadStatsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_LbEndpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_LocalityLbEndpoints_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_EndpointLoadMetricStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_UpstreamLocalityStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_ClusterStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_LoadStatsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_ClusterLoadAssignment_Policy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_ClusterLoadAssignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_LoadStatsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/eds.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rapi/eds.proto\022\014envoy.api.v2\032\016api/base."
      "proto\032\023api/discovery.proto\032\026api/health_c"
      "heck.proto\032\034google/api/annotations.proto"
      "\032\036google/protobuf/duration.proto\032\036google"
      "/protobuf/wrappers.proto\"\320\001\n\nLbEndpoint\022"
      "(\n\010endpoint\030\001 \001(\0132\026.envoy.api.v2.Endpoin"
      "t\0221\n\rhealth_status\030\002 \001(\0162\032.envoy.api.v2."
      "HealthStatus\022(\n\010metadata\030\003 \001(\0132\026.envoy.a"
      "pi.v2.Metadata\022;\n\025load_balancing_weight\030"
      "\004 \001(\0132\034.google.protobuf.UInt32Value\"\254\001\n\023"
      "LocalityLbEndpoints\022(\n\010locality\030\001 \001(\0132\026."
      "envoy.api.v2.Locality\022.\n\014lb_endpoints\030\002 "
      "\003(\0132\030.envoy.api.v2.LbEndpoint\022;\n\025load_ba"
      "lancing_weight\030\003 \001(\0132\034.google.protobuf.U"
      "Int32Value\"u\n\027EndpointLoadMetricStats\022\023\n"
      "\013metric_name\030\001 \001(\t\022)\n!num_requests_finis"
      "hed_with_metric\030\002 \001(\004\022\032\n\022total_metric_va"
      "lue\030\003 \001(\001\"\350\001\n\025UpstreamLocalityStats\022(\n\010l"
      "ocality\030\001 \001(\0132\026.envoy.api.v2.Locality\022!\n"
      "\031total_successful_requests\030\002 \001(\004\022\"\n\032tota"
      "l_requests_in_progress\030\003 \001(\004\022\034\n\024total_er"
      "ror_requests\030\004 \001(\004\022@\n\021load_metric_stats\030"
      "\005 \003(\0132%.envoy.api.v2.EndpointLoadMetricS"
      "tats\"\212\001\n\014ClusterStats\022\024\n\014cluster_name\030\001 "
      "\001(\t\022D\n\027upstream_locality_stats\030\002 \003(\0132#.e"
      "nvoy.api.v2.UpstreamLocalityStats\022\036\n\026tot"
      "al_dropped_requests\030\003 \001(\004\"g\n\020LoadStatsRe"
      "quest\022 \n\004node\030\001 \001(\0132\022.envoy.api.v2.Node\022"
      "1\n\rcluster_stats\030\002 \003(\0132\032.envoy.api.v2.Cl"
      "usterStats\"\377\001\n\025ClusterLoadAssignment\022\024\n\014"
      "cluster_name\030\001 \001(\t\0224\n\tendpoints\030\002 \003(\0132!."
      "envoy.api.v2.LocalityLbEndpoints\022=\n\022fail"
      "over_endpoints\030\003 \003(\0132!.envoy.api.v2.Loca"
      "lityLbEndpoints\022:\n\006policy\030\004 \001(\0132*.envoy."
      "api.v2.ClusterLoadAssignment.Policy\032\037\n\006P"
      "olicy\022\025\n\rdrop_overload\030\001 \001(\001\"a\n\021LoadStat"
      "sResponse\022\020\n\010clusters\030\001 \003(\t\022:\n\027load_repo"
      "rting_interval\030\002 \001(\0132\031.google.protobuf.D"
      "uration2\305\002\n\030EndpointDiscoveryService\022X\n\017"
      "StreamEndpoints\022\036.envoy.api.v2.Discovery"
      "Request\032\037.envoy.api.v2.DiscoveryResponse"
      "\"\000(\0010\001\022u\n\016FetchEndpoints\022\036.envoy.api.v2."
      "DiscoveryRequest\032\037.envoy.api.v2.Discover"
      "yResponse\"\"\202\323\344\223\002\034\"\027/v2/discovery:endpoin"
      "ts:\001*\022X\n\017StreamLoadStats\022\036.envoy.api.v2."
      "LoadStatsRequest\032\037.envoy.api.v2.LoadStat"
      "sResponse\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1863);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/eds.proto", &protobuf_RegisterTypes);
  ::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::protobuf_api_2fdiscovery_2eproto::AddDescriptors();
  ::protobuf_api_2fhealth_5fcheck_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2feds_2eproto
namespace envoy {
namespace api {
namespace v2 {

// ===================================================================

void LbEndpoint::InitAsDefaultInstance() {
  ::envoy::api::v2::_LbEndpoint_default_instance_._instance.get_mutable()->endpoint_ = const_cast< ::envoy::api::v2::Endpoint*>(
      ::envoy::api::v2::Endpoint::internal_default_instance());
  ::envoy::api::v2::_LbEndpoint_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::envoy::api::v2::Metadata*>(
      ::envoy::api::v2::Metadata::internal_default_instance());
  ::envoy::api::v2::_LbEndpoint_default_instance_._instance.get_mutable()->load_balancing_weight_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbEndpoint::kEndpointFieldNumber;
const int LbEndpoint::kHealthStatusFieldNumber;
const int LbEndpoint::kMetadataFieldNumber;
const int LbEndpoint::kLoadBalancingWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbEndpoint::LbEndpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsLbEndpoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LbEndpoint)
}
LbEndpoint::LbEndpoint(const LbEndpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_endpoint()) {
    endpoint_ = new ::envoy::api::v2::Endpoint(*from.endpoint_);
  } else {
    endpoint_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::envoy::api::v2::Metadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_load_balancing_weight()) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value(*from.load_balancing_weight_);
  } else {
    load_balancing_weight_ = NULL;
  }
  health_status_ = from.health_status_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LbEndpoint)
}

void LbEndpoint::SharedCtor() {
  ::memset(&endpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&health_status_) -
      reinterpret_cast<char*>(&endpoint_)) + sizeof(health_status_));
  _cached_size_ = 0;
}

LbEndpoint::~LbEndpoint() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LbEndpoint)
  SharedDtor();
}

void LbEndpoint::SharedDtor() {
  if (this != internal_default_instance()) delete endpoint_;
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete load_balancing_weight_;
}

void LbEndpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbEndpoint::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbEndpoint& LbEndpoint::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsLbEndpoint();
  return *internal_default_instance();
}

LbEndpoint* LbEndpoint::New(::google::protobuf::Arena* arena) const {
  LbEndpoint* n = new LbEndpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbEndpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LbEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && endpoint_ != NULL) {
    delete endpoint_;
  }
  endpoint_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) {
    delete load_balancing_weight_;
  }
  load_balancing_weight_ = NULL;
  health_status_ = 0;
  _internal_metadata_.Clear();
}

bool LbEndpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LbEndpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Endpoint endpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_endpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.HealthStatus health_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_health_status(static_cast< ::envoy::api::v2::HealthStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Metadata metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value load_balancing_weight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load_balancing_weight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LbEndpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LbEndpoint)
  return false;
#undef DO_
}

void LbEndpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LbEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Endpoint endpoint = 1;
  if (this->has_endpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->endpoint_, output);
  }

  // .envoy.api.v2.HealthStatus health_status = 2;
  if (this->health_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->health_status(), output);
  }

  // .envoy.api.v2.Metadata metadata = 3;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->metadata_, output);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 4;
  if (this->has_load_balancing_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->load_balancing_weight_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LbEndpoint)
}

::google::protobuf::uint8* LbEndpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LbEndpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Endpoint endpoint = 1;
  if (this->has_endpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->endpoint_, deterministic, target);
  }

  // .envoy.api.v2.HealthStatus health_status = 2;
  if (this->health_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->health_status(), target);
  }

  // .envoy.api.v2.Metadata metadata = 3;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->metadata_, deterministic, target);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 4;
  if (this->has_load_balancing_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->load_balancing_weight_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LbEndpoint)
  return target;
}

size_t LbEndpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LbEndpoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.Endpoint endpoint = 1;
  if (this->has_endpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->endpoint_);
  }

  // .envoy.api.v2.Metadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metadata_);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 4;
  if (this->has_load_balancing_weight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->load_balancing_weight_);
  }

  // .envoy.api.v2.HealthStatus health_status = 2;
  if (this->health_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->health_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbEndpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LbEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const LbEndpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbEndpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LbEndpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LbEndpoint)
    MergeFrom(*source);
  }
}

void LbEndpoint::MergeFrom(const LbEndpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LbEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_endpoint()) {
    mutable_endpoint()->::envoy::api::v2::Endpoint::MergeFrom(from.endpoint());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::envoy::api::v2::Metadata::MergeFrom(from.metadata());
  }
  if (from.has_load_balancing_weight()) {
    mutable_load_balancing_weight()->::google::protobuf::UInt32Value::MergeFrom(from.load_balancing_weight());
  }
  if (from.health_status() != 0) {
    set_health_status(from.health_status());
  }
}

void LbEndpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LbEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbEndpoint::CopyFrom(const LbEndpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LbEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbEndpoint::IsInitialized() const {
  return true;
}

void LbEndpoint::Swap(LbEndpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbEndpoint::InternalSwap(LbEndpoint* other) {
  using std::swap;
  swap(endpoint_, other->endpoint_);
  swap(metadata_, other->metadata_);
  swap(load_balancing_weight_, other->load_balancing_weight_);
  swap(health_status_, other->health_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbEndpoint::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalityLbEndpoints::InitAsDefaultInstance() {
  ::envoy::api::v2::_LocalityLbEndpoints_default_instance_._instance.get_mutable()->locality_ = const_cast< ::envoy::api::v2::Locality*>(
      ::envoy::api::v2::Locality::internal_default_instance());
  ::envoy::api::v2::_LocalityLbEndpoints_default_instance_._instance.get_mutable()->load_balancing_weight_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalityLbEndpoints::kLocalityFieldNumber;
const int LocalityLbEndpoints::kLbEndpointsFieldNumber;
const int LocalityLbEndpoints::kLoadBalancingWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalityLbEndpoints::LocalityLbEndpoints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsLocalityLbEndpoints();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LocalityLbEndpoints)
}
LocalityLbEndpoints::LocalityLbEndpoints(const LocalityLbEndpoints& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lb_endpoints_(from.lb_endpoints_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locality()) {
    locality_ = new ::envoy::api::v2::Locality(*from.locality_);
  } else {
    locality_ = NULL;
  }
  if (from.has_load_balancing_weight()) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value(*from.load_balancing_weight_);
  } else {
    load_balancing_weight_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LocalityLbEndpoints)
}

void LocalityLbEndpoints::SharedCtor() {
  ::memset(&locality_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_balancing_weight_) -
      reinterpret_cast<char*>(&locality_)) + sizeof(load_balancing_weight_));
  _cached_size_ = 0;
}

LocalityLbEndpoints::~LocalityLbEndpoints() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LocalityLbEndpoints)
  SharedDtor();
}

void LocalityLbEndpoints::SharedDtor() {
  if (this != internal_default_instance()) delete locality_;
  if (this != internal_default_instance()) delete load_balancing_weight_;
}

void LocalityLbEndpoints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalityLbEndpoints::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalityLbEndpoints& LocalityLbEndpoints::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsLocalityLbEndpoints();
  return *internal_default_instance();
}

LocalityLbEndpoints* LocalityLbEndpoints::New(::google::protobuf::Arena* arena) const {
  LocalityLbEndpoints* n = new LocalityLbEndpoints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalityLbEndpoints::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LocalityLbEndpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lb_endpoints_.Clear();
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) {
    delete locality_;
  }
  locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) {
    delete load_balancing_weight_;
  }
  load_balancing_weight_ = NULL;
  _internal_metadata_.Clear();
}

bool LocalityLbEndpoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LocalityLbEndpoints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Locality locality = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lb_endpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value load_balancing_weight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load_balancing_weight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LocalityLbEndpoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LocalityLbEndpoints)
  return false;
#undef DO_
}

void LocalityLbEndpoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LocalityLbEndpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locality_, output);
  }

  // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lb_endpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lb_endpoints(static_cast<int>(i)), output);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 3;
  if (this->has_load_balancing_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->load_balancing_weight_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LocalityLbEndpoints)
}

::google::protobuf::uint8* LocalityLbEndpoints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LocalityLbEndpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locality_, deterministic, target);
  }

  // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lb_endpoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->lb_endpoints(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 3;
  if (this->has_load_balancing_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->load_balancing_weight_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LocalityLbEndpoints)
  return target;
}

size_t LocalityLbEndpoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LocalityLbEndpoints)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lb_endpoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lb_endpoints(static_cast<int>(i)));
    }
  }

  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locality_);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 3;
  if (this->has_load_balancing_weight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->load_balancing_weight_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalityLbEndpoints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LocalityLbEndpoints)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalityLbEndpoints* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalityLbEndpoints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LocalityLbEndpoints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LocalityLbEndpoints)
    MergeFrom(*source);
  }
}

void LocalityLbEndpoints::MergeFrom(const LocalityLbEndpoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LocalityLbEndpoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lb_endpoints_.MergeFrom(from.lb_endpoints_);
  if (from.has_locality()) {
    mutable_locality()->::envoy::api::v2::Locality::MergeFrom(from.locality());
  }
  if (from.has_load_balancing_weight()) {
    mutable_load_balancing_weight()->::google::protobuf::UInt32Value::MergeFrom(from.load_balancing_weight());
  }
}

void LocalityLbEndpoints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LocalityLbEndpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalityLbEndpoints::CopyFrom(const LocalityLbEndpoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LocalityLbEndpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalityLbEndpoints::IsInitialized() const {
  return true;
}

void LocalityLbEndpoints::Swap(LocalityLbEndpoints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalityLbEndpoints::InternalSwap(LocalityLbEndpoints* other) {
  using std::swap;
  lb_endpoints_.InternalSwap(&other->lb_endpoints_);
  swap(locality_, other->locality_);
  swap(load_balancing_weight_, other->load_balancing_weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalityLbEndpoints::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndpointLoadMetricStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndpointLoadMetricStats::kMetricNameFieldNumber;
const int EndpointLoadMetricStats::kNumRequestsFinishedWithMetricFieldNumber;
const int EndpointLoadMetricStats::kTotalMetricValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndpointLoadMetricStats::EndpointLoadMetricStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsEndpointLoadMetricStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.EndpointLoadMetricStats)
}
EndpointLoadMetricStats::EndpointLoadMetricStats(const EndpointLoadMetricStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metric_name().size() > 0) {
    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
  ::memcpy(&num_requests_finished_with_metric_, &from.num_requests_finished_with_metric_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_metric_value_) -
    reinterpret_cast<char*>(&num_requests_finished_with_metric_)) + sizeof(total_metric_value_));
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.EndpointLoadMetricStats)
}

void EndpointLoadMetricStats::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_requests_finished_with_metric_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_metric_value_) -
      reinterpret_cast<char*>(&num_requests_finished_with_metric_)) + sizeof(total_metric_value_));
  _cached_size_ = 0;
}

EndpointLoadMetricStats::~EndpointLoadMetricStats() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.EndpointLoadMetricStats)
  SharedDtor();
}

void EndpointLoadMetricStats::SharedDtor() {
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EndpointLoadMetricStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndpointLoadMetricStats::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndpointLoadMetricStats& EndpointLoadMetricStats::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsEndpointLoadMetricStats();
  return *internal_default_instance();
}

EndpointLoadMetricStats* EndpointLoadMetricStats::New(::google::protobuf::Arena* arena) const {
  EndpointLoadMetricStats* n = new EndpointLoadMetricStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndpointLoadMetricStats::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.EndpointLoadMetricStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_requests_finished_with_metric_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_metric_value_) -
      reinterpret_cast<char*>(&num_requests_finished_with_metric_)) + sizeof(total_metric_value_));
  _internal_metadata_.Clear();
}

bool EndpointLoadMetricStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.EndpointLoadMetricStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string metric_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), static_cast<int>(this->metric_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EndpointLoadMetricStats.metric_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_requests_finished_with_metric = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_requests_finished_with_metric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double total_metric_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_metric_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.EndpointLoadMetricStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.EndpointLoadMetricStats)
  return false;
#undef DO_
}

void EndpointLoadMetricStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.EndpointLoadMetricStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EndpointLoadMetricStats.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  // uint64 num_requests_finished_with_metric = 2;
  if (this->num_requests_finished_with_metric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num_requests_finished_with_metric(), output);
  }

  // double total_metric_value = 3;
  if (this->total_metric_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->total_metric_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.EndpointLoadMetricStats)
}

::google::protobuf::uint8* EndpointLoadMetricStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.EndpointLoadMetricStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EndpointLoadMetricStats.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  // uint64 num_requests_finished_with_metric = 2;
  if (this->num_requests_finished_with_metric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num_requests_finished_with_metric(), target);
  }

  // double total_metric_value = 3;
  if (this->total_metric_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->total_metric_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.EndpointLoadMetricStats)
  return target;
}

size_t EndpointLoadMetricStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.EndpointLoadMetricStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  // uint64 num_requests_finished_with_metric = 2;
  if (this->num_requests_finished_with_metric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_requests_finished_with_metric());
  }

  // double total_metric_value = 3;
  if (this->total_metric_value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndpointLoadMetricStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.EndpointLoadMetricStats)
  GOOGLE_DCHECK_NE(&from, this);
  const EndpointLoadMetricStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndpointLoadMetricStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.EndpointLoadMetricStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.EndpointLoadMetricStats)
    MergeFrom(*source);
  }
}

void EndpointLoadMetricStats::MergeFrom(const EndpointLoadMetricStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.EndpointLoadMetricStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {

    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
  if (from.num_requests_finished_with_metric() != 0) {
    set_num_requests_finished_with_metric(from.num_requests_finished_with_metric());
  }
  if (from.total_metric_value() != 0) {
    set_total_metric_value(from.total_metric_value());
  }
}

void EndpointLoadMetricStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.EndpointLoadMetricStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndpointLoadMetricStats::CopyFrom(const EndpointLoadMetricStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.EndpointLoadMetricStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndpointLoadMetricStats::IsInitialized() const {
  return true;
}

void EndpointLoadMetricStats::Swap(EndpointLoadMetricStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndpointLoadMetricStats::InternalSwap(EndpointLoadMetricStats* other) {
  using std::swap;
  metric_name_.Swap(&other->metric_name_);
  swap(num_requests_finished_with_metric_, other->num_requests_finished_with_metric_);
  swap(total_metric_value_, other->total_metric_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndpointLoadMetricStats::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpstreamLocalityStats::InitAsDefaultInstance() {
  ::envoy::api::v2::_UpstreamLocalityStats_default_instance_._instance.get_mutable()->locality_ = const_cast< ::envoy::api::v2::Locality*>(
      ::envoy::api::v2::Locality::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpstreamLocalityStats::kLocalityFieldNumber;
const int UpstreamLocalityStats::kTotalSuccessfulRequestsFieldNumber;
const int UpstreamLocalityStats::kTotalRequestsInProgressFieldNumber;
const int UpstreamLocalityStats::kTotalErrorRequestsFieldNumber;
const int UpstreamLocalityStats::kLoadMetricStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpstreamLocalityStats::UpstreamLocalityStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsUpstreamLocalityStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.UpstreamLocalityStats)
}
UpstreamLocalityStats::UpstreamLocalityStats(const UpstreamLocalityStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      load_metric_stats_(from.load_metric_stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locality()) {
    locality_ = new ::envoy::api::v2::Locality(*from.locality_);
  } else {
    locality_ = NULL;
  }
  ::memcpy(&total_successful_requests_, &from.total_successful_requests_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_error_requests_) -
    reinterpret_cast<char*>(&total_successful_requests_)) + sizeof(total_error_requests_));
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.UpstreamLocalityStats)
}

void UpstreamLocalityStats::SharedCtor() {
  ::memset(&locality_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_error_requests_) -
      reinterpret_cast<char*>(&locality_)) + sizeof(total_error_requests_));
  _cached_size_ = 0;
}

UpstreamLocalityStats::~UpstreamLocalityStats() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.UpstreamLocalityStats)
  SharedDtor();
}

void UpstreamLocalityStats::SharedDtor() {
  if (this != internal_default_instance()) delete locality_;
}

void UpstreamLocalityStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpstreamLocalityStats::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpstreamLocalityStats& UpstreamLocalityStats::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsUpstreamLocalityStats();
  return *internal_default_instance();
}

UpstreamLocalityStats* UpstreamLocalityStats::New(::google::protobuf::Arena* arena) const {
  UpstreamLocalityStats* n = new UpstreamLocalityStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpstreamLocalityStats::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.UpstreamLocalityStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  load_metric_stats_.Clear();
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) {
    delete locality_;
  }
  locality_ = NULL;
  ::memset(&total_successful_requests_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_error_requests_) -
      reinterpret_cast<char*>(&total_successful_requests_)) + sizeof(total_error_requests_));
  _internal_metadata_.Clear();
}

bool UpstreamLocalityStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.UpstreamLocalityStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Locality locality = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_successful_requests = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_successful_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_requests_in_progress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_requests_in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_error_requests = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_error_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_load_metric_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.UpstreamLocalityStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.UpstreamLocalityStats)
  return false;
#undef DO_
}

void UpstreamLocalityStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.UpstreamLocalityStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locality_, output);
  }

  // uint64 total_successful_requests = 2;
  if (this->total_successful_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->total_successful_requests(), output);
  }

  // uint64 total_requests_in_progress = 3;
  if (this->total_requests_in_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total_requests_in_progress(), output);
  }

  // uint64 total_error_requests = 4;
  if (this->total_error_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->total_error_requests(), output);
  }

  // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->load_metric_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->load_metric_stats(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.UpstreamLocalityStats)
}

::google::protobuf::uint8* UpstreamLocalityStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.UpstreamLocalityStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locality_, deterministic, target);
  }

  // uint64 total_successful_requests = 2;
  if (this->total_successful_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->total_successful_requests(), target);
  }

  // uint64 total_requests_in_progress = 3;
  if (this->total_requests_in_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total_requests_in_progress(), target);
  }

  // uint64 total_error_requests = 4;
  if (this->total_error_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->total_error_requests(), target);
  }

  // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->load_metric_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->load_metric_stats(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.UpstreamLocalityStats)
  return target;
}

size_t UpstreamLocalityStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.UpstreamLocalityStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->load_metric_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->load_metric_stats(static_cast<int>(i)));
    }
  }

  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locality_);
  }

  // uint64 total_successful_requests = 2;
  if (this->total_successful_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_successful_requests());
  }

  // uint64 total_requests_in_progress = 3;
  if (this->total_requests_in_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_requests_in_progress());
  }

  // uint64 total_error_requests = 4;
  if (this->total_error_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_error_requests());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpstreamLocalityStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.UpstreamLocalityStats)
  GOOGLE_DCHECK_NE(&from, this);
  const UpstreamLocalityStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpstreamLocalityStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.UpstreamLocalityStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.UpstreamLocalityStats)
    MergeFrom(*source);
  }
}

void UpstreamLocalityStats::MergeFrom(const UpstreamLocalityStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.UpstreamLocalityStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  load_metric_stats_.MergeFrom(from.load_metric_stats_);
  if (from.has_locality()) {
    mutable_locality()->::envoy::api::v2::Locality::MergeFrom(from.locality());
  }
  if (from.total_successful_requests() != 0) {
    set_total_successful_requests(from.total_successful_requests());
  }
  if (from.total_requests_in_progress() != 0) {
    set_total_requests_in_progress(from.total_requests_in_progress());
  }
  if (from.total_error_requests() != 0) {
    set_total_error_requests(from.total_error_requests());
  }
}

void UpstreamLocalityStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.UpstreamLocalityStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpstreamLocalityStats::CopyFrom(const UpstreamLocalityStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.UpstreamLocalityStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpstreamLocalityStats::IsInitialized() const {
  return true;
}

void UpstreamLocalityStats::Swap(UpstreamLocalityStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpstreamLocalityStats::InternalSwap(UpstreamLocalityStats* other) {
  using std::swap;
  load_metric_stats_.InternalSwap(&other->load_metric_stats_);
  swap(locality_, other->locality_);
  swap(total_successful_requests_, other->total_successful_requests_);
  swap(total_requests_in_progress_, other->total_requests_in_progress_);
  swap(total_error_requests_, other->total_error_requests_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpstreamLocalityStats::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterStats::kClusterNameFieldNumber;
const int ClusterStats::kUpstreamLocalityStatsFieldNumber;
const int ClusterStats::kTotalDroppedRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterStats::ClusterStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsClusterStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterStats)
}
ClusterStats::ClusterStats(const ClusterStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      upstream_locality_stats_(from.upstream_locality_stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  total_dropped_requests_ = from.total_dropped_requests_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterStats)
}

void ClusterStats::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_dropped_requests_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ClusterStats::~ClusterStats() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterStats)
  SharedDtor();
}

void ClusterStats::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterStats::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterStats& ClusterStats::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsClusterStats();
  return *internal_default_instance();
}

ClusterStats* ClusterStats::New(::google::protobuf::Arena* arena) const {
  ClusterStats* n = new ClusterStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterStats::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  upstream_locality_stats_.Clear();
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_dropped_requests_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ClusterStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterStats.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_upstream_locality_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_dropped_requests = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_dropped_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterStats)
  return false;
#undef DO_
}

void ClusterStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterStats.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->upstream_locality_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->upstream_locality_stats(static_cast<int>(i)), output);
  }

  // uint64 total_dropped_requests = 3;
  if (this->total_dropped_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total_dropped_requests(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterStats)
}

::google::protobuf::uint8* ClusterStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterStats.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->upstream_locality_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->upstream_locality_stats(static_cast<int>(i)), deterministic, target);
  }

  // uint64 total_dropped_requests = 3;
  if (this->total_dropped_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total_dropped_requests(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterStats)
  return target;
}

size_t ClusterStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->upstream_locality_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->upstream_locality_stats(static_cast<int>(i)));
    }
  }

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // uint64 total_dropped_requests = 3;
  if (this->total_dropped_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_dropped_requests());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterStats)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterStats)
    MergeFrom(*source);
  }
}

void ClusterStats::MergeFrom(const ClusterStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  upstream_locality_stats_.MergeFrom(from.upstream_locality_stats_);
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.total_dropped_requests() != 0) {
    set_total_dropped_requests(from.total_dropped_requests());
  }
}

void ClusterStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterStats::CopyFrom(const ClusterStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterStats::IsInitialized() const {
  return true;
}

void ClusterStats::Swap(ClusterStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterStats::InternalSwap(ClusterStats* other) {
  using std::swap;
  upstream_locality_stats_.InternalSwap(&other->upstream_locality_stats_);
  cluster_name_.Swap(&other->cluster_name_);
  swap(total_dropped_requests_, other->total_dropped_requests_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterStats::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadStatsRequest::InitAsDefaultInstance() {
  ::envoy::api::v2::_LoadStatsRequest_default_instance_._instance.get_mutable()->node_ = const_cast< ::envoy::api::v2::Node*>(
      ::envoy::api::v2::Node::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadStatsRequest::kNodeFieldNumber;
const int LoadStatsRequest::kClusterStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadStatsRequest::LoadStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsLoadStatsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LoadStatsRequest)
}
LoadStatsRequest::LoadStatsRequest(const LoadStatsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cluster_stats_(from.cluster_stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::envoy::api::v2::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LoadStatsRequest)
}

void LoadStatsRequest::SharedCtor() {
  node_ = NULL;
  _cached_size_ = 0;
}

LoadStatsRequest::~LoadStatsRequest() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LoadStatsRequest)
  SharedDtor();
}

void LoadStatsRequest::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void LoadStatsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadStatsRequest::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadStatsRequest& LoadStatsRequest::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsLoadStatsRequest();
  return *internal_default_instance();
}

LoadStatsRequest* LoadStatsRequest::New(::google::protobuf::Arena* arena) const {
  LoadStatsRequest* n = new LoadStatsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LoadStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_stats_.Clear();
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  _internal_metadata_.Clear();
}

bool LoadStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LoadStatsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Node node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.ClusterStats cluster_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cluster_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LoadStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LoadStatsRequest)
  return false;
#undef DO_
}

void LoadStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LoadStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->node_, output);
  }

  // repeated .envoy.api.v2.ClusterStats cluster_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cluster_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cluster_stats(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LoadStatsRequest)
}

::google::protobuf::uint8* LoadStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LoadStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->node_, deterministic, target);
  }

  // repeated .envoy.api.v2.ClusterStats cluster_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cluster_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->cluster_stats(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LoadStatsRequest)
  return target;
}

size_t LoadStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LoadStatsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.ClusterStats cluster_stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cluster_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cluster_stats(static_cast<int>(i)));
    }
  }

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LoadStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadStatsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LoadStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LoadStatsRequest)
    MergeFrom(*source);
  }
}

void LoadStatsRequest::MergeFrom(const LoadStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LoadStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cluster_stats_.MergeFrom(from.cluster_stats_);
  if (from.has_node()) {
    mutable_node()->::envoy::api::v2::Node::MergeFrom(from.node());
  }
}

void LoadStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LoadStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadStatsRequest::CopyFrom(const LoadStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LoadStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadStatsRequest::IsInitialized() const {
  return true;
}

void LoadStatsRequest::Swap(LoadStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadStatsRequest::InternalSwap(LoadStatsRequest* other) {
  using std::swap;
  cluster_stats_.InternalSwap(&other->cluster_stats_);
  swap(node_, other->node_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadStatsRequest::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterLoadAssignment_Policy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterLoadAssignment_Policy::kDropOverloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterLoadAssignment_Policy::ClusterLoadAssignment_Policy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsClusterLoadAssignment_Policy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterLoadAssignment.Policy)
}
ClusterLoadAssignment_Policy::ClusterLoadAssignment_Policy(const ClusterLoadAssignment_Policy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drop_overload_ = from.drop_overload_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterLoadAssignment.Policy)
}

void ClusterLoadAssignment_Policy::SharedCtor() {
  drop_overload_ = 0;
  _cached_size_ = 0;
}

ClusterLoadAssignment_Policy::~ClusterLoadAssignment_Policy() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterLoadAssignment.Policy)
  SharedDtor();
}

void ClusterLoadAssignment_Policy::SharedDtor() {
}

void ClusterLoadAssignment_Policy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterLoadAssignment_Policy::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterLoadAssignment_Policy& ClusterLoadAssignment_Policy::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsClusterLoadAssignment_Policy();
  return *internal_default_instance();
}

ClusterLoadAssignment_Policy* ClusterLoadAssignment_Policy::New(::google::protobuf::Arena* arena) const {
  ClusterLoadAssignment_Policy* n = new ClusterLoadAssignment_Policy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterLoadAssignment_Policy::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drop_overload_ = 0;
  _internal_metadata_.Clear();
}

bool ClusterLoadAssignment_Policy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double drop_overload = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &drop_overload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterLoadAssignment.Policy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterLoadAssignment.Policy)
  return false;
#undef DO_
}

void ClusterLoadAssignment_Policy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double drop_overload = 1;
  if (this->drop_overload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->drop_overload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterLoadAssignment.Policy)
}

::google::protobuf::uint8* ClusterLoadAssignment_Policy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double drop_overload = 1;
  if (this->drop_overload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->drop_overload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterLoadAssignment.Policy)
  return target;
}

size_t ClusterLoadAssignment_Policy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double drop_overload = 1;
  if (this->drop_overload() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterLoadAssignment_Policy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterLoadAssignment_Policy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterLoadAssignment_Policy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterLoadAssignment.Policy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterLoadAssignment.Policy)
    MergeFrom(*source);
  }
}

void ClusterLoadAssignment_Policy::MergeFrom(const ClusterLoadAssignment_Policy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drop_overload() != 0) {
    set_drop_overload(from.drop_overload());
  }
}

void ClusterLoadAssignment_Policy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterLoadAssignment_Policy::CopyFrom(const ClusterLoadAssignment_Policy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterLoadAssignment_Policy::IsInitialized() const {
  return true;
}

void ClusterLoadAssignment_Policy::Swap(ClusterLoadAssignment_Policy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterLoadAssignment_Policy::InternalSwap(ClusterLoadAssignment_Policy* other) {
  using std::swap;
  swap(drop_overload_, other->drop_overload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterLoadAssignment_Policy::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterLoadAssignment::InitAsDefaultInstance() {
  ::envoy::api::v2::_ClusterLoadAssignment_default_instance_._instance.get_mutable()->policy_ = const_cast< ::envoy::api::v2::ClusterLoadAssignment_Policy*>(
      ::envoy::api::v2::ClusterLoadAssignment_Policy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterLoadAssignment::kClusterNameFieldNumber;
const int ClusterLoadAssignment::kEndpointsFieldNumber;
const int ClusterLoadAssignment::kFailoverEndpointsFieldNumber;
const int ClusterLoadAssignment::kPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterLoadAssignment::ClusterLoadAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsClusterLoadAssignment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterLoadAssignment)
}
ClusterLoadAssignment::ClusterLoadAssignment(const ClusterLoadAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      endpoints_(from.endpoints_),
      failover_endpoints_(from.failover_endpoints_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_policy()) {
    policy_ = new ::envoy::api::v2::ClusterLoadAssignment_Policy(*from.policy_);
  } else {
    policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterLoadAssignment)
}

void ClusterLoadAssignment::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  policy_ = NULL;
  _cached_size_ = 0;
}

ClusterLoadAssignment::~ClusterLoadAssignment() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterLoadAssignment)
  SharedDtor();
}

void ClusterLoadAssignment::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete policy_;
}

void ClusterLoadAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterLoadAssignment::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterLoadAssignment& ClusterLoadAssignment::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsClusterLoadAssignment();
  return *internal_default_instance();
}

ClusterLoadAssignment* ClusterLoadAssignment::New(::google::protobuf::Arena* arena) const {
  ClusterLoadAssignment* n = new ClusterLoadAssignment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterLoadAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterLoadAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  endpoints_.Clear();
  failover_endpoints_.Clear();
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && policy_ != NULL) {
    delete policy_;
  }
  policy_ = NULL;
  _internal_metadata_.Clear();
}

bool ClusterLoadAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterLoadAssignment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterLoadAssignment.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_endpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_failover_endpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterLoadAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterLoadAssignment)
  return false;
#undef DO_
}

void ClusterLoadAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterLoadAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterLoadAssignment.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->endpoints(static_cast<int>(i)), output);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failover_endpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->failover_endpoints(static_cast<int>(i)), output);
  }

  // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
  if (this->has_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->policy_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterLoadAssignment)
}

::google::protobuf::uint8* ClusterLoadAssignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterLoadAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterLoadAssignment.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->endpoints(static_cast<int>(i)), deterministic, target);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failover_endpoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->failover_endpoints(static_cast<int>(i)), deterministic, target);
  }

  // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
  if (this->has_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->policy_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterLoadAssignment)
  return target;
}

size_t ClusterLoadAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterLoadAssignment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->endpoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->endpoints(static_cast<int>(i)));
    }
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->failover_endpoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->failover_endpoints(static_cast<int>(i)));
    }
  }

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
  if (this->has_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterLoadAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterLoadAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterLoadAssignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterLoadAssignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterLoadAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterLoadAssignment)
    MergeFrom(*source);
  }
}

void ClusterLoadAssignment::MergeFrom(const ClusterLoadAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterLoadAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  endpoints_.MergeFrom(from.endpoints_);
  failover_endpoints_.MergeFrom(from.failover_endpoints_);
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_policy()) {
    mutable_policy()->::envoy::api::v2::ClusterLoadAssignment_Policy::MergeFrom(from.policy());
  }
}

void ClusterLoadAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterLoadAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterLoadAssignment::CopyFrom(const ClusterLoadAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterLoadAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterLoadAssignment::IsInitialized() const {
  return true;
}

void ClusterLoadAssignment::Swap(ClusterLoadAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterLoadAssignment::InternalSwap(ClusterLoadAssignment* other) {
  using std::swap;
  endpoints_.InternalSwap(&other->endpoints_);
  failover_endpoints_.InternalSwap(&other->failover_endpoints_);
  cluster_name_.Swap(&other->cluster_name_);
  swap(policy_, other->policy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterLoadAssignment::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoadStatsResponse::InitAsDefaultInstance() {
  ::envoy::api::v2::_LoadStatsResponse_default_instance_._instance.get_mutable()->load_reporting_interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadStatsResponse::kClustersFieldNumber;
const int LoadStatsResponse::kLoadReportingIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadStatsResponse::LoadStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2feds_2eproto::InitDefaultsLoadStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LoadStatsResponse)
}
LoadStatsResponse::LoadStatsResponse(const LoadStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_load_reporting_interval()) {
    load_reporting_interval_ = new ::google::protobuf::Duration(*from.load_reporting_interval_);
  } else {
    load_reporting_interval_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LoadStatsResponse)
}

void LoadStatsResponse::SharedCtor() {
  load_reporting_interval_ = NULL;
  _cached_size_ = 0;
}

LoadStatsResponse::~LoadStatsResponse() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LoadStatsResponse)
  SharedDtor();
}

void LoadStatsResponse::SharedDtor() {
  if (this != internal_default_instance()) delete load_reporting_interval_;
}

void LoadStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadStatsResponse::descriptor() {
  ::protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoadStatsResponse& LoadStatsResponse::default_instance() {
  ::protobuf_api_2feds_2eproto::InitDefaultsLoadStatsResponse();
  return *internal_default_instance();
}

LoadStatsResponse* LoadStatsResponse::New(::google::protobuf::Arena* arena) const {
  LoadStatsResponse* n = new LoadStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LoadStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  if (GetArenaNoVirtual() == NULL && load_reporting_interval_ != NULL) {
    delete load_reporting_interval_;
  }
  load_reporting_interval_ = NULL;
  _internal_metadata_.Clear();
}

bool LoadStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LoadStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string clusters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_clusters()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clusters(this->clusters_size() - 1).data(),
            static_cast<int>(this->clusters(this->clusters_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.LoadStatsResponse.clusters"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration load_reporting_interval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load_reporting_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LoadStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LoadStatsResponse)
  return false;
#undef DO_
}

void LoadStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LoadStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string clusters = 1;
  for (int i = 0, n = this->clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clusters(i).data(), static_cast<int>(this->clusters(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LoadStatsResponse.clusters");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->clusters(i), output);
  }

  // .google.protobuf.Duration load_reporting_interval = 2;
  if (this->has_load_reporting_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->load_reporting_interval_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LoadStatsResponse)
}

::google::protobuf::uint8* LoadStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LoadStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string clusters = 1;
  for (int i = 0, n = this->clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clusters(i).data(), static_cast<int>(this->clusters(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LoadStatsResponse.clusters");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->clusters(i), target);
  }

  // .google.protobuf.Duration load_reporting_interval = 2;
  if (this->has_load_reporting_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->load_reporting_interval_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LoadStatsResponse)
  return target;
}

size_t LoadStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LoadStatsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string clusters = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->clusters_size());
  for (int i = 0, n = this->clusters_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->clusters(i));
  }

  // .google.protobuf.Duration load_reporting_interval = 2;
  if (this->has_load_reporting_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->load_reporting_interval_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LoadStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LoadStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LoadStatsResponse)
    MergeFrom(*source);
  }
}

void LoadStatsResponse::MergeFrom(const LoadStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LoadStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  if (from.has_load_reporting_interval()) {
    mutable_load_reporting_interval()->::google::protobuf::Duration::MergeFrom(from.load_reporting_interval());
  }
}

void LoadStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LoadStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadStatsResponse::CopyFrom(const LoadStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LoadStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadStatsResponse::IsInitialized() const {
  return true;
}

void LoadStatsResponse::Swap(LoadStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadStatsResponse::InternalSwap(LoadStatsResponse* other) {
  using std::swap;
  clusters_.InternalSwap(&other->clusters_);
  swap(load_reporting_interval_, other->load_reporting_interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadStatsResponse::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2feds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
