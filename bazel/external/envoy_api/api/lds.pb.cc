// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/lds.proto

#include "api/lds.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class Filter_DeprecatedV1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Filter_DeprecatedV1>
      _instance;
} _Filter_DeprecatedV1_default_instance_;
class FilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Filter>
      _instance;
} _Filter_default_instance_;
class FilterChainMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FilterChainMatch>
      _instance;
} _FilterChainMatch_default_instance_;
class FilterChainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FilterChain>
      _instance;
} _FilterChain_default_instance_;
class Listener_DeprecatedV1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Listener_DeprecatedV1>
      _instance;
} _Listener_DeprecatedV1_default_instance_;
class ListenerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Listener>
      _instance;
} _Listener_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace protobuf_api_2flds_2eproto {
void InitDefaultsFilter_DeprecatedV1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::envoy::api::v2::_Filter_DeprecatedV1_default_instance_;
    new (ptr) ::envoy::api::v2::Filter_DeprecatedV1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Filter_DeprecatedV1::InitAsDefaultInstance();
}

void InitDefaultsFilter_DeprecatedV1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFilter_DeprecatedV1Impl);
}

void InitDefaultsFilterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  protobuf_api_2flds_2eproto::InitDefaultsFilter_DeprecatedV1();
  {
    void* ptr = &::envoy::api::v2::_Filter_default_instance_;
    new (ptr) ::envoy::api::v2::Filter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Filter::InitAsDefaultInstance();
}

void InitDefaultsFilter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFilterImpl);
}

void InitDefaultsFilterChainMatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2faddress_2eproto::InitDefaultsCidrRange();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsUInt32Value();
  {
    void* ptr = &::envoy::api::v2::_FilterChainMatch_default_instance_;
    new (ptr) ::envoy::api::v2::FilterChainMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::FilterChainMatch::InitAsDefaultInstance();
}

void InitDefaultsFilterChainMatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFilterChainMatchImpl);
}

void InitDefaultsFilterChainImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2flds_2eproto::InitDefaultsFilterChainMatch();
  protobuf_api_2fsds_2eproto::InitDefaultsDownstreamTlsContext();
  protobuf_api_2flds_2eproto::InitDefaultsFilter();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsBoolValue();
  protobuf_api_2fbase_2eproto::InitDefaultsMetadata();
  {
    void* ptr = &::envoy::api::v2::_FilterChain_default_instance_;
    new (ptr) ::envoy::api::v2::FilterChain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::FilterChain::InitAsDefaultInstance();
}

void InitDefaultsFilterChain() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFilterChainImpl);
}

void InitDefaultsListener_DeprecatedV1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::envoy::api::v2::_Listener_DeprecatedV1_default_instance_;
    new (ptr) ::envoy::api::v2::Listener_DeprecatedV1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Listener_DeprecatedV1::InitAsDefaultInstance();
}

void InitDefaultsListener_DeprecatedV1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListener_DeprecatedV1Impl);
}

void InitDefaultsListenerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_api_2faddress_2eproto::InitDefaultsAddress();
  protobuf_api_2flds_2eproto::InitDefaultsFilterChain();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsBoolValue();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsUInt32Value();
  protobuf_api_2fbase_2eproto::InitDefaultsMetadata();
  protobuf_api_2flds_2eproto::InitDefaultsListener_DeprecatedV1();
  {
    void* ptr = &::envoy::api::v2::_Listener_default_instance_;
    new (ptr) ::envoy::api::v2::Listener();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::envoy::api::v2::Listener::InitAsDefaultInstance();
}

void InitDefaultsListener() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListenerImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Filter_DeprecatedV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Filter_DeprecatedV1, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Filter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Filter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Filter, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Filter, deprecated_v1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, sni_domains_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, prefix_ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, address_suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, suffix_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, source_prefix_ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, source_ports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChainMatch, destination_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChain, filter_chain_match_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChain, tls_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChain, filters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChain, use_proxy_proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::FilterChain, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener_DeprecatedV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener_DeprecatedV1, bind_to_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, filter_chains_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, use_original_dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, per_connection_buffer_limit_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::envoy::api::v2::Listener, deprecated_v1_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::envoy::api::v2::Filter_DeprecatedV1)},
  { 6, -1, sizeof(::envoy::api::v2::Filter)},
  { 14, -1, sizeof(::envoy::api::v2::FilterChainMatch)},
  { 26, -1, sizeof(::envoy::api::v2::FilterChain)},
  { 36, -1, sizeof(::envoy::api::v2::Listener_DeprecatedV1)},
  { 42, -1, sizeof(::envoy::api::v2::Listener)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Filter_DeprecatedV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Filter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_FilterChainMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_FilterChain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Listener_DeprecatedV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::envoy::api::v2::_Listener_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/lds.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rapi/lds.proto\022\014envoy.api.v2\032\021api/addre"
      "ss.proto\032\016api/base.proto\032\023api/discovery."
      "proto\032\rapi/sds.proto\032\034google/api/annotat"
      "ions.proto\032\034google/protobuf/struct.proto"
      "\032\036google/protobuf/wrappers.proto\"\227\001\n\006Fil"
      "ter\022\014\n\004name\030\001 \001(\t\022\'\n\006config\030\002 \001(\0132\027.goog"
      "le.protobuf.Struct\0228\n\rdeprecated_v1\030\003 \001("
      "\0132!.envoy.api.v2.Filter.DeprecatedV1\032\034\n\014"
      "DeprecatedV1\022\014\n\004type\030\001 \001(\t\"\304\002\n\020FilterCha"
      "inMatch\022\023\n\013sni_domains\030\001 \003(\t\022.\n\rprefix_r"
      "anges\030\003 \003(\0132\027.envoy.api.v2.CidrRange\022\026\n\016"
      "address_suffix\030\004 \001(\t\0220\n\nsuffix_len\030\005 \001(\013"
      "2\034.google.protobuf.UInt32Value\0225\n\024source"
      "_prefix_ranges\030\006 \003(\0132\027.envoy.api.v2.Cidr"
      "Range\0222\n\014source_ports\030\007 \003(\0132\034.google.pro"
      "tobuf.UInt32Value\0226\n\020destination_port\030\010 "
      "\001(\0132\034.google.protobuf.UInt32Value\"\210\002\n\013Fi"
      "lterChain\022:\n\022filter_chain_match\030\001 \001(\0132\036."
      "envoy.api.v2.FilterChainMatch\0227\n\013tls_con"
      "text\030\002 \001(\0132\".envoy.api.v2.DownstreamTlsC"
      "ontext\022%\n\007filters\030\003 \003(\0132\024.envoy.api.v2.F"
      "ilter\0223\n\017use_proxy_proto\030\004 \001(\0132\032.google."
      "protobuf.BoolValue\022(\n\010metadata\030\005 \001(\0132\026.e"
      "nvoy.api.v2.Metadata\"\231\003\n\010Listener\022\014\n\004nam"
      "e\030\001 \001(\t\022&\n\007address\030\002 \001(\0132\025.envoy.api.v2."
      "Address\0220\n\rfilter_chains\030\003 \003(\0132\031.envoy.a"
      "pi.v2.FilterChain\0224\n\020use_original_dst\030\004 "
      "\001(\0132\032.google.protobuf.BoolValue\022G\n!per_c"
      "onnection_buffer_limit_bytes\030\005 \001(\0132\034.goo"
      "gle.protobuf.UInt32Value\022(\n\010metadata\030\006 \001"
      "(\0132\026.envoy.api.v2.Metadata\022:\n\rdeprecated"
      "_v1\030\007 \001(\0132#.envoy.api.v2.Listener.Deprec"
      "atedV1\032@\n\014DeprecatedV1\0220\n\014bind_to_port\030\001"
      " \001(\0132\032.google.protobuf.BoolValue2\353\001\n\030Lis"
      "tenerDiscoveryService\022X\n\017StreamListeners"
      "\022\036.envoy.api.v2.DiscoveryRequest\032\037.envoy"
      ".api.v2.DiscoveryResponse\"\000(\0010\001\022u\n\016Fetch"
      "Listeners\022\036.envoy.api.v2.DiscoveryReques"
      "t\032\037.envoy.api.v2.DiscoveryResponse\"\"\202\323\344\223"
      "\002\034\"\027/v2/discovery:listeners:\001*b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1598);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/lds.proto", &protobuf_RegisterTypes);
  ::protobuf_api_2faddress_2eproto::AddDescriptors();
  ::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::protobuf_api_2fdiscovery_2eproto::AddDescriptors();
  ::protobuf_api_2fsds_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2flds_2eproto
namespace envoy {
namespace api {
namespace v2 {

// ===================================================================

void Filter_DeprecatedV1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Filter_DeprecatedV1::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Filter_DeprecatedV1::Filter_DeprecatedV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2flds_2eproto::InitDefaultsFilter_DeprecatedV1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Filter.DeprecatedV1)
}
Filter_DeprecatedV1::Filter_DeprecatedV1(const Filter_DeprecatedV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Filter.DeprecatedV1)
}

void Filter_DeprecatedV1::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Filter_DeprecatedV1::~Filter_DeprecatedV1() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Filter.DeprecatedV1)
  SharedDtor();
}

void Filter_DeprecatedV1::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Filter_DeprecatedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Filter_DeprecatedV1::descriptor() {
  ::protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Filter_DeprecatedV1& Filter_DeprecatedV1::default_instance() {
  ::protobuf_api_2flds_2eproto::InitDefaultsFilter_DeprecatedV1();
  return *internal_default_instance();
}

Filter_DeprecatedV1* Filter_DeprecatedV1::New(::google::protobuf::Arena* arena) const {
  Filter_DeprecatedV1* n = new Filter_DeprecatedV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Filter_DeprecatedV1::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Filter.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Filter_DeprecatedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Filter.DeprecatedV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Filter.DeprecatedV1.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Filter.DeprecatedV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Filter.DeprecatedV1)
  return false;
#undef DO_
}

void Filter_DeprecatedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Filter.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Filter.DeprecatedV1.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Filter.DeprecatedV1)
}

::google::protobuf::uint8* Filter_DeprecatedV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Filter.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Filter.DeprecatedV1.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Filter.DeprecatedV1)
  return target;
}

size_t Filter_DeprecatedV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Filter.DeprecatedV1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Filter_DeprecatedV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Filter.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  const Filter_DeprecatedV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Filter_DeprecatedV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Filter.DeprecatedV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Filter.DeprecatedV1)
    MergeFrom(*source);
  }
}

void Filter_DeprecatedV1::MergeFrom(const Filter_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Filter.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void Filter_DeprecatedV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Filter.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Filter_DeprecatedV1::CopyFrom(const Filter_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Filter.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Filter_DeprecatedV1::IsInitialized() const {
  return true;
}

void Filter_DeprecatedV1::Swap(Filter_DeprecatedV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Filter_DeprecatedV1::InternalSwap(Filter_DeprecatedV1* other) {
  using std::swap;
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Filter_DeprecatedV1::GetMetadata() const {
  protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Filter::InitAsDefaultInstance() {
  ::envoy::api::v2::_Filter_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::envoy::api::v2::_Filter_default_instance_._instance.get_mutable()->deprecated_v1_ = const_cast< ::envoy::api::v2::Filter_DeprecatedV1*>(
      ::envoy::api::v2::Filter_DeprecatedV1::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Filter::kNameFieldNumber;
const int Filter::kConfigFieldNumber;
const int Filter::kDeprecatedV1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Filter::Filter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2flds_2eproto::InitDefaultsFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Filter)
}
Filter::Filter(const Filter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    config_ = new ::google::protobuf::Struct(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_deprecated_v1()) {
    deprecated_v1_ = new ::envoy::api::v2::Filter_DeprecatedV1(*from.deprecated_v1_);
  } else {
    deprecated_v1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Filter)
}

void Filter::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecated_v1_) -
      reinterpret_cast<char*>(&config_)) + sizeof(deprecated_v1_));
  _cached_size_ = 0;
}

Filter::~Filter() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Filter)
  SharedDtor();
}

void Filter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete deprecated_v1_;
}

void Filter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Filter::descriptor() {
  ::protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Filter& Filter::default_instance() {
  ::protobuf_api_2flds_2eproto::InitDefaultsFilter();
  return *internal_default_instance();
}

Filter* Filter::New(::google::protobuf::Arena* arena) const {
  Filter* n = new Filter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Filter::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && deprecated_v1_ != NULL) {
    delete deprecated_v1_;
  }
  deprecated_v1_ = NULL;
  _internal_metadata_.Clear();
}

bool Filter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Filter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Filter.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Filter.DeprecatedV1 deprecated_v1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deprecated_v1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Filter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Filter)
  return false;
#undef DO_
}

void Filter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Filter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  // .envoy.api.v2.Filter.DeprecatedV1 deprecated_v1 = 3;
  if (this->has_deprecated_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->deprecated_v1_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Filter)
}

::google::protobuf::uint8* Filter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Filter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->config_, deterministic, target);
  }

  // .envoy.api.v2.Filter.DeprecatedV1 deprecated_v1 = 3;
  if (this->has_deprecated_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->deprecated_v1_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Filter)
  return target;
}

size_t Filter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Filter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  // .envoy.api.v2.Filter.DeprecatedV1 deprecated_v1 = 3;
  if (this->has_deprecated_v1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deprecated_v1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Filter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  const Filter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Filter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Filter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Filter)
    MergeFrom(*source);
  }
}

void Filter::MergeFrom(const Filter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
  }
  if (from.has_deprecated_v1()) {
    mutable_deprecated_v1()->::envoy::api::v2::Filter_DeprecatedV1::MergeFrom(from.deprecated_v1());
  }
}

void Filter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Filter::CopyFrom(const Filter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Filter::IsInitialized() const {
  return true;
}

void Filter::Swap(Filter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Filter::InternalSwap(Filter* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(config_, other->config_);
  swap(deprecated_v1_, other->deprecated_v1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Filter::GetMetadata() const {
  protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FilterChainMatch::InitAsDefaultInstance() {
  ::envoy::api::v2::_FilterChainMatch_default_instance_._instance.get_mutable()->suffix_len_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  ::envoy::api::v2::_FilterChainMatch_default_instance_._instance.get_mutable()->destination_port_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilterChainMatch::kSniDomainsFieldNumber;
const int FilterChainMatch::kPrefixRangesFieldNumber;
const int FilterChainMatch::kAddressSuffixFieldNumber;
const int FilterChainMatch::kSuffixLenFieldNumber;
const int FilterChainMatch::kSourcePrefixRangesFieldNumber;
const int FilterChainMatch::kSourcePortsFieldNumber;
const int FilterChainMatch::kDestinationPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilterChainMatch::FilterChainMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2flds_2eproto::InitDefaultsFilterChainMatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.FilterChainMatch)
}
FilterChainMatch::FilterChainMatch(const FilterChainMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sni_domains_(from.sni_domains_),
      prefix_ranges_(from.prefix_ranges_),
      source_prefix_ranges_(from.source_prefix_ranges_),
      source_ports_(from.source_ports_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address_suffix().size() > 0) {
    address_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_suffix_);
  }
  if (from.has_suffix_len()) {
    suffix_len_ = new ::google::protobuf::UInt32Value(*from.suffix_len_);
  } else {
    suffix_len_ = NULL;
  }
  if (from.has_destination_port()) {
    destination_port_ = new ::google::protobuf::UInt32Value(*from.destination_port_);
  } else {
    destination_port_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.FilterChainMatch)
}

void FilterChainMatch::SharedCtor() {
  address_suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&suffix_len_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_port_) -
      reinterpret_cast<char*>(&suffix_len_)) + sizeof(destination_port_));
  _cached_size_ = 0;
}

FilterChainMatch::~FilterChainMatch() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.FilterChainMatch)
  SharedDtor();
}

void FilterChainMatch::SharedDtor() {
  address_suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete suffix_len_;
  if (this != internal_default_instance()) delete destination_port_;
}

void FilterChainMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterChainMatch::descriptor() {
  ::protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FilterChainMatch& FilterChainMatch::default_instance() {
  ::protobuf_api_2flds_2eproto::InitDefaultsFilterChainMatch();
  return *internal_default_instance();
}

FilterChainMatch* FilterChainMatch::New(::google::protobuf::Arena* arena) const {
  FilterChainMatch* n = new FilterChainMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilterChainMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.FilterChainMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sni_domains_.Clear();
  prefix_ranges_.Clear();
  source_prefix_ranges_.Clear();
  source_ports_.Clear();
  address_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && suffix_len_ != NULL) {
    delete suffix_len_;
  }
  suffix_len_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_port_ != NULL) {
    delete destination_port_;
  }
  destination_port_ = NULL;
  _internal_metadata_.Clear();
}

bool FilterChainMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.FilterChainMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string sni_domains = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sni_domains()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sni_domains(this->sni_domains_size() - 1).data(),
            static_cast<int>(this->sni_domains(this->sni_domains_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.FilterChainMatch.sni_domains"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.CidrRange prefix_ranges = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prefix_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address_suffix = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address_suffix().data(), static_cast<int>(this->address_suffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.FilterChainMatch.address_suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value suffix_len = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_suffix_len()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.CidrRange source_prefix_ranges = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_source_prefix_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.UInt32Value source_ports = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_source_ports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value destination_port = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_destination_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.FilterChainMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.FilterChainMatch)
  return false;
#undef DO_
}

void FilterChainMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.FilterChainMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string sni_domains = 1;
  for (int i = 0, n = this->sni_domains_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sni_domains(i).data(), static_cast<int>(this->sni_domains(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.FilterChainMatch.sni_domains");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->sni_domains(i), output);
  }

  // repeated .envoy.api.v2.CidrRange prefix_ranges = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prefix_ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prefix_ranges(static_cast<int>(i)), output);
  }

  // string address_suffix = 4;
  if (this->address_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address_suffix().data(), static_cast<int>(this->address_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.FilterChainMatch.address_suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address_suffix(), output);
  }

  // .google.protobuf.UInt32Value suffix_len = 5;
  if (this->has_suffix_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->suffix_len_, output);
  }

  // repeated .envoy.api.v2.CidrRange source_prefix_ranges = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_prefix_ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->source_prefix_ranges(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.UInt32Value source_ports = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_ports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->source_ports(static_cast<int>(i)), output);
  }

  // .google.protobuf.UInt32Value destination_port = 8;
  if (this->has_destination_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->destination_port_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.FilterChainMatch)
}

::google::protobuf::uint8* FilterChainMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.FilterChainMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string sni_domains = 1;
  for (int i = 0, n = this->sni_domains_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sni_domains(i).data(), static_cast<int>(this->sni_domains(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.FilterChainMatch.sni_domains");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->sni_domains(i), target);
  }

  // repeated .envoy.api.v2.CidrRange prefix_ranges = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prefix_ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->prefix_ranges(static_cast<int>(i)), deterministic, target);
  }

  // string address_suffix = 4;
  if (this->address_suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address_suffix().data(), static_cast<int>(this->address_suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.FilterChainMatch.address_suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address_suffix(), target);
  }

  // .google.protobuf.UInt32Value suffix_len = 5;
  if (this->has_suffix_len()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->suffix_len_, deterministic, target);
  }

  // repeated .envoy.api.v2.CidrRange source_prefix_ranges = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_prefix_ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->source_prefix_ranges(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.UInt32Value source_ports = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->source_ports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->source_ports(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.UInt32Value destination_port = 8;
  if (this->has_destination_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->destination_port_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.FilterChainMatch)
  return target;
}

size_t FilterChainMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.FilterChainMatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string sni_domains = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sni_domains_size());
  for (int i = 0, n = this->sni_domains_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sni_domains(i));
  }

  // repeated .envoy.api.v2.CidrRange prefix_ranges = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->prefix_ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prefix_ranges(static_cast<int>(i)));
    }
  }

  // repeated .envoy.api.v2.CidrRange source_prefix_ranges = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->source_prefix_ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->source_prefix_ranges(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.UInt32Value source_ports = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->source_ports_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->source_ports(static_cast<int>(i)));
    }
  }

  // string address_suffix = 4;
  if (this->address_suffix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address_suffix());
  }

  // .google.protobuf.UInt32Value suffix_len = 5;
  if (this->has_suffix_len()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->suffix_len_);
  }

  // .google.protobuf.UInt32Value destination_port = 8;
  if (this->has_destination_port()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->destination_port_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilterChainMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.FilterChainMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const FilterChainMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilterChainMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.FilterChainMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.FilterChainMatch)
    MergeFrom(*source);
  }
}

void FilterChainMatch::MergeFrom(const FilterChainMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.FilterChainMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sni_domains_.MergeFrom(from.sni_domains_);
  prefix_ranges_.MergeFrom(from.prefix_ranges_);
  source_prefix_ranges_.MergeFrom(from.source_prefix_ranges_);
  source_ports_.MergeFrom(from.source_ports_);
  if (from.address_suffix().size() > 0) {

    address_suffix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_suffix_);
  }
  if (from.has_suffix_len()) {
    mutable_suffix_len()->::google::protobuf::UInt32Value::MergeFrom(from.suffix_len());
  }
  if (from.has_destination_port()) {
    mutable_destination_port()->::google::protobuf::UInt32Value::MergeFrom(from.destination_port());
  }
}

void FilterChainMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.FilterChainMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterChainMatch::CopyFrom(const FilterChainMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.FilterChainMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterChainMatch::IsInitialized() const {
  return true;
}

void FilterChainMatch::Swap(FilterChainMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilterChainMatch::InternalSwap(FilterChainMatch* other) {
  using std::swap;
  sni_domains_.InternalSwap(&other->sni_domains_);
  prefix_ranges_.InternalSwap(&other->prefix_ranges_);
  source_prefix_ranges_.InternalSwap(&other->source_prefix_ranges_);
  source_ports_.InternalSwap(&other->source_ports_);
  address_suffix_.Swap(&other->address_suffix_);
  swap(suffix_len_, other->suffix_len_);
  swap(destination_port_, other->destination_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilterChainMatch::GetMetadata() const {
  protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FilterChain::InitAsDefaultInstance() {
  ::envoy::api::v2::_FilterChain_default_instance_._instance.get_mutable()->filter_chain_match_ = const_cast< ::envoy::api::v2::FilterChainMatch*>(
      ::envoy::api::v2::FilterChainMatch::internal_default_instance());
  ::envoy::api::v2::_FilterChain_default_instance_._instance.get_mutable()->tls_context_ = const_cast< ::envoy::api::v2::DownstreamTlsContext*>(
      ::envoy::api::v2::DownstreamTlsContext::internal_default_instance());
  ::envoy::api::v2::_FilterChain_default_instance_._instance.get_mutable()->use_proxy_proto_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::envoy::api::v2::_FilterChain_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::envoy::api::v2::Metadata*>(
      ::envoy::api::v2::Metadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilterChain::kFilterChainMatchFieldNumber;
const int FilterChain::kTlsContextFieldNumber;
const int FilterChain::kFiltersFieldNumber;
const int FilterChain::kUseProxyProtoFieldNumber;
const int FilterChain::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilterChain::FilterChain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2flds_2eproto::InitDefaultsFilterChain();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.FilterChain)
}
FilterChain::FilterChain(const FilterChain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filters_(from.filters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_filter_chain_match()) {
    filter_chain_match_ = new ::envoy::api::v2::FilterChainMatch(*from.filter_chain_match_);
  } else {
    filter_chain_match_ = NULL;
  }
  if (from.has_tls_context()) {
    tls_context_ = new ::envoy::api::v2::DownstreamTlsContext(*from.tls_context_);
  } else {
    tls_context_ = NULL;
  }
  if (from.has_use_proxy_proto()) {
    use_proxy_proto_ = new ::google::protobuf::BoolValue(*from.use_proxy_proto_);
  } else {
    use_proxy_proto_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::envoy::api::v2::Metadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.FilterChain)
}

void FilterChain::SharedCtor() {
  ::memset(&filter_chain_match_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metadata_) -
      reinterpret_cast<char*>(&filter_chain_match_)) + sizeof(metadata_));
  _cached_size_ = 0;
}

FilterChain::~FilterChain() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.FilterChain)
  SharedDtor();
}

void FilterChain::SharedDtor() {
  if (this != internal_default_instance()) delete filter_chain_match_;
  if (this != internal_default_instance()) delete tls_context_;
  if (this != internal_default_instance()) delete use_proxy_proto_;
  if (this != internal_default_instance()) delete metadata_;
}

void FilterChain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterChain::descriptor() {
  ::protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FilterChain& FilterChain::default_instance() {
  ::protobuf_api_2flds_2eproto::InitDefaultsFilterChain();
  return *internal_default_instance();
}

FilterChain* FilterChain::New(::google::protobuf::Arena* arena) const {
  FilterChain* n = new FilterChain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilterChain::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.FilterChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filters_.Clear();
  if (GetArenaNoVirtual() == NULL && filter_chain_match_ != NULL) {
    delete filter_chain_match_;
  }
  filter_chain_match_ = NULL;
  if (GetArenaNoVirtual() == NULL && tls_context_ != NULL) {
    delete tls_context_;
  }
  tls_context_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_proxy_proto_ != NULL) {
    delete use_proxy_proto_;
  }
  use_proxy_proto_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  _internal_metadata_.Clear();
}

bool FilterChain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.FilterChain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.FilterChainMatch filter_chain_match = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_filter_chain_match()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.DownstreamTlsContext tls_context = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tls_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.Filter filters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue use_proxy_proto = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_use_proxy_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Metadata metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.FilterChain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.FilterChain)
  return false;
#undef DO_
}

void FilterChain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.FilterChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.FilterChainMatch filter_chain_match = 1;
  if (this->has_filter_chain_match()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->filter_chain_match_, output);
  }

  // .envoy.api.v2.DownstreamTlsContext tls_context = 2;
  if (this->has_tls_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->tls_context_, output);
  }

  // repeated .envoy.api.v2.Filter filters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->filters(static_cast<int>(i)), output);
  }

  // .google.protobuf.BoolValue use_proxy_proto = 4;
  if (this->has_use_proxy_proto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->use_proxy_proto_, output);
  }

  // .envoy.api.v2.Metadata metadata = 5;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->metadata_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.FilterChain)
}

::google::protobuf::uint8* FilterChain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.FilterChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.FilterChainMatch filter_chain_match = 1;
  if (this->has_filter_chain_match()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->filter_chain_match_, deterministic, target);
  }

  // .envoy.api.v2.DownstreamTlsContext tls_context = 2;
  if (this->has_tls_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->tls_context_, deterministic, target);
  }

  // repeated .envoy.api.v2.Filter filters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->filters(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.BoolValue use_proxy_proto = 4;
  if (this->has_use_proxy_proto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->use_proxy_proto_, deterministic, target);
  }

  // .envoy.api.v2.Metadata metadata = 5;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->metadata_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.FilterChain)
  return target;
}

size_t FilterChain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.FilterChain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.Filter filters = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->filters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filters(static_cast<int>(i)));
    }
  }

  // .envoy.api.v2.FilterChainMatch filter_chain_match = 1;
  if (this->has_filter_chain_match()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->filter_chain_match_);
  }

  // .envoy.api.v2.DownstreamTlsContext tls_context = 2;
  if (this->has_tls_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tls_context_);
  }

  // .google.protobuf.BoolValue use_proxy_proto = 4;
  if (this->has_use_proxy_proto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->use_proxy_proto_);
  }

  // .envoy.api.v2.Metadata metadata = 5;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metadata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilterChain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.FilterChain)
  GOOGLE_DCHECK_NE(&from, this);
  const FilterChain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilterChain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.FilterChain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.FilterChain)
    MergeFrom(*source);
  }
}

void FilterChain::MergeFrom(const FilterChain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.FilterChain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filters_.MergeFrom(from.filters_);
  if (from.has_filter_chain_match()) {
    mutable_filter_chain_match()->::envoy::api::v2::FilterChainMatch::MergeFrom(from.filter_chain_match());
  }
  if (from.has_tls_context()) {
    mutable_tls_context()->::envoy::api::v2::DownstreamTlsContext::MergeFrom(from.tls_context());
  }
  if (from.has_use_proxy_proto()) {
    mutable_use_proxy_proto()->::google::protobuf::BoolValue::MergeFrom(from.use_proxy_proto());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::envoy::api::v2::Metadata::MergeFrom(from.metadata());
  }
}

void FilterChain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.FilterChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterChain::CopyFrom(const FilterChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.FilterChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterChain::IsInitialized() const {
  return true;
}

void FilterChain::Swap(FilterChain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilterChain::InternalSwap(FilterChain* other) {
  using std::swap;
  filters_.InternalSwap(&other->filters_);
  swap(filter_chain_match_, other->filter_chain_match_);
  swap(tls_context_, other->tls_context_);
  swap(use_proxy_proto_, other->use_proxy_proto_);
  swap(metadata_, other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilterChain::GetMetadata() const {
  protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Listener_DeprecatedV1::InitAsDefaultInstance() {
  ::envoy::api::v2::_Listener_DeprecatedV1_default_instance_._instance.get_mutable()->bind_to_port_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Listener_DeprecatedV1::kBindToPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Listener_DeprecatedV1::Listener_DeprecatedV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2flds_2eproto::InitDefaultsListener_DeprecatedV1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Listener.DeprecatedV1)
}
Listener_DeprecatedV1::Listener_DeprecatedV1(const Listener_DeprecatedV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bind_to_port()) {
    bind_to_port_ = new ::google::protobuf::BoolValue(*from.bind_to_port_);
  } else {
    bind_to_port_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Listener.DeprecatedV1)
}

void Listener_DeprecatedV1::SharedCtor() {
  bind_to_port_ = NULL;
  _cached_size_ = 0;
}

Listener_DeprecatedV1::~Listener_DeprecatedV1() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Listener.DeprecatedV1)
  SharedDtor();
}

void Listener_DeprecatedV1::SharedDtor() {
  if (this != internal_default_instance()) delete bind_to_port_;
}

void Listener_DeprecatedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Listener_DeprecatedV1::descriptor() {
  ::protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Listener_DeprecatedV1& Listener_DeprecatedV1::default_instance() {
  ::protobuf_api_2flds_2eproto::InitDefaultsListener_DeprecatedV1();
  return *internal_default_instance();
}

Listener_DeprecatedV1* Listener_DeprecatedV1::New(::google::protobuf::Arena* arena) const {
  Listener_DeprecatedV1* n = new Listener_DeprecatedV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Listener_DeprecatedV1::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Listener.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bind_to_port_ != NULL) {
    delete bind_to_port_;
  }
  bind_to_port_ = NULL;
  _internal_metadata_.Clear();
}

bool Listener_DeprecatedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Listener.DeprecatedV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.BoolValue bind_to_port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bind_to_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Listener.DeprecatedV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Listener.DeprecatedV1)
  return false;
#undef DO_
}

void Listener_DeprecatedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Listener.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue bind_to_port = 1;
  if (this->has_bind_to_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bind_to_port_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Listener.DeprecatedV1)
}

::google::protobuf::uint8* Listener_DeprecatedV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Listener.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue bind_to_port = 1;
  if (this->has_bind_to_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bind_to_port_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Listener.DeprecatedV1)
  return target;
}

size_t Listener_DeprecatedV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Listener.DeprecatedV1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.BoolValue bind_to_port = 1;
  if (this->has_bind_to_port()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bind_to_port_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Listener_DeprecatedV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Listener.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  const Listener_DeprecatedV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Listener_DeprecatedV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Listener.DeprecatedV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Listener.DeprecatedV1)
    MergeFrom(*source);
  }
}

void Listener_DeprecatedV1::MergeFrom(const Listener_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Listener.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bind_to_port()) {
    mutable_bind_to_port()->::google::protobuf::BoolValue::MergeFrom(from.bind_to_port());
  }
}

void Listener_DeprecatedV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Listener.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Listener_DeprecatedV1::CopyFrom(const Listener_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Listener.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Listener_DeprecatedV1::IsInitialized() const {
  return true;
}

void Listener_DeprecatedV1::Swap(Listener_DeprecatedV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Listener_DeprecatedV1::InternalSwap(Listener_DeprecatedV1* other) {
  using std::swap;
  swap(bind_to_port_, other->bind_to_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Listener_DeprecatedV1::GetMetadata() const {
  protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Listener::InitAsDefaultInstance() {
  ::envoy::api::v2::_Listener_default_instance_._instance.get_mutable()->address_ = const_cast< ::envoy::api::v2::Address*>(
      ::envoy::api::v2::Address::internal_default_instance());
  ::envoy::api::v2::_Listener_default_instance_._instance.get_mutable()->use_original_dst_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::envoy::api::v2::_Listener_default_instance_._instance.get_mutable()->per_connection_buffer_limit_bytes_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  ::envoy::api::v2::_Listener_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::envoy::api::v2::Metadata*>(
      ::envoy::api::v2::Metadata::internal_default_instance());
  ::envoy::api::v2::_Listener_default_instance_._instance.get_mutable()->deprecated_v1_ = const_cast< ::envoy::api::v2::Listener_DeprecatedV1*>(
      ::envoy::api::v2::Listener_DeprecatedV1::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Listener::kNameFieldNumber;
const int Listener::kAddressFieldNumber;
const int Listener::kFilterChainsFieldNumber;
const int Listener::kUseOriginalDstFieldNumber;
const int Listener::kPerConnectionBufferLimitBytesFieldNumber;
const int Listener::kMetadataFieldNumber;
const int Listener::kDeprecatedV1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Listener::Listener()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_api_2flds_2eproto::InitDefaultsListener();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Listener)
}
Listener::Listener(const Listener& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filter_chains_(from.filter_chains_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_address()) {
    address_ = new ::envoy::api::v2::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_use_original_dst()) {
    use_original_dst_ = new ::google::protobuf::BoolValue(*from.use_original_dst_);
  } else {
    use_original_dst_ = NULL;
  }
  if (from.has_per_connection_buffer_limit_bytes()) {
    per_connection_buffer_limit_bytes_ = new ::google::protobuf::UInt32Value(*from.per_connection_buffer_limit_bytes_);
  } else {
    per_connection_buffer_limit_bytes_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::envoy::api::v2::Metadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_deprecated_v1()) {
    deprecated_v1_ = new ::envoy::api::v2::Listener_DeprecatedV1(*from.deprecated_v1_);
  } else {
    deprecated_v1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Listener)
}

void Listener::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecated_v1_) -
      reinterpret_cast<char*>(&address_)) + sizeof(deprecated_v1_));
  _cached_size_ = 0;
}

Listener::~Listener() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Listener)
  SharedDtor();
}

void Listener::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete use_original_dst_;
  if (this != internal_default_instance()) delete per_connection_buffer_limit_bytes_;
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete deprecated_v1_;
}

void Listener::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Listener::descriptor() {
  ::protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Listener& Listener::default_instance() {
  ::protobuf_api_2flds_2eproto::InitDefaultsListener();
  return *internal_default_instance();
}

Listener* Listener::New(::google::protobuf::Arena* arena) const {
  Listener* n = new Listener;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Listener::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Listener)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_chains_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_original_dst_ != NULL) {
    delete use_original_dst_;
  }
  use_original_dst_ = NULL;
  if (GetArenaNoVirtual() == NULL && per_connection_buffer_limit_bytes_ != NULL) {
    delete per_connection_buffer_limit_bytes_;
  }
  per_connection_buffer_limit_bytes_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && deprecated_v1_ != NULL) {
    delete deprecated_v1_;
  }
  deprecated_v1_ = NULL;
  _internal_metadata_.Clear();
}

bool Listener::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Listener)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Listener.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Address address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.FilterChain filter_chains = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_filter_chains()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue use_original_dst = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_use_original_dst()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_per_connection_buffer_limit_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Metadata metadata = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Listener.DeprecatedV1 deprecated_v1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deprecated_v1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Listener)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Listener)
  return false;
#undef DO_
}

void Listener::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Listener)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Listener.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .envoy.api.v2.Address address = 2;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->address_, output);
  }

  // repeated .envoy.api.v2.FilterChain filter_chains = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filter_chains_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->filter_chains(static_cast<int>(i)), output);
  }

  // .google.protobuf.BoolValue use_original_dst = 4;
  if (this->has_use_original_dst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->use_original_dst_, output);
  }

  // .google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;
  if (this->has_per_connection_buffer_limit_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->per_connection_buffer_limit_bytes_, output);
  }

  // .envoy.api.v2.Metadata metadata = 6;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->metadata_, output);
  }

  // .envoy.api.v2.Listener.DeprecatedV1 deprecated_v1 = 7;
  if (this->has_deprecated_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->deprecated_v1_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Listener)
}

::google::protobuf::uint8* Listener::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Listener)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Listener.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .envoy.api.v2.Address address = 2;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->address_, deterministic, target);
  }

  // repeated .envoy.api.v2.FilterChain filter_chains = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->filter_chains_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->filter_chains(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.BoolValue use_original_dst = 4;
  if (this->has_use_original_dst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->use_original_dst_, deterministic, target);
  }

  // .google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;
  if (this->has_per_connection_buffer_limit_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->per_connection_buffer_limit_bytes_, deterministic, target);
  }

  // .envoy.api.v2.Metadata metadata = 6;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->metadata_, deterministic, target);
  }

  // .envoy.api.v2.Listener.DeprecatedV1 deprecated_v1 = 7;
  if (this->has_deprecated_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->deprecated_v1_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Listener)
  return target;
}

size_t Listener::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Listener)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.FilterChain filter_chains = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->filter_chains_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filter_chains(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .envoy.api.v2.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  // .google.protobuf.BoolValue use_original_dst = 4;
  if (this->has_use_original_dst()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->use_original_dst_);
  }

  // .google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;
  if (this->has_per_connection_buffer_limit_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->per_connection_buffer_limit_bytes_);
  }

  // .envoy.api.v2.Metadata metadata = 6;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metadata_);
  }

  // .envoy.api.v2.Listener.DeprecatedV1 deprecated_v1 = 7;
  if (this->has_deprecated_v1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deprecated_v1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Listener::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Listener)
  GOOGLE_DCHECK_NE(&from, this);
  const Listener* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Listener>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Listener)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Listener)
    MergeFrom(*source);
  }
}

void Listener::MergeFrom(const Listener& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Listener)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filter_chains_.MergeFrom(from.filter_chains_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_address()) {
    mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
  }
  if (from.has_use_original_dst()) {
    mutable_use_original_dst()->::google::protobuf::BoolValue::MergeFrom(from.use_original_dst());
  }
  if (from.has_per_connection_buffer_limit_bytes()) {
    mutable_per_connection_buffer_limit_bytes()->::google::protobuf::UInt32Value::MergeFrom(from.per_connection_buffer_limit_bytes());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::envoy::api::v2::Metadata::MergeFrom(from.metadata());
  }
  if (from.has_deprecated_v1()) {
    mutable_deprecated_v1()->::envoy::api::v2::Listener_DeprecatedV1::MergeFrom(from.deprecated_v1());
  }
}

void Listener::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Listener)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Listener::CopyFrom(const Listener& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Listener)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Listener::IsInitialized() const {
  return true;
}

void Listener::Swap(Listener* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Listener::InternalSwap(Listener* other) {
  using std::swap;
  filter_chains_.InternalSwap(&other->filter_chains_);
  name_.Swap(&other->name_);
  swap(address_, other->address_);
  swap(use_original_dst_, other->use_original_dst_);
  swap(per_connection_buffer_limit_bytes_, other->per_connection_buffer_limit_bytes_);
  swap(metadata_, other->metadata_);
  swap(deprecated_v1_, other->deprecated_v1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Listener::GetMetadata() const {
  protobuf_api_2flds_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flds_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
