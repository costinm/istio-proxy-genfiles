// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/config/client/quota.proto

#include "mixer/v1/config/client/quota.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mixer {
namespace v1 {
namespace config {
namespace client {
class QuotaSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaSpec>
      _instance;
} _QuotaSpec_default_instance_;
class QuotaRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaRule>
      _instance;
} _QuotaRule_default_instance_;
class StringMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringMatch>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr exact_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::google::protobuf::internal::ArenaStringPtr regex_;
} _StringMatch_default_instance_;
class AttributeMatch_ClauseEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttributeMatch_ClauseEntry_DoNotUse>
      _instance;
} _AttributeMatch_ClauseEntry_DoNotUse_default_instance_;
class AttributeMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttributeMatch>
      _instance;
} _AttributeMatch_default_instance_;
class QuotaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quota>
      _instance;
} _Quota_default_instance_;
class QuotaSpecBinding_QuotaSpecReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaSpecBinding_QuotaSpecReference>
      _instance;
} _QuotaSpecBinding_QuotaSpecReference_default_instance_;
class QuotaSpecBindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaSpecBinding>
      _instance;
} _QuotaSpecBinding_default_instance_;
}  // namespace client
}  // namespace config
}  // namespace v1
}  // namespace mixer
}  // namespace istio
namespace protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto {
void InitDefaultsQuotaSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaRule();
  {
    void* ptr = &::istio::mixer::v1::config::client::_QuotaSpec_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::QuotaSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::QuotaSpec::InitAsDefaultInstance();
}

void InitDefaultsQuotaSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaSpecImpl);
}

void InitDefaultsQuotaRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsAttributeMatch();
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuota();
  {
    void* ptr = &::istio::mixer::v1::config::client::_QuotaRule_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::QuotaRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::QuotaRule::InitAsDefaultInstance();
}

void InitDefaultsQuotaRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaRuleImpl);
}

void InitDefaultsStringMatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mixer::v1::config::client::_StringMatch_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::StringMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::StringMatch::InitAsDefaultInstance();
}

void InitDefaultsStringMatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStringMatchImpl);
}

void InitDefaultsAttributeMatch_ClauseEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsStringMatch();
  {
    void* ptr = &::istio::mixer::v1::config::client::_AttributeMatch_ClauseEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::AttributeMatch_ClauseEntry_DoNotUse();
  }
  ::istio::mixer::v1::config::client::AttributeMatch_ClauseEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsAttributeMatch_ClauseEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAttributeMatch_ClauseEntry_DoNotUseImpl);
}

void InitDefaultsAttributeMatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsAttributeMatch_ClauseEntry_DoNotUse();
  {
    void* ptr = &::istio::mixer::v1::config::client::_AttributeMatch_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::AttributeMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::AttributeMatch::InitAsDefaultInstance();
}

void InitDefaultsAttributeMatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAttributeMatchImpl);
}

void InitDefaultsQuotaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mixer::v1::config::client::_Quota_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::Quota();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::Quota::InitAsDefaultInstance();
}

void InitDefaultsQuota() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaImpl);
}

void InitDefaultsQuotaSpecBinding_QuotaSpecReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mixer::v1::config::client::_QuotaSpecBinding_QuotaSpecReference_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::QuotaSpecBinding_QuotaSpecReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::QuotaSpecBinding_QuotaSpecReference::InitAsDefaultInstance();
}

void InitDefaultsQuotaSpecBinding_QuotaSpecReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaSpecBinding_QuotaSpecReferenceImpl);
}

void InitDefaultsQuotaSpecBindingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fv1_2fconfig_2fclient_2fservice_2eproto::InitDefaultsIstioService();
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaSpecBinding_QuotaSpecReference();
  {
    void* ptr = &::istio::mixer::v1::config::client::_QuotaSpecBinding_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::QuotaSpecBinding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::QuotaSpecBinding::InitAsDefaultInstance();
}

void InitDefaultsQuotaSpecBinding() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaSpecBindingImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpec, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaRule, match_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaRule, quotas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::StringMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::StringMatch, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::mixer::v1::config::client::StringMatchDefaultTypeInternal, exact_),
  offsetof(::istio::mixer::v1::config::client::StringMatchDefaultTypeInternal, prefix_),
  offsetof(::istio::mixer::v1::config::client::StringMatchDefaultTypeInternal, regex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::StringMatch, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::AttributeMatch_ClauseEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::AttributeMatch_ClauseEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::AttributeMatch_ClauseEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::AttributeMatch_ClauseEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::AttributeMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::AttributeMatch, clause_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::Quota, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::Quota, quota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::Quota, charge_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpecBinding_QuotaSpecReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpecBinding_QuotaSpecReference, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpecBinding_QuotaSpecReference, namespace__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpecBinding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpecBinding, services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::QuotaSpecBinding, quota_specs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::mixer::v1::config::client::QuotaSpec)},
  { 6, -1, sizeof(::istio::mixer::v1::config::client::QuotaRule)},
  { 13, -1, sizeof(::istio::mixer::v1::config::client::StringMatch)},
  { 22, 29, sizeof(::istio::mixer::v1::config::client::AttributeMatch_ClauseEntry_DoNotUse)},
  { 31, -1, sizeof(::istio::mixer::v1::config::client::AttributeMatch)},
  { 37, -1, sizeof(::istio::mixer::v1::config::client::Quota)},
  { 44, -1, sizeof(::istio::mixer::v1::config::client::QuotaSpecBinding_QuotaSpecReference)},
  { 51, -1, sizeof(::istio::mixer::v1::config::client::QuotaSpecBinding)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_QuotaSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_QuotaRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_StringMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_AttributeMatch_ClauseEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_AttributeMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_Quota_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_QuotaSpecBinding_QuotaSpecReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_QuotaSpecBinding_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mixer/v1/config/client/quota.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"mixer/v1/config/client/quota.proto\022\034is"
      "tio.mixer.v1.config.client\032\024gogoproto/go"
      "go.proto\032$mixer/v1/config/client/service"
      ".proto\"C\n\tQuotaSpec\0226\n\005rules\030\001 \003(\0132\'.ist"
      "io.mixer.v1.config.client.QuotaRule\"}\n\tQ"
      "uotaRule\022;\n\005match\030\001 \003(\0132,.istio.mixer.v1"
      ".config.client.AttributeMatch\0223\n\006quotas\030"
      "\002 \003(\0132#.istio.mixer.v1.config.client.Quo"
      "ta\"O\n\013StringMatch\022\017\n\005exact\030\001 \001(\tH\000\022\020\n\006pr"
      "efix\030\002 \001(\tH\000\022\017\n\005regex\030\003 \001(\tH\000B\014\n\nmatch_t"
      "ype\"\264\001\n\016AttributeMatch\022H\n\006clause\030\001 \003(\01328"
      ".istio.mixer.v1.config.client.AttributeM"
      "atch.ClauseEntry\032X\n\013ClauseEntry\022\013\n\003key\030\001"
      " \001(\t\0228\n\005value\030\002 \001(\0132).istio.mixer.v1.con"
      "fig.client.StringMatch:\0028\001\"&\n\005Quota\022\r\n\005q"
      "uota\030\001 \001(\t\022\016\n\006charge\030\002 \001(\003\"\337\001\n\020QuotaSpec"
      "Binding\022<\n\010services\030\001 \003(\0132*.istio.mixer."
      "v1.config.client.IstioService\022V\n\013quota_s"
      "pecs\030\002 \003(\0132A.istio.mixer.v1.config.clien"
      "t.QuotaSpecBinding.QuotaSpecReference\0325\n"
      "\022QuotaSpecReference\022\014\n\004name\030\001 \001(\t\022\021\n\tnam"
      "espace\030\002 \001(\tB\014\310\341\036\000\250\342\036\000\360\341\036\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 874);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/v1/config/client/quota.proto", &protobuf_RegisterTypes);
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fservice_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto
namespace istio {
namespace mixer {
namespace v1 {
namespace config {
namespace client {

// ===================================================================

void QuotaSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaSpec::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaSpec::QuotaSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.QuotaSpec)
}
QuotaSpec::QuotaSpec(const QuotaSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.QuotaSpec)
}

void QuotaSpec::SharedCtor() {
  _cached_size_ = 0;
}

QuotaSpec::~QuotaSpec() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.QuotaSpec)
  SharedDtor();
}

void QuotaSpec::SharedDtor() {
}

void QuotaSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaSpec::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaSpec& QuotaSpec::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaSpec();
  return *internal_default_instance();
}

QuotaSpec* QuotaSpec::New(::google::protobuf::Arena* arena) const {
  QuotaSpec* n = new QuotaSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.QuotaSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  _internal_metadata_.Clear();
}

bool QuotaSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.QuotaSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mixer.v1.config.client.QuotaRule rules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.QuotaSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.QuotaSpec)
  return false;
#undef DO_
}

void QuotaSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.QuotaSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.QuotaRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rules(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.QuotaSpec)
}

::google::protobuf::uint8* QuotaSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.QuotaSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.QuotaRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rules(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.QuotaSpec)
  return target;
}

size_t QuotaSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.QuotaSpec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mixer.v1.config.client.QuotaRule rules = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.QuotaSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.QuotaSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.QuotaSpec)
    MergeFrom(*source);
  }
}

void QuotaSpec::MergeFrom(const QuotaSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.QuotaSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
}

void QuotaSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.QuotaSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaSpec::CopyFrom(const QuotaSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.QuotaSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaSpec::IsInitialized() const {
  return true;
}

void QuotaSpec::Swap(QuotaSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaSpec::InternalSwap(QuotaSpec* other) {
  using std::swap;
  rules_.InternalSwap(&other->rules_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaSpec::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuotaRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaRule::kMatchFieldNumber;
const int QuotaRule::kQuotasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaRule::QuotaRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.QuotaRule)
}
QuotaRule::QuotaRule(const QuotaRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_(from.match_),
      quotas_(from.quotas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.QuotaRule)
}

void QuotaRule::SharedCtor() {
  _cached_size_ = 0;
}

QuotaRule::~QuotaRule() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.QuotaRule)
  SharedDtor();
}

void QuotaRule::SharedDtor() {
}

void QuotaRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaRule::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaRule& QuotaRule::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaRule();
  return *internal_default_instance();
}

QuotaRule* QuotaRule::New(::google::protobuf::Arena* arena) const {
  QuotaRule* n = new QuotaRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaRule::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.QuotaRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.Clear();
  quotas_.Clear();
  _internal_metadata_.Clear();
}

bool QuotaRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.QuotaRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mixer.v1.config.client.AttributeMatch match = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_match()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mixer.v1.config.client.Quota quotas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_quotas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.QuotaRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.QuotaRule)
  return false;
#undef DO_
}

void QuotaRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.QuotaRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.AttributeMatch match = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->match(static_cast<int>(i)), output);
  }

  // repeated .istio.mixer.v1.config.client.Quota quotas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->quotas(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.QuotaRule)
}

::google::protobuf::uint8* QuotaRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.QuotaRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.AttributeMatch match = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->match(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.mixer.v1.config.client.Quota quotas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->quotas(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.QuotaRule)
  return target;
}

size_t QuotaRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.QuotaRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mixer.v1.config.client.AttributeMatch match = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->match_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->match(static_cast<int>(i)));
    }
  }

  // repeated .istio.mixer.v1.config.client.Quota quotas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->quotas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quotas(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.QuotaRule)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.QuotaRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.QuotaRule)
    MergeFrom(*source);
  }
}

void QuotaRule::MergeFrom(const QuotaRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.QuotaRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_.MergeFrom(from.match_);
  quotas_.MergeFrom(from.quotas_);
}

void QuotaRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.QuotaRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaRule::CopyFrom(const QuotaRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.QuotaRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaRule::IsInitialized() const {
  return true;
}

void QuotaRule::Swap(QuotaRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaRule::InternalSwap(QuotaRule* other) {
  using std::swap;
  match_.InternalSwap(&other->match_);
  quotas_.InternalSwap(&other->quotas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaRule::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringMatch::InitAsDefaultInstance() {
  ::istio::mixer::v1::config::client::_StringMatch_default_instance_.exact_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::mixer::v1::config::client::_StringMatch_default_instance_.prefix_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::mixer::v1::config::client::_StringMatch_default_instance_.regex_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringMatch::kExactFieldNumber;
const int StringMatch::kPrefixFieldNumber;
const int StringMatch::kRegexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringMatch::StringMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsStringMatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.StringMatch)
}
StringMatch::StringMatch(const StringMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_match_type();
  switch (from.match_type_case()) {
    case kExact: {
      set_exact(from.exact());
      break;
    }
    case kPrefix: {
      set_prefix(from.prefix());
      break;
    }
    case kRegex: {
      set_regex(from.regex());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.StringMatch)
}

void StringMatch::SharedCtor() {
  clear_has_match_type();
  _cached_size_ = 0;
}

StringMatch::~StringMatch() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.StringMatch)
  SharedDtor();
}

void StringMatch::SharedDtor() {
  if (has_match_type()) {
    clear_match_type();
  }
}

void StringMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringMatch::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringMatch& StringMatch::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsStringMatch();
  return *internal_default_instance();
}

StringMatch* StringMatch::New(::google::protobuf::Arena* arena) const {
  StringMatch* n = new StringMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringMatch::clear_match_type() {
// @@protoc_insertion_point(one_of_clear_start:istio.mixer.v1.config.client.StringMatch)
  switch (match_type_case()) {
    case kExact: {
      match_type_.exact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPrefix: {
      match_type_.prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRegex: {
      match_type_.regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MATCH_TYPE_NOT_SET;
}


void StringMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.StringMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_match_type();
  _internal_metadata_.Clear();
}

bool StringMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.StringMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string exact = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exact().data(), static_cast<int>(this->exact().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.StringMatch.exact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prefix().data(), static_cast<int>(this->prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.StringMatch.prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.StringMatch.regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.StringMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.StringMatch)
  return false;
#undef DO_
}

void StringMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.StringMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exact = 1;
  if (has_exact()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exact().data(), static_cast<int>(this->exact().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.StringMatch.exact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exact(), output);
  }

  // string prefix = 2;
  if (has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prefix().data(), static_cast<int>(this->prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.StringMatch.prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->prefix(), output);
  }

  // string regex = 3;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.StringMatch.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->regex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.StringMatch)
}

::google::protobuf::uint8* StringMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.StringMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exact = 1;
  if (has_exact()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exact().data(), static_cast<int>(this->exact().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.StringMatch.exact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exact(), target);
  }

  // string prefix = 2;
  if (has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prefix().data(), static_cast<int>(this->prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.StringMatch.prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->prefix(), target);
  }

  // string regex = 3;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.StringMatch.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->regex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.StringMatch)
  return target;
}

size_t StringMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.StringMatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (match_type_case()) {
    // string exact = 1;
    case kExact: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exact());
      break;
    }
    // string prefix = 2;
    case kPrefix: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prefix());
      break;
    }
    // string regex = 3;
    case kRegex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regex());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.StringMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const StringMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.StringMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.StringMatch)
    MergeFrom(*source);
  }
}

void StringMatch::MergeFrom(const StringMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.StringMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.match_type_case()) {
    case kExact: {
      set_exact(from.exact());
      break;
    }
    case kPrefix: {
      set_prefix(from.prefix());
      break;
    }
    case kRegex: {
      set_regex(from.regex());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
}

void StringMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.StringMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringMatch::CopyFrom(const StringMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.StringMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMatch::IsInitialized() const {
  return true;
}

void StringMatch::Swap(StringMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringMatch::InternalSwap(StringMatch* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringMatch::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

AttributeMatch_ClauseEntry_DoNotUse::AttributeMatch_ClauseEntry_DoNotUse() {}
AttributeMatch_ClauseEntry_DoNotUse::AttributeMatch_ClauseEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void AttributeMatch_ClauseEntry_DoNotUse::MergeFrom(const AttributeMatch_ClauseEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AttributeMatch_ClauseEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[3];
}
void AttributeMatch_ClauseEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void AttributeMatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeMatch::kClauseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeMatch::AttributeMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsAttributeMatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.AttributeMatch)
}
AttributeMatch::AttributeMatch(const AttributeMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clause_.MergeFrom(from.clause_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.AttributeMatch)
}

void AttributeMatch::SharedCtor() {
  _cached_size_ = 0;
}

AttributeMatch::~AttributeMatch() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.AttributeMatch)
  SharedDtor();
}

void AttributeMatch::SharedDtor() {
}

void AttributeMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeMatch::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttributeMatch& AttributeMatch::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsAttributeMatch();
  return *internal_default_instance();
}

AttributeMatch* AttributeMatch::New(::google::protobuf::Arena* arena) const {
  AttributeMatch* n = new AttributeMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttributeMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.AttributeMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clause_.Clear();
  _internal_metadata_.Clear();
}

bool AttributeMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.AttributeMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .istio.mixer.v1.config.client.StringMatch> clause = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          AttributeMatch_ClauseEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AttributeMatch_ClauseEntry_DoNotUse,
              ::std::string, ::istio::mixer::v1::config::client::StringMatch,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch > > parser(&clause_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.AttributeMatch.ClauseEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.AttributeMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.AttributeMatch)
  return false;
#undef DO_
}

void AttributeMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.AttributeMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.v1.config.client.StringMatch> clause = 1;
  if (!this->clause().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.config.client.AttributeMatch.ClauseEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->clause().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->clause().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::const_iterator
          it = this->clause().begin();
          it != this->clause().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AttributeMatch_ClauseEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(clause_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeMatch_ClauseEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::const_iterator
          it = this->clause().begin();
          it != this->clause().end(); ++it) {
        entry.reset(clause_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.AttributeMatch)
}

::google::protobuf::uint8* AttributeMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.AttributeMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.v1.config.client.StringMatch> clause = 1;
  if (!this->clause().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.config.client.AttributeMatch.ClauseEntry.key");
      }
    };

    if (deterministic &&
        this->clause().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->clause().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::const_iterator
          it = this->clause().begin();
          it != this->clause().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AttributeMatch_ClauseEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(clause_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AttributeMatch_ClauseEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::const_iterator
          it = this->clause().begin();
          it != this->clause().end(); ++it) {
        entry.reset(clause_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.AttributeMatch)
  return target;
}

size_t AttributeMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.AttributeMatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .istio.mixer.v1.config.client.StringMatch> clause = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->clause_size());
  {
    ::google::protobuf::scoped_ptr<AttributeMatch_ClauseEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::config::client::StringMatch >::const_iterator
        it = this->clause().begin();
        it != this->clause().end(); ++it) {
      entry.reset(clause_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.AttributeMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.AttributeMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.AttributeMatch)
    MergeFrom(*source);
  }
}

void AttributeMatch::MergeFrom(const AttributeMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.AttributeMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clause_.MergeFrom(from.clause_);
}

void AttributeMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.AttributeMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeMatch::CopyFrom(const AttributeMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.AttributeMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeMatch::IsInitialized() const {
  return true;
}

void AttributeMatch::Swap(AttributeMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttributeMatch::InternalSwap(AttributeMatch* other) {
  using std::swap;
  clause_.Swap(&other->clause_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeMatch::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quota::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quota::kQuotaFieldNumber;
const int Quota::kChargeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quota::Quota()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuota();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.Quota)
}
Quota::Quota(const Quota& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quota_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quota().size() > 0) {
    quota_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quota_);
  }
  charge_ = from.charge_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.Quota)
}

void Quota::SharedCtor() {
  quota_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charge_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Quota::~Quota() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.Quota)
  SharedDtor();
}

void Quota::SharedDtor() {
  quota_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Quota::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quota::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quota& Quota::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuota();
  return *internal_default_instance();
}

Quota* Quota::New(::google::protobuf::Arena* arena) const {
  Quota* n = new Quota;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quota::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.Quota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quota_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charge_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Quota::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.Quota)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string quota = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quota()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quota().data(), static_cast<int>(this->quota().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.Quota.quota"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 charge = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.Quota)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.Quota)
  return false;
#undef DO_
}

void Quota::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.Quota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string quota = 1;
  if (this->quota().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quota().data(), static_cast<int>(this->quota().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.Quota.quota");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->quota(), output);
  }

  // int64 charge = 2;
  if (this->charge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->charge(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.Quota)
}

::google::protobuf::uint8* Quota::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.Quota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string quota = 1;
  if (this->quota().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quota().data(), static_cast<int>(this->quota().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.Quota.quota");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->quota(), target);
  }

  // int64 charge = 2;
  if (this->charge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->charge(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.Quota)
  return target;
}

size_t Quota::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.Quota)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string quota = 1;
  if (this->quota().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quota());
  }

  // int64 charge = 2;
  if (this->charge() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->charge());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quota::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.Quota)
  GOOGLE_DCHECK_NE(&from, this);
  const Quota* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quota>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.Quota)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.Quota)
    MergeFrom(*source);
  }
}

void Quota::MergeFrom(const Quota& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.Quota)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quota().size() > 0) {

    quota_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quota_);
  }
  if (from.charge() != 0) {
    set_charge(from.charge());
  }
}

void Quota::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.Quota)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quota::CopyFrom(const Quota& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.Quota)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quota::IsInitialized() const {
  return true;
}

void Quota::Swap(Quota* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quota::InternalSwap(Quota* other) {
  using std::swap;
  quota_.Swap(&other->quota_);
  swap(charge_, other->charge_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quota::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuotaSpecBinding_QuotaSpecReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaSpecBinding_QuotaSpecReference::kNameFieldNumber;
const int QuotaSpecBinding_QuotaSpecReference::kNamespaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaSpecBinding_QuotaSpecReference::QuotaSpecBinding_QuotaSpecReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaSpecBinding_QuotaSpecReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
}
QuotaSpecBinding_QuotaSpecReference::QuotaSpecBinding_QuotaSpecReference(const QuotaSpecBinding_QuotaSpecReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_().size() > 0) {
    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
}

void QuotaSpecBinding_QuotaSpecReference::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QuotaSpecBinding_QuotaSpecReference::~QuotaSpecBinding_QuotaSpecReference() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  SharedDtor();
}

void QuotaSpecBinding_QuotaSpecReference::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuotaSpecBinding_QuotaSpecReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaSpecBinding_QuotaSpecReference::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaSpecBinding_QuotaSpecReference& QuotaSpecBinding_QuotaSpecReference::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaSpecBinding_QuotaSpecReference();
  return *internal_default_instance();
}

QuotaSpecBinding_QuotaSpecReference* QuotaSpecBinding_QuotaSpecReference::New(::google::protobuf::Arena* arena) const {
  QuotaSpecBinding_QuotaSpecReference* n = new QuotaSpecBinding_QuotaSpecReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaSpecBinding_QuotaSpecReference::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QuotaSpecBinding_QuotaSpecReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string namespace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_().data(), static_cast<int>(this->namespace_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference.namespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  return false;
#undef DO_
}

void QuotaSpecBinding_QuotaSpecReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference.namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->namespace_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
}

::google::protobuf::uint8* QuotaSpecBinding_QuotaSpecReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference.namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->namespace_(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  return target;
}

size_t QuotaSpecBinding_QuotaSpecReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaSpecBinding_QuotaSpecReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaSpecBinding_QuotaSpecReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaSpecBinding_QuotaSpecReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
    MergeFrom(*source);
  }
}

void QuotaSpecBinding_QuotaSpecReference::MergeFrom(const QuotaSpecBinding_QuotaSpecReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.namespace_().size() > 0) {

    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
}

void QuotaSpecBinding_QuotaSpecReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaSpecBinding_QuotaSpecReference::CopyFrom(const QuotaSpecBinding_QuotaSpecReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaSpecBinding_QuotaSpecReference::IsInitialized() const {
  return true;
}

void QuotaSpecBinding_QuotaSpecReference::Swap(QuotaSpecBinding_QuotaSpecReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaSpecBinding_QuotaSpecReference::InternalSwap(QuotaSpecBinding_QuotaSpecReference* other) {
  using std::swap;
  name_.Swap(&other->name_);
  namespace__.Swap(&other->namespace__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaSpecBinding_QuotaSpecReference::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuotaSpecBinding::InitAsDefaultInstance() {
}
void QuotaSpecBinding::clear_services() {
  services_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaSpecBinding::kServicesFieldNumber;
const int QuotaSpecBinding::kQuotaSpecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaSpecBinding::QuotaSpecBinding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaSpecBinding();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.QuotaSpecBinding)
}
QuotaSpecBinding::QuotaSpecBinding(const QuotaSpecBinding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      services_(from.services_),
      quota_specs_(from.quota_specs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.QuotaSpecBinding)
}

void QuotaSpecBinding::SharedCtor() {
  _cached_size_ = 0;
}

QuotaSpecBinding::~QuotaSpecBinding() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.QuotaSpecBinding)
  SharedDtor();
}

void QuotaSpecBinding::SharedDtor() {
}

void QuotaSpecBinding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaSpecBinding::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaSpecBinding& QuotaSpecBinding::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::InitDefaultsQuotaSpecBinding();
  return *internal_default_instance();
}

QuotaSpecBinding* QuotaSpecBinding::New(::google::protobuf::Arena* arena) const {
  QuotaSpecBinding* n = new QuotaSpecBinding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaSpecBinding::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  quota_specs_.Clear();
  _internal_metadata_.Clear();
}

bool QuotaSpecBinding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mixer.v1.config.client.IstioService services = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference quota_specs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_quota_specs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.QuotaSpecBinding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.QuotaSpecBinding)
  return false;
#undef DO_
}

void QuotaSpecBinding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.IstioService services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->services(static_cast<int>(i)), output);
  }

  // repeated .istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference quota_specs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quota_specs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->quota_specs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.QuotaSpecBinding)
}

::google::protobuf::uint8* QuotaSpecBinding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.IstioService services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->services(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference quota_specs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quota_specs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->quota_specs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.QuotaSpecBinding)
  return target;
}

size_t QuotaSpecBinding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mixer.v1.config.client.IstioService services = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  // repeated .istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference quota_specs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->quota_specs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quota_specs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaSpecBinding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaSpecBinding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaSpecBinding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.QuotaSpecBinding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.QuotaSpecBinding)
    MergeFrom(*source);
  }
}

void QuotaSpecBinding::MergeFrom(const QuotaSpecBinding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
  quota_specs_.MergeFrom(from.quota_specs_);
}

void QuotaSpecBinding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaSpecBinding::CopyFrom(const QuotaSpecBinding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.QuotaSpecBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaSpecBinding::IsInitialized() const {
  return true;
}

void QuotaSpecBinding::Swap(QuotaSpecBinding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaSpecBinding::InternalSwap(QuotaSpecBinding* other) {
  using std::swap;
  services_.InternalSwap(&other->services_);
  quota_specs_.InternalSwap(&other->quota_specs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaSpecBinding::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace client
}  // namespace config
}  // namespace v1
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)
