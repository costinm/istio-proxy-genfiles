// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/config/client/auth.proto

#ifndef PROTOBUF_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto__INCLUDED
#define PROTOBUF_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gogoproto/gogo.pb.h"
#include <google/protobuf/duration.pb.h>
#include "mixer/v1/config/client/service.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsJWT_LocationImpl();
void InitDefaultsJWT_Location();
void InitDefaultsJWTImpl();
void InitDefaultsJWT();
void InitDefaultsEndUserAuthenticationPolicySpecImpl();
void InitDefaultsEndUserAuthenticationPolicySpec();
void InitDefaultsEndUserAuthenticationPolicySpecReferenceImpl();
void InitDefaultsEndUserAuthenticationPolicySpecReference();
void InitDefaultsEndUserAuthenticationPolicySpecBindingImpl();
void InitDefaultsEndUserAuthenticationPolicySpecBinding();
inline void InitDefaults() {
  InitDefaultsJWT_Location();
  InitDefaultsJWT();
  InitDefaultsEndUserAuthenticationPolicySpec();
  InitDefaultsEndUserAuthenticationPolicySpecReference();
  InitDefaultsEndUserAuthenticationPolicySpecBinding();
}
}  // namespace protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto
namespace istio {
namespace mixer {
namespace v1 {
namespace config {
namespace client {
class EndUserAuthenticationPolicySpec;
class EndUserAuthenticationPolicySpecDefaultTypeInternal;
extern EndUserAuthenticationPolicySpecDefaultTypeInternal _EndUserAuthenticationPolicySpec_default_instance_;
class EndUserAuthenticationPolicySpecBinding;
class EndUserAuthenticationPolicySpecBindingDefaultTypeInternal;
extern EndUserAuthenticationPolicySpecBindingDefaultTypeInternal _EndUserAuthenticationPolicySpecBinding_default_instance_;
class EndUserAuthenticationPolicySpecReference;
class EndUserAuthenticationPolicySpecReferenceDefaultTypeInternal;
extern EndUserAuthenticationPolicySpecReferenceDefaultTypeInternal _EndUserAuthenticationPolicySpecReference_default_instance_;
class JWT;
class JWTDefaultTypeInternal;
extern JWTDefaultTypeInternal _JWT_default_instance_;
class JWT_Location;
class JWT_LocationDefaultTypeInternal;
extern JWT_LocationDefaultTypeInternal _JWT_Location_default_instance_;
}  // namespace client
}  // namespace config
}  // namespace v1
}  // namespace mixer
}  // namespace istio
namespace istio {
namespace mixer {
namespace v1 {
namespace config {
namespace client {

// ===================================================================

class JWT_Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.config.client.JWT.Location) */ {
 public:
  JWT_Location();
  virtual ~JWT_Location();

  JWT_Location(const JWT_Location& from);

  inline JWT_Location& operator=(const JWT_Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JWT_Location(JWT_Location&& from) noexcept
    : JWT_Location() {
    *this = ::std::move(from);
  }

  inline JWT_Location& operator=(JWT_Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JWT_Location& default_instance();

  enum SchemeCase {
    kHeader = 1,
    kQuery = 2,
    SCHEME_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JWT_Location* internal_default_instance() {
    return reinterpret_cast<const JWT_Location*>(
               &_JWT_Location_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(JWT_Location* other);
  friend void swap(JWT_Location& a, JWT_Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JWT_Location* New() const PROTOBUF_FINAL { return New(NULL); }

  JWT_Location* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JWT_Location& from);
  void MergeFrom(const JWT_Location& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JWT_Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string header = 1;
  private:
  bool has_header() const;
  public:
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::std::string& header() const;
  void set_header(const ::std::string& value);
  #if LANG_CXX11
  void set_header(::std::string&& value);
  #endif
  void set_header(const char* value);
  void set_header(const char* value, size_t size);
  ::std::string* mutable_header();
  ::std::string* release_header();
  void set_allocated_header(::std::string* header);

  // string query = 2;
  private:
  bool has_query() const;
  public:
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  SchemeCase scheme_case() const;
  // @@protoc_insertion_point(class_scope:istio.mixer.v1.config.client.JWT.Location)
 private:
  void set_has_header();
  void set_has_query();

  inline bool has_scheme() const;
  void clear_scheme();
  inline void clear_has_scheme();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union SchemeUnion {
    SchemeUnion() {}
    ::google::protobuf::internal::ArenaStringPtr header_;
    ::google::protobuf::internal::ArenaStringPtr query_;
  } scheme_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWT_LocationImpl();
};
// -------------------------------------------------------------------

class JWT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.config.client.JWT) */ {
 public:
  JWT();
  virtual ~JWT();

  JWT(const JWT& from);

  inline JWT& operator=(const JWT& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JWT(JWT&& from) noexcept
    : JWT() {
    *this = ::std::move(from);
  }

  inline JWT& operator=(JWT&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JWT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JWT* internal_default_instance() {
    return reinterpret_cast<const JWT*>(
               &_JWT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(JWT* other);
  friend void swap(JWT& a, JWT& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JWT* New() const PROTOBUF_FINAL { return New(NULL); }

  JWT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JWT& from);
  void MergeFrom(const JWT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JWT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef JWT_Location Location;

  // accessors -------------------------------------------------------

  // repeated string audiences = 2;
  int audiences_size() const;
  void clear_audiences();
  static const int kAudiencesFieldNumber = 2;
  const ::std::string& audiences(int index) const;
  ::std::string* mutable_audiences(int index);
  void set_audiences(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_audiences(int index, ::std::string&& value);
  #endif
  void set_audiences(int index, const char* value);
  void set_audiences(int index, const char* value, size_t size);
  ::std::string* add_audiences();
  void add_audiences(const ::std::string& value);
  #if LANG_CXX11
  void add_audiences(::std::string&& value);
  #endif
  void add_audiences(const char* value);
  void add_audiences(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& audiences() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_audiences();

  // repeated .istio.mixer.v1.config.client.JWT.Location locations = 6;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 6;
  const ::istio::mixer::v1::config::client::JWT_Location& locations(int index) const;
  ::istio::mixer::v1::config::client::JWT_Location* mutable_locations(int index);
  ::istio::mixer::v1::config::client::JWT_Location* add_locations();
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT_Location >*
      mutable_locations();
  const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT_Location >&
      locations() const;

  // string issuer = 1;
  void clear_issuer();
  static const int kIssuerFieldNumber = 1;
  const ::std::string& issuer() const;
  void set_issuer(const ::std::string& value);
  #if LANG_CXX11
  void set_issuer(::std::string&& value);
  #endif
  void set_issuer(const char* value);
  void set_issuer(const char* value, size_t size);
  ::std::string* mutable_issuer();
  ::std::string* release_issuer();
  void set_allocated_issuer(::std::string* issuer);

  // string jwks_uri = 3;
  void clear_jwks_uri();
  static const int kJwksUriFieldNumber = 3;
  const ::std::string& jwks_uri() const;
  void set_jwks_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_jwks_uri(::std::string&& value);
  #endif
  void set_jwks_uri(const char* value);
  void set_jwks_uri(const char* value, size_t size);
  ::std::string* mutable_jwks_uri();
  ::std::string* release_jwks_uri();
  void set_allocated_jwks_uri(::std::string* jwks_uri);

  // .google.protobuf.Duration public_key_cache_duration = 5;
  bool has_public_key_cache_duration() const;
  void clear_public_key_cache_duration();
  static const int kPublicKeyCacheDurationFieldNumber = 5;
  const ::google::protobuf::Duration& public_key_cache_duration() const;
  ::google::protobuf::Duration* release_public_key_cache_duration();
  ::google::protobuf::Duration* mutable_public_key_cache_duration();
  void set_allocated_public_key_cache_duration(::google::protobuf::Duration* public_key_cache_duration);

  // bool forward_jwt = 4;
  void clear_forward_jwt();
  static const int kForwardJwtFieldNumber = 4;
  bool forward_jwt() const;
  void set_forward_jwt(bool value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.config.client.JWT)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> audiences_;
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT_Location > locations_;
  ::google::protobuf::internal::ArenaStringPtr issuer_;
  ::google::protobuf::internal::ArenaStringPtr jwks_uri_;
  ::google::protobuf::Duration* public_key_cache_duration_;
  bool forward_jwt_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWTImpl();
};
// -------------------------------------------------------------------

class EndUserAuthenticationPolicySpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec) */ {
 public:
  EndUserAuthenticationPolicySpec();
  virtual ~EndUserAuthenticationPolicySpec();

  EndUserAuthenticationPolicySpec(const EndUserAuthenticationPolicySpec& from);

  inline EndUserAuthenticationPolicySpec& operator=(const EndUserAuthenticationPolicySpec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndUserAuthenticationPolicySpec(EndUserAuthenticationPolicySpec&& from) noexcept
    : EndUserAuthenticationPolicySpec() {
    *this = ::std::move(from);
  }

  inline EndUserAuthenticationPolicySpec& operator=(EndUserAuthenticationPolicySpec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndUserAuthenticationPolicySpec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndUserAuthenticationPolicySpec* internal_default_instance() {
    return reinterpret_cast<const EndUserAuthenticationPolicySpec*>(
               &_EndUserAuthenticationPolicySpec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(EndUserAuthenticationPolicySpec* other);
  friend void swap(EndUserAuthenticationPolicySpec& a, EndUserAuthenticationPolicySpec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndUserAuthenticationPolicySpec* New() const PROTOBUF_FINAL { return New(NULL); }

  EndUserAuthenticationPolicySpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndUserAuthenticationPolicySpec& from);
  void MergeFrom(const EndUserAuthenticationPolicySpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndUserAuthenticationPolicySpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .istio.mixer.v1.config.client.JWT jwts = 2;
  int jwts_size() const;
  void clear_jwts();
  static const int kJwtsFieldNumber = 2;
  const ::istio::mixer::v1::config::client::JWT& jwts(int index) const;
  ::istio::mixer::v1::config::client::JWT* mutable_jwts(int index);
  ::istio::mixer::v1::config::client::JWT* add_jwts();
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT >*
      mutable_jwts();
  const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT >&
      jwts() const;

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT > jwts_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecImpl();
};
// -------------------------------------------------------------------

class EndUserAuthenticationPolicySpecReference : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference) */ {
 public:
  EndUserAuthenticationPolicySpecReference();
  virtual ~EndUserAuthenticationPolicySpecReference();

  EndUserAuthenticationPolicySpecReference(const EndUserAuthenticationPolicySpecReference& from);

  inline EndUserAuthenticationPolicySpecReference& operator=(const EndUserAuthenticationPolicySpecReference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndUserAuthenticationPolicySpecReference(EndUserAuthenticationPolicySpecReference&& from) noexcept
    : EndUserAuthenticationPolicySpecReference() {
    *this = ::std::move(from);
  }

  inline EndUserAuthenticationPolicySpecReference& operator=(EndUserAuthenticationPolicySpecReference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndUserAuthenticationPolicySpecReference& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndUserAuthenticationPolicySpecReference* internal_default_instance() {
    return reinterpret_cast<const EndUserAuthenticationPolicySpecReference*>(
               &_EndUserAuthenticationPolicySpecReference_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(EndUserAuthenticationPolicySpecReference* other);
  friend void swap(EndUserAuthenticationPolicySpecReference& a, EndUserAuthenticationPolicySpecReference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndUserAuthenticationPolicySpecReference* New() const PROTOBUF_FINAL { return New(NULL); }

  EndUserAuthenticationPolicySpecReference* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndUserAuthenticationPolicySpecReference& from);
  void MergeFrom(const EndUserAuthenticationPolicySpecReference& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndUserAuthenticationPolicySpecReference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string namespace = 2;
  void clear_namespace_();
  static const int kNamespaceFieldNumber = 2;
  const ::std::string& namespace_() const;
  void set_namespace_(const ::std::string& value);
  #if LANG_CXX11
  void set_namespace_(::std::string&& value);
  #endif
  void set_namespace_(const char* value);
  void set_namespace_(const char* value, size_t size);
  ::std::string* mutable_namespace_();
  ::std::string* release_namespace_();
  void set_allocated_namespace_(::std::string* namespace_);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr namespace__;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecReferenceImpl();
};
// -------------------------------------------------------------------

class EndUserAuthenticationPolicySpecBinding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding) */ {
 public:
  EndUserAuthenticationPolicySpecBinding();
  virtual ~EndUserAuthenticationPolicySpecBinding();

  EndUserAuthenticationPolicySpecBinding(const EndUserAuthenticationPolicySpecBinding& from);

  inline EndUserAuthenticationPolicySpecBinding& operator=(const EndUserAuthenticationPolicySpecBinding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndUserAuthenticationPolicySpecBinding(EndUserAuthenticationPolicySpecBinding&& from) noexcept
    : EndUserAuthenticationPolicySpecBinding() {
    *this = ::std::move(from);
  }

  inline EndUserAuthenticationPolicySpecBinding& operator=(EndUserAuthenticationPolicySpecBinding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndUserAuthenticationPolicySpecBinding& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndUserAuthenticationPolicySpecBinding* internal_default_instance() {
    return reinterpret_cast<const EndUserAuthenticationPolicySpecBinding*>(
               &_EndUserAuthenticationPolicySpecBinding_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(EndUserAuthenticationPolicySpecBinding* other);
  friend void swap(EndUserAuthenticationPolicySpecBinding& a, EndUserAuthenticationPolicySpecBinding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndUserAuthenticationPolicySpecBinding* New() const PROTOBUF_FINAL { return New(NULL); }

  EndUserAuthenticationPolicySpecBinding* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndUserAuthenticationPolicySpecBinding& from);
  void MergeFrom(const EndUserAuthenticationPolicySpecBinding& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndUserAuthenticationPolicySpecBinding* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .istio.mixer.v1.config.client.IstioService services = 1;
  int services_size() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  const ::istio::mixer::v1::config::client::IstioService& services(int index) const;
  ::istio::mixer::v1::config::client::IstioService* mutable_services(int index);
  ::istio::mixer::v1::config::client::IstioService* add_services();
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::IstioService >*
      mutable_services();
  const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::IstioService >&
      services() const;

  // repeated .istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference policies = 2;
  int policies_size() const;
  void clear_policies();
  static const int kPoliciesFieldNumber = 2;
  const ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference& policies(int index) const;
  ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference* mutable_policies(int index);
  ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference* add_policies();
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference >*
      mutable_policies();
  const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference >&
      policies() const;

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::IstioService > services_;
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference > policies_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecBindingImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JWT_Location

// string header = 1;
inline bool JWT_Location::has_header() const {
  return scheme_case() == kHeader;
}
inline void JWT_Location::set_has_header() {
  _oneof_case_[0] = kHeader;
}
inline void JWT_Location::clear_header() {
  if (has_header()) {
    scheme_.header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_scheme();
  }
}
inline const ::std::string& JWT_Location::header() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.Location.header)
  if (has_header()) {
    return scheme_.header_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void JWT_Location::set_header(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.Location.header)
  if (!has_header()) {
    clear_scheme();
    set_has_header();
    scheme_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.Location.header)
}
#if LANG_CXX11
inline void JWT_Location::set_header(::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.Location.header)
  if (!has_header()) {
    clear_scheme();
    set_has_header();
    scheme_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.config.client.JWT.Location.header)
}
#endif
inline void JWT_Location::set_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_header()) {
    clear_scheme();
    set_has_header();
    scheme_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.config.client.JWT.Location.header)
}
inline void JWT_Location::set_header(const char* value, size_t size) {
  if (!has_header()) {
    clear_scheme();
    set_has_header();
    scheme_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.config.client.JWT.Location.header)
}
inline ::std::string* JWT_Location::mutable_header() {
  if (!has_header()) {
    clear_scheme();
    set_has_header();
    scheme_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.JWT.Location.header)
  return scheme_.header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JWT_Location::release_header() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.config.client.JWT.Location.header)
  if (has_header()) {
    clear_has_scheme();
    return scheme_.header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void JWT_Location::set_allocated_header(::std::string* header) {
  if (!has_header()) {
    scheme_.header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_scheme();
  if (header != NULL) {
    set_has_header();
    scheme_.header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        header);
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.config.client.JWT.Location.header)
}

// string query = 2;
inline bool JWT_Location::has_query() const {
  return scheme_case() == kQuery;
}
inline void JWT_Location::set_has_query() {
  _oneof_case_[0] = kQuery;
}
inline void JWT_Location::clear_query() {
  if (has_query()) {
    scheme_.query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_scheme();
  }
}
inline const ::std::string& JWT_Location::query() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.Location.query)
  if (has_query()) {
    return scheme_.query_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void JWT_Location::set_query(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.Location.query)
  if (!has_query()) {
    clear_scheme();
    set_has_query();
    scheme_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.Location.query)
}
#if LANG_CXX11
inline void JWT_Location::set_query(::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.Location.query)
  if (!has_query()) {
    clear_scheme();
    set_has_query();
    scheme_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.config.client.JWT.Location.query)
}
#endif
inline void JWT_Location::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_query()) {
    clear_scheme();
    set_has_query();
    scheme_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.config.client.JWT.Location.query)
}
inline void JWT_Location::set_query(const char* value, size_t size) {
  if (!has_query()) {
    clear_scheme();
    set_has_query();
    scheme_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  scheme_.query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.config.client.JWT.Location.query)
}
inline ::std::string* JWT_Location::mutable_query() {
  if (!has_query()) {
    clear_scheme();
    set_has_query();
    scheme_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.JWT.Location.query)
  return scheme_.query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JWT_Location::release_query() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.config.client.JWT.Location.query)
  if (has_query()) {
    clear_has_scheme();
    return scheme_.query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void JWT_Location::set_allocated_query(::std::string* query) {
  if (!has_query()) {
    scheme_.query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_scheme();
  if (query != NULL) {
    set_has_query();
    scheme_.query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        query);
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.config.client.JWT.Location.query)
}

inline bool JWT_Location::has_scheme() const {
  return scheme_case() != SCHEME_NOT_SET;
}
inline void JWT_Location::clear_has_scheme() {
  _oneof_case_[0] = SCHEME_NOT_SET;
}
inline JWT_Location::SchemeCase JWT_Location::scheme_case() const {
  return JWT_Location::SchemeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// JWT

// string issuer = 1;
inline void JWT::clear_issuer() {
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JWT::issuer() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.issuer)
  return issuer_.GetNoArena();
}
inline void JWT::set_issuer(const ::std::string& value) {
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.issuer)
}
#if LANG_CXX11
inline void JWT::set_issuer(::std::string&& value) {
  
  issuer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.config.client.JWT.issuer)
}
#endif
inline void JWT::set_issuer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.config.client.JWT.issuer)
}
inline void JWT::set_issuer(const char* value, size_t size) {
  
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.config.client.JWT.issuer)
}
inline ::std::string* JWT::mutable_issuer() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.JWT.issuer)
  return issuer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JWT::release_issuer() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.config.client.JWT.issuer)
  
  return issuer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JWT::set_allocated_issuer(::std::string* issuer) {
  if (issuer != NULL) {
    
  } else {
    
  }
  issuer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issuer);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.config.client.JWT.issuer)
}

// repeated string audiences = 2;
inline int JWT::audiences_size() const {
  return audiences_.size();
}
inline void JWT::clear_audiences() {
  audiences_.Clear();
}
inline const ::std::string& JWT::audiences(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.audiences)
  return audiences_.Get(index);
}
inline ::std::string* JWT::mutable_audiences(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.JWT.audiences)
  return audiences_.Mutable(index);
}
inline void JWT::set_audiences(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.audiences)
  audiences_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void JWT::set_audiences(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.audiences)
  audiences_.Mutable(index)->assign(std::move(value));
}
#endif
inline void JWT::set_audiences(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  audiences_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.config.client.JWT.audiences)
}
inline void JWT::set_audiences(int index, const char* value, size_t size) {
  audiences_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.config.client.JWT.audiences)
}
inline ::std::string* JWT::add_audiences() {
  // @@protoc_insertion_point(field_add_mutable:istio.mixer.v1.config.client.JWT.audiences)
  return audiences_.Add();
}
inline void JWT::add_audiences(const ::std::string& value) {
  audiences_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:istio.mixer.v1.config.client.JWT.audiences)
}
#if LANG_CXX11
inline void JWT::add_audiences(::std::string&& value) {
  audiences_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:istio.mixer.v1.config.client.JWT.audiences)
}
#endif
inline void JWT::add_audiences(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  audiences_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:istio.mixer.v1.config.client.JWT.audiences)
}
inline void JWT::add_audiences(const char* value, size_t size) {
  audiences_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:istio.mixer.v1.config.client.JWT.audiences)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
JWT::audiences() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.config.client.JWT.audiences)
  return audiences_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
JWT::mutable_audiences() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.config.client.JWT.audiences)
  return &audiences_;
}

// string jwks_uri = 3;
inline void JWT::clear_jwks_uri() {
  jwks_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JWT::jwks_uri() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.jwks_uri)
  return jwks_uri_.GetNoArena();
}
inline void JWT::set_jwks_uri(const ::std::string& value) {
  
  jwks_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.jwks_uri)
}
#if LANG_CXX11
inline void JWT::set_jwks_uri(::std::string&& value) {
  
  jwks_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.config.client.JWT.jwks_uri)
}
#endif
inline void JWT::set_jwks_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  jwks_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.config.client.JWT.jwks_uri)
}
inline void JWT::set_jwks_uri(const char* value, size_t size) {
  
  jwks_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.config.client.JWT.jwks_uri)
}
inline ::std::string* JWT::mutable_jwks_uri() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.JWT.jwks_uri)
  return jwks_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JWT::release_jwks_uri() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.config.client.JWT.jwks_uri)
  
  return jwks_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JWT::set_allocated_jwks_uri(::std::string* jwks_uri) {
  if (jwks_uri != NULL) {
    
  } else {
    
  }
  jwks_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jwks_uri);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.config.client.JWT.jwks_uri)
}

// bool forward_jwt = 4;
inline void JWT::clear_forward_jwt() {
  forward_jwt_ = false;
}
inline bool JWT::forward_jwt() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.forward_jwt)
  return forward_jwt_;
}
inline void JWT::set_forward_jwt(bool value) {
  
  forward_jwt_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.JWT.forward_jwt)
}

// .google.protobuf.Duration public_key_cache_duration = 5;
inline bool JWT::has_public_key_cache_duration() const {
  return this != internal_default_instance() && public_key_cache_duration_ != NULL;
}
inline const ::google::protobuf::Duration& JWT::public_key_cache_duration() const {
  const ::google::protobuf::Duration* p = public_key_cache_duration_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.public_key_cache_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* JWT::release_public_key_cache_duration() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.config.client.JWT.public_key_cache_duration)
  
  ::google::protobuf::Duration* temp = public_key_cache_duration_;
  public_key_cache_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* JWT::mutable_public_key_cache_duration() {
  
  if (public_key_cache_duration_ == NULL) {
    public_key_cache_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.JWT.public_key_cache_duration)
  return public_key_cache_duration_;
}
inline void JWT::set_allocated_public_key_cache_duration(::google::protobuf::Duration* public_key_cache_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(public_key_cache_duration_);
  }
  if (public_key_cache_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(public_key_cache_duration)->GetArena();
    if (message_arena != submessage_arena) {
      public_key_cache_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, public_key_cache_duration, submessage_arena);
    }
    
  } else {
    
  }
  public_key_cache_duration_ = public_key_cache_duration;
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.config.client.JWT.public_key_cache_duration)
}

// repeated .istio.mixer.v1.config.client.JWT.Location locations = 6;
inline int JWT::locations_size() const {
  return locations_.size();
}
inline void JWT::clear_locations() {
  locations_.Clear();
}
inline const ::istio::mixer::v1::config::client::JWT_Location& JWT::locations(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.JWT.locations)
  return locations_.Get(index);
}
inline ::istio::mixer::v1::config::client::JWT_Location* JWT::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.JWT.locations)
  return locations_.Mutable(index);
}
inline ::istio::mixer::v1::config::client::JWT_Location* JWT::add_locations() {
  // @@protoc_insertion_point(field_add:istio.mixer.v1.config.client.JWT.locations)
  return locations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT_Location >*
JWT::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.config.client.JWT.locations)
  return &locations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT_Location >&
JWT::locations() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.config.client.JWT.locations)
  return locations_;
}

// -------------------------------------------------------------------

// EndUserAuthenticationPolicySpec

// repeated .istio.mixer.v1.config.client.JWT jwts = 2;
inline int EndUserAuthenticationPolicySpec::jwts_size() const {
  return jwts_.size();
}
inline void EndUserAuthenticationPolicySpec::clear_jwts() {
  jwts_.Clear();
}
inline const ::istio::mixer::v1::config::client::JWT& EndUserAuthenticationPolicySpec::jwts(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec.jwts)
  return jwts_.Get(index);
}
inline ::istio::mixer::v1::config::client::JWT* EndUserAuthenticationPolicySpec::mutable_jwts(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec.jwts)
  return jwts_.Mutable(index);
}
inline ::istio::mixer::v1::config::client::JWT* EndUserAuthenticationPolicySpec::add_jwts() {
  // @@protoc_insertion_point(field_add:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec.jwts)
  return jwts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT >*
EndUserAuthenticationPolicySpec::mutable_jwts() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec.jwts)
  return &jwts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::JWT >&
EndUserAuthenticationPolicySpec::jwts() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec.jwts)
  return jwts_;
}

// -------------------------------------------------------------------

// EndUserAuthenticationPolicySpecReference

// string name = 1;
inline void EndUserAuthenticationPolicySpecReference::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndUserAuthenticationPolicySpecReference::name() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
  return name_.GetNoArena();
}
inline void EndUserAuthenticationPolicySpecReference::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
}
#if LANG_CXX11
inline void EndUserAuthenticationPolicySpecReference::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
}
#endif
inline void EndUserAuthenticationPolicySpecReference::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
}
inline void EndUserAuthenticationPolicySpecReference::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
}
inline ::std::string* EndUserAuthenticationPolicySpecReference::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndUserAuthenticationPolicySpecReference::release_name() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndUserAuthenticationPolicySpecReference::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name)
}

// string namespace = 2;
inline void EndUserAuthenticationPolicySpecReference::clear_namespace_() {
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndUserAuthenticationPolicySpecReference::namespace_() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
  return namespace__.GetNoArena();
}
inline void EndUserAuthenticationPolicySpecReference::set_namespace_(const ::std::string& value) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
}
#if LANG_CXX11
inline void EndUserAuthenticationPolicySpecReference::set_namespace_(::std::string&& value) {
  
  namespace__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
}
#endif
inline void EndUserAuthenticationPolicySpecReference::set_namespace_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
}
inline void EndUserAuthenticationPolicySpecReference::set_namespace_(const char* value, size_t size) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
}
inline ::std::string* EndUserAuthenticationPolicySpecReference::mutable_namespace_() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
  return namespace__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndUserAuthenticationPolicySpecReference::release_namespace_() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
  
  return namespace__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndUserAuthenticationPolicySpecReference::set_allocated_namespace_(::std::string* namespace_) {
  if (namespace_ != NULL) {
    
  } else {
    
  }
  namespace__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), namespace_);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace)
}

// -------------------------------------------------------------------

// EndUserAuthenticationPolicySpecBinding

// repeated .istio.mixer.v1.config.client.IstioService services = 1;
inline int EndUserAuthenticationPolicySpecBinding::services_size() const {
  return services_.size();
}
inline const ::istio::mixer::v1::config::client::IstioService& EndUserAuthenticationPolicySpecBinding::services(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.services)
  return services_.Get(index);
}
inline ::istio::mixer::v1::config::client::IstioService* EndUserAuthenticationPolicySpecBinding::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.services)
  return services_.Mutable(index);
}
inline ::istio::mixer::v1::config::client::IstioService* EndUserAuthenticationPolicySpecBinding::add_services() {
  // @@protoc_insertion_point(field_add:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.services)
  return services_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::IstioService >*
EndUserAuthenticationPolicySpecBinding::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.services)
  return &services_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::IstioService >&
EndUserAuthenticationPolicySpecBinding::services() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.services)
  return services_;
}

// repeated .istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference policies = 2;
inline int EndUserAuthenticationPolicySpecBinding::policies_size() const {
  return policies_.size();
}
inline void EndUserAuthenticationPolicySpecBinding::clear_policies() {
  policies_.Clear();
}
inline const ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference& EndUserAuthenticationPolicySpecBinding::policies(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.policies)
  return policies_.Get(index);
}
inline ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference* EndUserAuthenticationPolicySpecBinding::mutable_policies(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.policies)
  return policies_.Mutable(index);
}
inline ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference* EndUserAuthenticationPolicySpecBinding::add_policies() {
  // @@protoc_insertion_point(field_add:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.policies)
  return policies_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference >*
EndUserAuthenticationPolicySpecBinding::mutable_policies() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.policies)
  return &policies_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference >&
EndUserAuthenticationPolicySpecBinding::policies() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding.policies)
  return policies_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace client
}  // namespace config
}  // namespace v1
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto__INCLUDED
