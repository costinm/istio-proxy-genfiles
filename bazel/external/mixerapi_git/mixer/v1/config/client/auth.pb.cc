// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/config/client/auth.proto

#include "mixer/v1/config/client/auth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mixer {
namespace v1 {
namespace config {
namespace client {
class JWT_LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JWT_Location>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr header_;
  ::google::protobuf::internal::ArenaStringPtr query_;
} _JWT_Location_default_instance_;
class JWTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JWT>
      _instance;
} _JWT_default_instance_;
class EndUserAuthenticationPolicySpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndUserAuthenticationPolicySpec>
      _instance;
} _EndUserAuthenticationPolicySpec_default_instance_;
class EndUserAuthenticationPolicySpecReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndUserAuthenticationPolicySpecReference>
      _instance;
} _EndUserAuthenticationPolicySpecReference_default_instance_;
class EndUserAuthenticationPolicySpecBindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndUserAuthenticationPolicySpecBinding>
      _instance;
} _EndUserAuthenticationPolicySpecBinding_default_instance_;
}  // namespace client
}  // namespace config
}  // namespace v1
}  // namespace mixer
}  // namespace istio
namespace protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto {
void InitDefaultsJWT_LocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mixer::v1::config::client::_JWT_Location_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::JWT_Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::JWT_Location::InitAsDefaultInstance();
}

void InitDefaultsJWT_Location() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJWT_LocationImpl);
}

void InitDefaultsJWTImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWT_Location();
  {
    void* ptr = &::istio::mixer::v1::config::client::_JWT_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::JWT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::JWT::InitAsDefaultInstance();
}

void InitDefaultsJWT() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJWTImpl);
}

void InitDefaultsEndUserAuthenticationPolicySpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWT();
  {
    void* ptr = &::istio::mixer::v1::config::client::_EndUserAuthenticationPolicySpec_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpec::InitAsDefaultInstance();
}

void InitDefaultsEndUserAuthenticationPolicySpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEndUserAuthenticationPolicySpecImpl);
}

void InitDefaultsEndUserAuthenticationPolicySpecReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mixer::v1::config::client::_EndUserAuthenticationPolicySpecReference_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference::InitAsDefaultInstance();
}

void InitDefaultsEndUserAuthenticationPolicySpecReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEndUserAuthenticationPolicySpecReferenceImpl);
}

void InitDefaultsEndUserAuthenticationPolicySpecBindingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fv1_2fconfig_2fclient_2fservice_2eproto::InitDefaultsIstioService();
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecReference();
  {
    void* ptr = &::istio::mixer::v1::config::client::_EndUserAuthenticationPolicySpecBinding_default_instance_;
    new (ptr) ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecBinding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecBinding::InitAsDefaultInstance();
}

void InitDefaultsEndUserAuthenticationPolicySpecBinding() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEndUserAuthenticationPolicySpecBindingImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT_Location, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::mixer::v1::config::client::JWT_LocationDefaultTypeInternal, header_),
  offsetof(::istio::mixer::v1::config::client::JWT_LocationDefaultTypeInternal, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT_Location, scheme_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT, issuer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT, audiences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT, jwks_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT, forward_jwt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT, public_key_cache_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::JWT, locations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpec, jwts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference, namespace__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecBinding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecBinding, services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecBinding, policies_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::mixer::v1::config::client::JWT_Location)},
  { 8, -1, sizeof(::istio::mixer::v1::config::client::JWT)},
  { 19, -1, sizeof(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpec)},
  { 25, -1, sizeof(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecReference)},
  { 32, -1, sizeof(::istio::mixer::v1::config::client::EndUserAuthenticationPolicySpecBinding)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_JWT_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_JWT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_EndUserAuthenticationPolicySpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_EndUserAuthenticationPolicySpecReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::config::client::_EndUserAuthenticationPolicySpecBinding_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mixer/v1/config/client/auth.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!mixer/v1/config/client/auth.proto\022\034ist"
      "io.mixer.v1.config.client\032\024gogoproto/gog"
      "o.proto\032\036google/protobuf/duration.proto\032"
      "$mixer/v1/config/client/service.proto\"\205\002"
      "\n\003JWT\022\016\n\006issuer\030\001 \001(\t\022\021\n\taudiences\030\002 \003(\t"
      "\022\020\n\010jwks_uri\030\003 \001(\t\022\023\n\013forward_jwt\030\004 \001(\010\022"
      "<\n\031public_key_cache_duration\030\005 \001(\0132\031.goo"
      "gle.protobuf.Duration\022=\n\tlocations\030\006 \003(\013"
      "2*.istio.mixer.v1.config.client.JWT.Loca"
      "tion\0327\n\010Location\022\020\n\006header\030\001 \001(\tH\000\022\017\n\005qu"
      "ery\030\002 \001(\tH\000B\010\n\006scheme\"R\n\037EndUserAuthenti"
      "cationPolicySpec\022/\n\004jwts\030\002 \003(\0132!.istio.m"
      "ixer.v1.config.client.JWT\"K\n(EndUserAuth"
      "enticationPolicySpecReference\022\014\n\004name\030\001 "
      "\001(\t\022\021\n\tnamespace\030\002 \001(\t\"\300\001\n&EndUserAuthen"
      "ticationPolicySpecBinding\022<\n\010services\030\001 "
      "\003(\0132*.istio.mixer.v1.config.client.Istio"
      "Service\022X\n\010policies\030\002 \003(\0132F.istio.mixer."
      "v1.config.client.EndUserAuthenticationPo"
      "licySpecReferenceB\014\310\341\036\000\250\342\036\000\360\341\036\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 799);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/v1/config/client/auth.proto", &protobuf_RegisterTypes);
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fservice_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto
namespace istio {
namespace mixer {
namespace v1 {
namespace config {
namespace client {

// ===================================================================

void JWT_Location::InitAsDefaultInstance() {
  ::istio::mixer::v1::config::client::_JWT_Location_default_instance_.header_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::mixer::v1::config::client::_JWT_Location_default_instance_.query_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JWT_Location::kHeaderFieldNumber;
const int JWT_Location::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JWT_Location::JWT_Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWT_Location();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.JWT.Location)
}
JWT_Location::JWT_Location(const JWT_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_scheme();
  switch (from.scheme_case()) {
    case kHeader: {
      set_header(from.header());
      break;
    }
    case kQuery: {
      set_query(from.query());
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.JWT.Location)
}

void JWT_Location::SharedCtor() {
  clear_has_scheme();
  _cached_size_ = 0;
}

JWT_Location::~JWT_Location() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.JWT.Location)
  SharedDtor();
}

void JWT_Location::SharedDtor() {
  if (has_scheme()) {
    clear_scheme();
  }
}

void JWT_Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JWT_Location::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JWT_Location& JWT_Location::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWT_Location();
  return *internal_default_instance();
}

JWT_Location* JWT_Location::New(::google::protobuf::Arena* arena) const {
  JWT_Location* n = new JWT_Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JWT_Location::clear_scheme() {
// @@protoc_insertion_point(one_of_clear_start:istio.mixer.v1.config.client.JWT.Location)
  switch (scheme_case()) {
    case kHeader: {
      scheme_.header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kQuery: {
      scheme_.query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCHEME_NOT_SET;
}


void JWT_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.JWT.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_scheme();
  _internal_metadata_.Clear();
}

bool JWT_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.JWT.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->header().data(), static_cast<int>(this->header().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.JWT.Location.header"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string query = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.JWT.Location.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.JWT.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.JWT.Location)
  return false;
#undef DO_
}

void JWT_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.JWT.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.Location.header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->header(), output);
  }

  // string query = 2;
  if (has_query()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.Location.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.JWT.Location)
}

::google::protobuf::uint8* JWT_Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.JWT.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.Location.header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->header(), target);
  }

  // string query = 2;
  if (has_query()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.Location.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.JWT.Location)
  return target;
}

size_t JWT_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.JWT.Location)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (scheme_case()) {
    // string header = 1;
    case kHeader: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->header());
      break;
    }
    // string query = 2;
    case kQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query());
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JWT_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.JWT.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const JWT_Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JWT_Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.JWT.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.JWT.Location)
    MergeFrom(*source);
  }
}

void JWT_Location::MergeFrom(const JWT_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.JWT.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.scheme_case()) {
    case kHeader: {
      set_header(from.header());
      break;
    }
    case kQuery: {
      set_query(from.query());
      break;
    }
    case SCHEME_NOT_SET: {
      break;
    }
  }
}

void JWT_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.JWT.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JWT_Location::CopyFrom(const JWT_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.JWT.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JWT_Location::IsInitialized() const {
  return true;
}

void JWT_Location::Swap(JWT_Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JWT_Location::InternalSwap(JWT_Location* other) {
  using std::swap;
  swap(scheme_, other->scheme_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JWT_Location::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JWT::InitAsDefaultInstance() {
  ::istio::mixer::v1::config::client::_JWT_default_instance_._instance.get_mutable()->public_key_cache_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void JWT::clear_public_key_cache_duration() {
  if (GetArenaNoVirtual() == NULL && public_key_cache_duration_ != NULL) {
    delete public_key_cache_duration_;
  }
  public_key_cache_duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JWT::kIssuerFieldNumber;
const int JWT::kAudiencesFieldNumber;
const int JWT::kJwksUriFieldNumber;
const int JWT::kForwardJwtFieldNumber;
const int JWT::kPublicKeyCacheDurationFieldNumber;
const int JWT::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JWT::JWT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWT();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.JWT)
}
JWT::JWT(const JWT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      audiences_(from.audiences_),
      locations_(from.locations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.issuer().size() > 0) {
    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  jwks_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jwks_uri().size() > 0) {
    jwks_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jwks_uri_);
  }
  if (from.has_public_key_cache_duration()) {
    public_key_cache_duration_ = new ::google::protobuf::Duration(*from.public_key_cache_duration_);
  } else {
    public_key_cache_duration_ = NULL;
  }
  forward_jwt_ = from.forward_jwt_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.JWT)
}

void JWT::SharedCtor() {
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&public_key_cache_duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_jwt_) -
      reinterpret_cast<char*>(&public_key_cache_duration_)) + sizeof(forward_jwt_));
  _cached_size_ = 0;
}

JWT::~JWT() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.JWT)
  SharedDtor();
}

void JWT::SharedDtor() {
  issuer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete public_key_cache_duration_;
}

void JWT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JWT::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JWT& JWT::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsJWT();
  return *internal_default_instance();
}

JWT* JWT::New(::google::protobuf::Arena* arena) const {
  JWT* n = new JWT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JWT::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.JWT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audiences_.Clear();
  locations_.Clear();
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && public_key_cache_duration_ != NULL) {
    delete public_key_cache_duration_;
  }
  public_key_cache_duration_ = NULL;
  forward_jwt_ = false;
  _internal_metadata_.Clear();
}

bool JWT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.JWT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string issuer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issuer().data(), static_cast<int>(this->issuer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.JWT.issuer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string audiences = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_audiences()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audiences(this->audiences_size() - 1).data(),
            static_cast<int>(this->audiences(this->audiences_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.JWT.audiences"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwks_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jwks_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.JWT.jwks_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool forward_jwt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_jwt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration public_key_cache_duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_public_key_cache_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mixer.v1.config.client.JWT.Location locations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.JWT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.JWT)
  return false;
#undef DO_
}

void JWT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.JWT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.issuer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->issuer(), output);
  }

  // repeated string audiences = 2;
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), static_cast<int>(this->audiences(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.audiences");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->audiences(i), output);
  }

  // string jwks_uri = 3;
  if (this->jwks_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.jwks_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jwks_uri(), output);
  }

  // bool forward_jwt = 4;
  if (this->forward_jwt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->forward_jwt(), output);
  }

  // .google.protobuf.Duration public_key_cache_duration = 5;
  if (this->has_public_key_cache_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->public_key_cache_duration_, output);
  }

  // repeated .istio.mixer.v1.config.client.JWT.Location locations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->locations(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.JWT)
}

::google::protobuf::uint8* JWT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.JWT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.issuer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->issuer(), target);
  }

  // repeated string audiences = 2;
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), static_cast<int>(this->audiences(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.audiences");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->audiences(i), target);
  }

  // string jwks_uri = 3;
  if (this->jwks_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.JWT.jwks_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->jwks_uri(), target);
  }

  // bool forward_jwt = 4;
  if (this->forward_jwt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->forward_jwt(), target);
  }

  // .google.protobuf.Duration public_key_cache_duration = 5;
  if (this->has_public_key_cache_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->public_key_cache_duration_, deterministic, target);
  }

  // repeated .istio.mixer.v1.config.client.JWT.Location locations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->locations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.JWT)
  return target;
}

size_t JWT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.JWT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string audiences = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->audiences_size());
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->audiences(i));
  }

  // repeated .istio.mixer.v1.config.client.JWT.Location locations = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issuer());
  }

  // string jwks_uri = 3;
  if (this->jwks_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jwks_uri());
  }

  // .google.protobuf.Duration public_key_cache_duration = 5;
  if (this->has_public_key_cache_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->public_key_cache_duration_);
  }

  // bool forward_jwt = 4;
  if (this->forward_jwt() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JWT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.JWT)
  GOOGLE_DCHECK_NE(&from, this);
  const JWT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JWT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.JWT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.JWT)
    MergeFrom(*source);
  }
}

void JWT::MergeFrom(const JWT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.JWT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  audiences_.MergeFrom(from.audiences_);
  locations_.MergeFrom(from.locations_);
  if (from.issuer().size() > 0) {

    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  if (from.jwks_uri().size() > 0) {

    jwks_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jwks_uri_);
  }
  if (from.has_public_key_cache_duration()) {
    mutable_public_key_cache_duration()->::google::protobuf::Duration::MergeFrom(from.public_key_cache_duration());
  }
  if (from.forward_jwt() != 0) {
    set_forward_jwt(from.forward_jwt());
  }
}

void JWT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.JWT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JWT::CopyFrom(const JWT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.JWT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JWT::IsInitialized() const {
  return true;
}

void JWT::Swap(JWT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JWT::InternalSwap(JWT* other) {
  using std::swap;
  audiences_.InternalSwap(&other->audiences_);
  locations_.InternalSwap(&other->locations_);
  issuer_.Swap(&other->issuer_);
  jwks_uri_.Swap(&other->jwks_uri_);
  swap(public_key_cache_duration_, other->public_key_cache_duration_);
  swap(forward_jwt_, other->forward_jwt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JWT::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndUserAuthenticationPolicySpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndUserAuthenticationPolicySpec::kJwtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndUserAuthenticationPolicySpec::EndUserAuthenticationPolicySpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
}
EndUserAuthenticationPolicySpec::EndUserAuthenticationPolicySpec(const EndUserAuthenticationPolicySpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jwts_(from.jwts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
}

void EndUserAuthenticationPolicySpec::SharedCtor() {
  _cached_size_ = 0;
}

EndUserAuthenticationPolicySpec::~EndUserAuthenticationPolicySpec() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  SharedDtor();
}

void EndUserAuthenticationPolicySpec::SharedDtor() {
}

void EndUserAuthenticationPolicySpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndUserAuthenticationPolicySpec::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndUserAuthenticationPolicySpec& EndUserAuthenticationPolicySpec::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpec();
  return *internal_default_instance();
}

EndUserAuthenticationPolicySpec* EndUserAuthenticationPolicySpec::New(::google::protobuf::Arena* arena) const {
  EndUserAuthenticationPolicySpec* n = new EndUserAuthenticationPolicySpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndUserAuthenticationPolicySpec::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jwts_.Clear();
  _internal_metadata_.Clear();
}

bool EndUserAuthenticationPolicySpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mixer.v1.config.client.JWT jwts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_jwts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  return false;
#undef DO_
}

void EndUserAuthenticationPolicySpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.JWT jwts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jwts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->jwts(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
}

::google::protobuf::uint8* EndUserAuthenticationPolicySpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.JWT jwts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jwts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->jwts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  return target;
}

size_t EndUserAuthenticationPolicySpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mixer.v1.config.client.JWT jwts = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->jwts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jwts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndUserAuthenticationPolicySpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  GOOGLE_DCHECK_NE(&from, this);
  const EndUserAuthenticationPolicySpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndUserAuthenticationPolicySpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
    MergeFrom(*source);
  }
}

void EndUserAuthenticationPolicySpec::MergeFrom(const EndUserAuthenticationPolicySpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jwts_.MergeFrom(from.jwts_);
}

void EndUserAuthenticationPolicySpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndUserAuthenticationPolicySpec::CopyFrom(const EndUserAuthenticationPolicySpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndUserAuthenticationPolicySpec::IsInitialized() const {
  return true;
}

void EndUserAuthenticationPolicySpec::Swap(EndUserAuthenticationPolicySpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndUserAuthenticationPolicySpec::InternalSwap(EndUserAuthenticationPolicySpec* other) {
  using std::swap;
  jwts_.InternalSwap(&other->jwts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndUserAuthenticationPolicySpec::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndUserAuthenticationPolicySpecReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndUserAuthenticationPolicySpecReference::kNameFieldNumber;
const int EndUserAuthenticationPolicySpecReference::kNamespaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndUserAuthenticationPolicySpecReference::EndUserAuthenticationPolicySpecReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
}
EndUserAuthenticationPolicySpecReference::EndUserAuthenticationPolicySpecReference(const EndUserAuthenticationPolicySpecReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_().size() > 0) {
    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
}

void EndUserAuthenticationPolicySpecReference::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EndUserAuthenticationPolicySpecReference::~EndUserAuthenticationPolicySpecReference() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  SharedDtor();
}

void EndUserAuthenticationPolicySpecReference::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EndUserAuthenticationPolicySpecReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndUserAuthenticationPolicySpecReference::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndUserAuthenticationPolicySpecReference& EndUserAuthenticationPolicySpecReference::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecReference();
  return *internal_default_instance();
}

EndUserAuthenticationPolicySpecReference* EndUserAuthenticationPolicySpecReference::New(::google::protobuf::Arena* arena) const {
  EndUserAuthenticationPolicySpecReference* n = new EndUserAuthenticationPolicySpecReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndUserAuthenticationPolicySpecReference::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EndUserAuthenticationPolicySpecReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string namespace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_().data(), static_cast<int>(this->namespace_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  return false;
#undef DO_
}

void EndUserAuthenticationPolicySpecReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->namespace_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
}

::google::protobuf::uint8* EndUserAuthenticationPolicySpecReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference.namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->namespace_(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  return target;
}

size_t EndUserAuthenticationPolicySpecReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string namespace = 2;
  if (this->namespace_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndUserAuthenticationPolicySpecReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  GOOGLE_DCHECK_NE(&from, this);
  const EndUserAuthenticationPolicySpecReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndUserAuthenticationPolicySpecReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
    MergeFrom(*source);
  }
}

void EndUserAuthenticationPolicySpecReference::MergeFrom(const EndUserAuthenticationPolicySpecReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.namespace_().size() > 0) {

    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
}

void EndUserAuthenticationPolicySpecReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndUserAuthenticationPolicySpecReference::CopyFrom(const EndUserAuthenticationPolicySpecReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndUserAuthenticationPolicySpecReference::IsInitialized() const {
  return true;
}

void EndUserAuthenticationPolicySpecReference::Swap(EndUserAuthenticationPolicySpecReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndUserAuthenticationPolicySpecReference::InternalSwap(EndUserAuthenticationPolicySpecReference* other) {
  using std::swap;
  name_.Swap(&other->name_);
  namespace__.Swap(&other->namespace__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndUserAuthenticationPolicySpecReference::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndUserAuthenticationPolicySpecBinding::InitAsDefaultInstance() {
}
void EndUserAuthenticationPolicySpecBinding::clear_services() {
  services_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndUserAuthenticationPolicySpecBinding::kServicesFieldNumber;
const int EndUserAuthenticationPolicySpecBinding::kPoliciesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndUserAuthenticationPolicySpecBinding::EndUserAuthenticationPolicySpecBinding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecBinding();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
}
EndUserAuthenticationPolicySpecBinding::EndUserAuthenticationPolicySpecBinding(const EndUserAuthenticationPolicySpecBinding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      services_(from.services_),
      policies_(from.policies_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
}

void EndUserAuthenticationPolicySpecBinding::SharedCtor() {
  _cached_size_ = 0;
}

EndUserAuthenticationPolicySpecBinding::~EndUserAuthenticationPolicySpecBinding() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  SharedDtor();
}

void EndUserAuthenticationPolicySpecBinding::SharedDtor() {
}

void EndUserAuthenticationPolicySpecBinding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndUserAuthenticationPolicySpecBinding::descriptor() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndUserAuthenticationPolicySpecBinding& EndUserAuthenticationPolicySpecBinding::default_instance() {
  ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::InitDefaultsEndUserAuthenticationPolicySpecBinding();
  return *internal_default_instance();
}

EndUserAuthenticationPolicySpecBinding* EndUserAuthenticationPolicySpecBinding::New(::google::protobuf::Arena* arena) const {
  EndUserAuthenticationPolicySpecBinding* n = new EndUserAuthenticationPolicySpecBinding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndUserAuthenticationPolicySpecBinding::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  policies_.Clear();
  _internal_metadata_.Clear();
}

bool EndUserAuthenticationPolicySpecBinding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mixer.v1.config.client.IstioService services = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference policies = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_policies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  return false;
#undef DO_
}

void EndUserAuthenticationPolicySpecBinding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.IstioService services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->services(static_cast<int>(i)), output);
  }

  // repeated .istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference policies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->policies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->policies(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
}

::google::protobuf::uint8* EndUserAuthenticationPolicySpecBinding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.config.client.IstioService services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->services(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference policies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->policies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->policies(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  return target;
}

size_t EndUserAuthenticationPolicySpecBinding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mixer.v1.config.client.IstioService services = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  // repeated .istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecReference policies = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->policies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->policies(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndUserAuthenticationPolicySpecBinding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  GOOGLE_DCHECK_NE(&from, this);
  const EndUserAuthenticationPolicySpecBinding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndUserAuthenticationPolicySpecBinding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
    MergeFrom(*source);
  }
}

void EndUserAuthenticationPolicySpecBinding::MergeFrom(const EndUserAuthenticationPolicySpecBinding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
  policies_.MergeFrom(from.policies_);
}

void EndUserAuthenticationPolicySpecBinding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndUserAuthenticationPolicySpecBinding::CopyFrom(const EndUserAuthenticationPolicySpecBinding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.config.client.EndUserAuthenticationPolicySpecBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndUserAuthenticationPolicySpecBinding::IsInitialized() const {
  return true;
}

void EndUserAuthenticationPolicySpecBinding::Swap(EndUserAuthenticationPolicySpecBinding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndUserAuthenticationPolicySpecBinding::InternalSwap(EndUserAuthenticationPolicySpecBinding* other) {
  using std::swap;
  services_.InternalSwap(&other->services_);
  policies_.InternalSwap(&other->policies_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndUserAuthenticationPolicySpecBinding::GetMetadata() const {
  protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fconfig_2fclient_2fauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace client
}  // namespace config
}  // namespace v1
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)
