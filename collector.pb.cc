// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collector.proto

#include "collector.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace lightstep {
namespace collector {
class SpanContext_BaggageEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpanContext_BaggageEntry_DoNotUse>
      _instance;
} _SpanContext_BaggageEntry_DoNotUse_default_instance_;
class SpanContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpanContext>
      _instance;
} _SpanContext_default_instance_;
class KeyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValue>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::int64 int_value_;
  double double_value_;
  bool bool_value_;
  ::google::protobuf::internal::ArenaStringPtr json_value_;
} _KeyValue_default_instance_;
class LogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Log>
      _instance;
} _Log_default_instance_;
class ReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reference>
      _instance;
} _Reference_default_instance_;
class SpanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Span>
      _instance;
} _Span_default_instance_;
class ReporterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reporter>
      _instance;
} _Reporter_default_instance_;
class MetricsSampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetricsSample>
      _instance;
  ::google::protobuf::int64 int_value_;
  double double_value_;
} _MetricsSample_default_instance_;
class InternalMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InternalMetrics>
      _instance;
} _InternalMetrics_default_instance_;
class AuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Auth>
      _instance;
} _Auth_default_instance_;
class ReportRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportRequest>
      _instance;
} _ReportRequest_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
class ReportResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportResponse>
      _instance;
} _ReportResponse_default_instance_;
}  // namespace collector
}  // namespace lightstep
namespace protobuf_collector_2eproto {
void InitDefaultsSpanContext_BaggageEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::lightstep::collector::_SpanContext_BaggageEntry_DoNotUse_default_instance_;
    new (ptr) ::lightstep::collector::SpanContext_BaggageEntry_DoNotUse();
  }
  ::lightstep::collector::SpanContext_BaggageEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsSpanContext_BaggageEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSpanContext_BaggageEntry_DoNotUseImpl);
}

void InitDefaultsSpanContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_collector_2eproto::InitDefaultsSpanContext_BaggageEntry_DoNotUse();
  {
    void* ptr = &::lightstep::collector::_SpanContext_default_instance_;
    new (ptr) ::lightstep::collector::SpanContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::SpanContext::InitAsDefaultInstance();
}

void InitDefaultsSpanContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSpanContextImpl);
}

void InitDefaultsKeyValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::lightstep::collector::_KeyValue_default_instance_;
    new (ptr) ::lightstep::collector::KeyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::KeyValue::InitAsDefaultInstance();
}

void InitDefaultsKeyValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyValueImpl);
}

void InitDefaultsLogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_collector_2eproto::InitDefaultsKeyValue();
  {
    void* ptr = &::lightstep::collector::_Log_default_instance_;
    new (ptr) ::lightstep::collector::Log();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::Log::InitAsDefaultInstance();
}

void InitDefaultsLog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogImpl);
}

void InitDefaultsReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_collector_2eproto::InitDefaultsSpanContext();
  {
    void* ptr = &::lightstep::collector::_Reference_default_instance_;
    new (ptr) ::lightstep::collector::Reference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::Reference::InitAsDefaultInstance();
}

void InitDefaultsReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReferenceImpl);
}

void InitDefaultsSpanImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_collector_2eproto::InitDefaultsSpanContext();
  protobuf_collector_2eproto::InitDefaultsReference();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_collector_2eproto::InitDefaultsKeyValue();
  protobuf_collector_2eproto::InitDefaultsLog();
  {
    void* ptr = &::lightstep::collector::_Span_default_instance_;
    new (ptr) ::lightstep::collector::Span();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::Span::InitAsDefaultInstance();
}

void InitDefaultsSpan() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSpanImpl);
}

void InitDefaultsReporterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_collector_2eproto::InitDefaultsKeyValue();
  {
    void* ptr = &::lightstep::collector::_Reporter_default_instance_;
    new (ptr) ::lightstep::collector::Reporter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::Reporter::InitAsDefaultInstance();
}

void InitDefaultsReporter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReporterImpl);
}

void InitDefaultsMetricsSampleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::lightstep::collector::_MetricsSample_default_instance_;
    new (ptr) ::lightstep::collector::MetricsSample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::MetricsSample::InitAsDefaultInstance();
}

void InitDefaultsMetricsSample() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMetricsSampleImpl);
}

void InitDefaultsInternalMetricsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_collector_2eproto::InitDefaultsLog();
  protobuf_collector_2eproto::InitDefaultsMetricsSample();
  {
    void* ptr = &::lightstep::collector::_InternalMetrics_default_instance_;
    new (ptr) ::lightstep::collector::InternalMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::InternalMetrics::InitAsDefaultInstance();
}

void InitDefaultsInternalMetrics() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInternalMetricsImpl);
}

void InitDefaultsAuthImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::lightstep::collector::_Auth_default_instance_;
    new (ptr) ::lightstep::collector::Auth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::Auth::InitAsDefaultInstance();
}

void InitDefaultsAuth() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthImpl);
}

void InitDefaultsReportRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_collector_2eproto::InitDefaultsReporter();
  protobuf_collector_2eproto::InitDefaultsAuth();
  protobuf_collector_2eproto::InitDefaultsSpan();
  protobuf_collector_2eproto::InitDefaultsInternalMetrics();
  {
    void* ptr = &::lightstep::collector::_ReportRequest_default_instance_;
    new (ptr) ::lightstep::collector::ReportRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::ReportRequest::InitAsDefaultInstance();
}

void InitDefaultsReportRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReportRequestImpl);
}

void InitDefaultsCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::lightstep::collector::_Command_default_instance_;
    new (ptr) ::lightstep::collector::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::Command::InitAsDefaultInstance();
}

void InitDefaultsCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommandImpl);
}

void InitDefaultsReportResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_collector_2eproto::InitDefaultsCommand();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::lightstep::collector::_ReportResponse_default_instance_;
    new (ptr) ::lightstep::collector::ReportResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lightstep::collector::ReportResponse::InitAsDefaultInstance();
}

void InitDefaultsReportResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReportResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext_BaggageEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext_BaggageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext_BaggageEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext_BaggageEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext, trace_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext, span_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::SpanContext, baggage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::KeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::KeyValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::KeyValue, key_),
  offsetof(::lightstep::collector::KeyValueDefaultTypeInternal, string_value_),
  offsetof(::lightstep::collector::KeyValueDefaultTypeInternal, int_value_),
  offsetof(::lightstep::collector::KeyValueDefaultTypeInternal, double_value_),
  offsetof(::lightstep::collector::KeyValueDefaultTypeInternal, bool_value_),
  offsetof(::lightstep::collector::KeyValueDefaultTypeInternal, json_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::KeyValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Log, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Log, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Log, keyvalues_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Reference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Reference, relationship_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Reference, span_context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, span_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, operation_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, references_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, start_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, duration_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Span, logs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Reporter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Reporter, reporter_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Reporter, tags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::MetricsSample, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::MetricsSample, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::MetricsSample, name_),
  offsetof(::lightstep::collector::MetricsSampleDefaultTypeInternal, int_value_),
  offsetof(::lightstep::collector::MetricsSampleDefaultTypeInternal, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::MetricsSample, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::InternalMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::InternalMetrics, start_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::InternalMetrics, duration_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::InternalMetrics, logs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::InternalMetrics, counts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::InternalMetrics, gauges_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Auth, access_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportRequest, reporter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportRequest, auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportRequest, spans_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportRequest, timestamp_offset_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportRequest, internal_metrics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::Command, disable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportResponse, commands_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportResponse, receive_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportResponse, transmit_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lightstep::collector::ReportResponse, errors_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::lightstep::collector::SpanContext_BaggageEntry_DoNotUse)},
  { 9, -1, sizeof(::lightstep::collector::SpanContext)},
  { 17, -1, sizeof(::lightstep::collector::KeyValue)},
  { 29, -1, sizeof(::lightstep::collector::Log)},
  { 36, -1, sizeof(::lightstep::collector::Reference)},
  { 43, -1, sizeof(::lightstep::collector::Span)},
  { 55, -1, sizeof(::lightstep::collector::Reporter)},
  { 62, -1, sizeof(::lightstep::collector::MetricsSample)},
  { 71, -1, sizeof(::lightstep::collector::InternalMetrics)},
  { 81, -1, sizeof(::lightstep::collector::Auth)},
  { 87, -1, sizeof(::lightstep::collector::ReportRequest)},
  { 97, -1, sizeof(::lightstep::collector::Command)},
  { 103, -1, sizeof(::lightstep::collector::ReportResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_SpanContext_BaggageEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_SpanContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_KeyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_Log_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_Reference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_Span_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_Reporter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_MetricsSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_InternalMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_Auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_ReportRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lightstep::collector::_ReportResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "collector.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017collector.proto\022\023lightstep.collector\032\037"
      "google/protobuf/timestamp.proto\"\240\001\n\013Span"
      "Context\022\020\n\010trace_id\030\001 \001(\004\022\017\n\007span_id\030\002 \001"
      "(\004\022>\n\007baggage\030\003 \003(\0132-.lightstep.collecto"
      "r.SpanContext.BaggageEntry\032.\n\014BaggageEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\221\001\n\010K"
      "eyValue\022\013\n\003key\030\001 \001(\t\022\026\n\014string_value\030\002 \001"
      "(\tH\000\022\023\n\tint_value\030\003 \001(\003H\000\022\026\n\014double_valu"
      "e\030\004 \001(\001H\000\022\024\n\nbool_value\030\005 \001(\010H\000\022\024\n\njson_"
      "value\030\006 \001(\tH\000B\007\n\005value\"f\n\003Log\022-\n\ttimesta"
      "mp\030\001 \001(\0132\032.google.protobuf.Timestamp\0220\n\t"
      "keyvalues\030\002 \003(\0132\035.lightstep.collector.Ke"
      "yValue\"\266\001\n\tReference\022A\n\014relationship\030\001 \001"
      "(\0162+.lightstep.collector.Reference.Relat"
      "ionship\0226\n\014span_context\030\002 \001(\0132 .lightste"
      "p.collector.SpanContext\".\n\014Relationship\022"
      "\014\n\010CHILD_OF\020\000\022\020\n\014FOLLOWS_FROM\020\001\"\255\002\n\004Span"
      "\0226\n\014span_context\030\001 \001(\0132 .lightstep.colle"
      "ctor.SpanContext\022\026\n\016operation_name\030\002 \001(\t"
      "\0222\n\nreferences\030\003 \003(\0132\036.lightstep.collect"
      "or.Reference\0223\n\017start_timestamp\030\004 \001(\0132\032."
      "google.protobuf.Timestamp\022\027\n\017duration_mi"
      "cros\030\005 \001(\004\022+\n\004tags\030\006 \003(\0132\035.lightstep.col"
      "lector.KeyValue\022&\n\004logs\030\007 \003(\0132\030.lightste"
      "p.collector.Log\"L\n\010Reporter\022\023\n\013reporter_"
      "id\030\001 \001(\004\022+\n\004tags\030\004 \003(\0132\035.lightstep.colle"
      "ctor.KeyValue\"S\n\rMetricsSample\022\014\n\004name\030\001"
      " \001(\t\022\023\n\tint_value\030\002 \001(\003H\000\022\026\n\014double_valu"
      "e\030\003 \001(\001H\000B\007\n\005value\"\357\001\n\017InternalMetrics\0223"
      "\n\017start_timestamp\030\001 \001(\0132\032.google.protobu"
      "f.Timestamp\022\027\n\017duration_micros\030\002 \001(\004\022&\n\004"
      "logs\030\003 \003(\0132\030.lightstep.collector.Log\0222\n\006"
      "counts\030\004 \003(\0132\".lightstep.collector.Metri"
      "csSample\0222\n\006gauges\030\005 \003(\0132\".lightstep.col"
      "lector.MetricsSample\"\034\n\004Auth\022\024\n\014access_t"
      "oken\030\001 \001(\t\"\364\001\n\rReportRequest\022/\n\010reporter"
      "\030\001 \001(\0132\035.lightstep.collector.Reporter\022\'\n"
      "\004auth\030\002 \001(\0132\031.lightstep.collector.Auth\022("
      "\n\005spans\030\003 \003(\0132\031.lightstep.collector.Span"
      "\022\037\n\027timestamp_offset_micros\030\005 \001(\r\022>\n\020int"
      "ernal_metrics\030\006 \001(\0132$.lightstep.collecto"
      "r.InternalMetrics\"\032\n\007Command\022\017\n\007disable\030"
      "\001 \001(\010\"\277\001\n\016ReportResponse\022.\n\010commands\030\001 \003"
      "(\0132\034.lightstep.collector.Command\0225\n\021rece"
      "ive_timestamp\030\002 \001(\0132\032.google.protobuf.Ti"
      "mestamp\0226\n\022transmit_timestamp\030\003 \001(\0132\032.go"
      "ogle.protobuf.Timestamp\022\016\n\006errors\030\004 \003(\t2"
      "e\n\020CollectorService\022Q\n\006Report\022\".lightste"
      "p.collector.ReportRequest\032#.lightstep.co"
      "llector.ReportResponseB1\n\031com.lightstep."
      "tracer.grpcP\001Z\013collectorpb\242\002\004LSPBb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2041);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "collector.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_collector_2eproto
namespace lightstep {
namespace collector {
const ::google::protobuf::EnumDescriptor* Reference_Relationship_descriptor() {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_collector_2eproto::file_level_enum_descriptors[0];
}
bool Reference_Relationship_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Reference_Relationship Reference::CHILD_OF;
const Reference_Relationship Reference::FOLLOWS_FROM;
const Reference_Relationship Reference::Relationship_MIN;
const Reference_Relationship Reference::Relationship_MAX;
const int Reference::Relationship_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

SpanContext_BaggageEntry_DoNotUse::SpanContext_BaggageEntry_DoNotUse() {}
SpanContext_BaggageEntry_DoNotUse::SpanContext_BaggageEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SpanContext_BaggageEntry_DoNotUse::MergeFrom(const SpanContext_BaggageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SpanContext_BaggageEntry_DoNotUse::GetMetadata() const {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[0];
}
void SpanContext_BaggageEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SpanContext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpanContext::kTraceIdFieldNumber;
const int SpanContext::kSpanIdFieldNumber;
const int SpanContext::kBaggageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpanContext::SpanContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsSpanContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.SpanContext)
}
SpanContext::SpanContext(const SpanContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  baggage_.MergeFrom(from.baggage_);
  ::memcpy(&trace_id_, &from.trace_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&span_id_) -
    reinterpret_cast<char*>(&trace_id_)) + sizeof(span_id_));
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.SpanContext)
}

void SpanContext::SharedCtor() {
  ::memset(&trace_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&span_id_) -
      reinterpret_cast<char*>(&trace_id_)) + sizeof(span_id_));
  _cached_size_ = 0;
}

SpanContext::~SpanContext() {
  // @@protoc_insertion_point(destructor:lightstep.collector.SpanContext)
  SharedDtor();
}

void SpanContext::SharedDtor() {
}

void SpanContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpanContext::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpanContext& SpanContext::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsSpanContext();
  return *internal_default_instance();
}

SpanContext* SpanContext::New(::google::protobuf::Arena* arena) const {
  SpanContext* n = new SpanContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpanContext::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.SpanContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  baggage_.Clear();
  ::memset(&trace_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&span_id_) -
      reinterpret_cast<char*>(&trace_id_)) + sizeof(span_id_));
  _internal_metadata_.Clear();
}

bool SpanContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.SpanContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 trace_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &trace_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 span_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &span_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> baggage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          SpanContext_BaggageEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SpanContext_BaggageEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&baggage_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.SpanContext.BaggageEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.SpanContext.BaggageEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.SpanContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.SpanContext)
  return false;
#undef DO_
}

void SpanContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.SpanContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 trace_id = 1;
  if (this->trace_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->trace_id(), output);
  }

  // uint64 span_id = 2;
  if (this->span_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->span_id(), output);
  }

  // map<string, string> baggage = 3;
  if (!this->baggage().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.collector.SpanContext.BaggageEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.collector.SpanContext.BaggageEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->baggage().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->baggage().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage().begin();
          it != this->baggage().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SpanContext_BaggageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(baggage_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SpanContext_BaggageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage().begin();
          it != this->baggage().end(); ++it) {
        entry.reset(baggage_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.SpanContext)
}

::google::protobuf::uint8* SpanContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.SpanContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 trace_id = 1;
  if (this->trace_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->trace_id(), target);
  }

  // uint64 span_id = 2;
  if (this->span_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->span_id(), target);
  }

  // map<string, string> baggage = 3;
  if (!this->baggage().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.collector.SpanContext.BaggageEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.collector.SpanContext.BaggageEntry.value");
      }
    };

    if (deterministic &&
        this->baggage().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->baggage().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage().begin();
          it != this->baggage().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SpanContext_BaggageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(baggage_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SpanContext_BaggageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage().begin();
          it != this->baggage().end(); ++it) {
        entry.reset(baggage_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.SpanContext)
  return target;
}

size_t SpanContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.SpanContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> baggage = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->baggage_size());
  {
    ::google::protobuf::scoped_ptr<SpanContext_BaggageEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->baggage().begin();
        it != this->baggage().end(); ++it) {
      entry.reset(baggage_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 trace_id = 1;
  if (this->trace_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->trace_id());
  }

  // uint64 span_id = 2;
  if (this->span_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->span_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpanContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.SpanContext)
  GOOGLE_DCHECK_NE(&from, this);
  const SpanContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpanContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.SpanContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.SpanContext)
    MergeFrom(*source);
  }
}

void SpanContext::MergeFrom(const SpanContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.SpanContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  baggage_.MergeFrom(from.baggage_);
  if (from.trace_id() != 0) {
    set_trace_id(from.trace_id());
  }
  if (from.span_id() != 0) {
    set_span_id(from.span_id());
  }
}

void SpanContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.SpanContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpanContext::CopyFrom(const SpanContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.SpanContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpanContext::IsInitialized() const {
  return true;
}

void SpanContext::Swap(SpanContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpanContext::InternalSwap(SpanContext* other) {
  using std::swap;
  baggage_.Swap(&other->baggage_);
  swap(trace_id_, other->trace_id_);
  swap(span_id_, other->span_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpanContext::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValue::InitAsDefaultInstance() {
  ::lightstep::collector::_KeyValue_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::lightstep::collector::_KeyValue_default_instance_.int_value_ = GOOGLE_LONGLONG(0);
  ::lightstep::collector::_KeyValue_default_instance_.double_value_ = 0;
  ::lightstep::collector::_KeyValue_default_instance_.bool_value_ = false;
  ::lightstep::collector::_KeyValue_default_instance_.json_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue::kKeyFieldNumber;
const int KeyValue::kStringValueFieldNumber;
const int KeyValue::kIntValueFieldNumber;
const int KeyValue::kDoubleValueFieldNumber;
const int KeyValue::kBoolValueFieldNumber;
const int KeyValue::kJsonValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue::KeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsKeyValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.KeyValue)
}
KeyValue::KeyValue(const KeyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.KeyValue)
}

void KeyValue::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
  _cached_size_ = 0;
}

KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:lightstep.collector.KeyValue)
  SharedDtor();
}

void KeyValue::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void KeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValue& KeyValue::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsKeyValue();
  return *internal_default_instance();
}

KeyValue* KeyValue::New(::google::protobuf::Arena* arena) const {
  KeyValue* n = new KeyValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:lightstep.collector.KeyValue)
  switch (value_case()) {
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kJsonValue: {
      value_.json_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_value();
  _internal_metadata_.Clear();
}

bool KeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.KeyValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.KeyValue.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.KeyValue.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string json_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json_value().data(), static_cast<int>(this->json_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.KeyValue.json_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.KeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.KeyValue)
  return false;
#undef DO_
}

void KeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.KeyValue.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string string_value = 2;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.KeyValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->string_value(), output);
  }

  // int64 int_value = 3;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int_value(), output);
  }

  // double double_value = 4;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->double_value(), output);
  }

  // bool bool_value = 5;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bool_value(), output);
  }

  // string json_value = 6;
  if (has_json_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_value().data(), static_cast<int>(this->json_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.KeyValue.json_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->json_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.KeyValue)
}

::google::protobuf::uint8* KeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.KeyValue.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string string_value = 2;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.KeyValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->string_value(), target);
  }

  // int64 int_value = 3;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int_value(), target);
  }

  // double double_value = 4;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->double_value(), target);
  }

  // bool bool_value = 5;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bool_value(), target);
  }

  // string json_value = 6;
  if (has_json_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_value().data(), static_cast<int>(this->json_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.KeyValue.json_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->json_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.KeyValue)
  return target;
}

size_t KeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.KeyValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  switch (value_case()) {
    // string string_value = 2;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // int64 int_value = 3;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    // double double_value = 4;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // bool bool_value = 5;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // string json_value = 6;
    case kJsonValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->json_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.KeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.KeyValue)
    MergeFrom(*source);
  }
}

void KeyValue::MergeFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void KeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue::CopyFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue::IsInitialized() const {
  return true;
}

void KeyValue::Swap(KeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue::InternalSwap(KeyValue* other) {
  using std::swap;
  key_.Swap(&other->key_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValue::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Log::InitAsDefaultInstance() {
  ::lightstep::collector::_Log_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Log::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Log::kTimestampFieldNumber;
const int Log::kKeyvaluesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Log::Log()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsLog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.Log)
}
Log::Log(const Log& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keyvalues_(from.keyvalues_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.Log)
}

void Log::SharedCtor() {
  timestamp_ = NULL;
  _cached_size_ = 0;
}

Log::~Log() {
  // @@protoc_insertion_point(destructor:lightstep.collector.Log)
  SharedDtor();
}

void Log::SharedDtor() {
  if (this != internal_default_instance()) delete timestamp_;
}

void Log::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Log::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Log& Log::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsLog();
  return *internal_default_instance();
}

Log* Log::New(::google::protobuf::Arena* arena) const {
  Log* n = new Log;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Log::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.Log)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyvalues_.Clear();
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool Log::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.Log)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.KeyValue keyvalues = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_keyvalues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.Log)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.Log)
  return false;
#undef DO_
}

void Log::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.Log)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->timestamp_, output);
  }

  // repeated .lightstep.collector.KeyValue keyvalues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyvalues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->keyvalues(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.Log)
}

::google::protobuf::uint8* Log::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.Log)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->timestamp_, deterministic, target);
  }

  // repeated .lightstep.collector.KeyValue keyvalues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyvalues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->keyvalues(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.Log)
  return target;
}

size_t Log::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.Log)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .lightstep.collector.KeyValue keyvalues = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->keyvalues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keyvalues(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Log::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.Log)
  GOOGLE_DCHECK_NE(&from, this);
  const Log* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Log>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.Log)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.Log)
    MergeFrom(*source);
  }
}

void Log::MergeFrom(const Log& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.Log)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keyvalues_.MergeFrom(from.keyvalues_);
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
}

void Log::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.Log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Log::CopyFrom(const Log& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.Log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Log::IsInitialized() const {
  return true;
}

void Log::Swap(Log* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Log::InternalSwap(Log* other) {
  using std::swap;
  keyvalues_.InternalSwap(&other->keyvalues_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Log::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reference::InitAsDefaultInstance() {
  ::lightstep::collector::_Reference_default_instance_._instance.get_mutable()->span_context_ = const_cast< ::lightstep::collector::SpanContext*>(
      ::lightstep::collector::SpanContext::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reference::kRelationshipFieldNumber;
const int Reference::kSpanContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reference::Reference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.Reference)
}
Reference::Reference(const Reference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_span_context()) {
    span_context_ = new ::lightstep::collector::SpanContext(*from.span_context_);
  } else {
    span_context_ = NULL;
  }
  relationship_ = from.relationship_;
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.Reference)
}

void Reference::SharedCtor() {
  ::memset(&span_context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationship_) -
      reinterpret_cast<char*>(&span_context_)) + sizeof(relationship_));
  _cached_size_ = 0;
}

Reference::~Reference() {
  // @@protoc_insertion_point(destructor:lightstep.collector.Reference)
  SharedDtor();
}

void Reference::SharedDtor() {
  if (this != internal_default_instance()) delete span_context_;
}

void Reference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reference::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reference& Reference::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsReference();
  return *internal_default_instance();
}

Reference* Reference::New(::google::protobuf::Arena* arena) const {
  Reference* n = new Reference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reference::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && span_context_ != NULL) {
    delete span_context_;
  }
  span_context_ = NULL;
  relationship_ = 0;
  _internal_metadata_.Clear();
}

bool Reference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.Reference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightstep.collector.Reference.Relationship relationship = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_relationship(static_cast< ::lightstep::collector::Reference_Relationship >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lightstep.collector.SpanContext span_context = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_span_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.Reference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.Reference)
  return false;
#undef DO_
}

void Reference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightstep.collector.Reference.Relationship relationship = 1;
  if (this->relationship() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->relationship(), output);
  }

  // .lightstep.collector.SpanContext span_context = 2;
  if (this->has_span_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->span_context_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.Reference)
}

::google::protobuf::uint8* Reference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightstep.collector.Reference.Relationship relationship = 1;
  if (this->relationship() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->relationship(), target);
  }

  // .lightstep.collector.SpanContext span_context = 2;
  if (this->has_span_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->span_context_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.Reference)
  return target;
}

size_t Reference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.Reference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .lightstep.collector.SpanContext span_context = 2;
  if (this->has_span_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->span_context_);
  }

  // .lightstep.collector.Reference.Relationship relationship = 1;
  if (this->relationship() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->relationship());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  const Reference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.Reference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.Reference)
    MergeFrom(*source);
  }
}

void Reference::MergeFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_span_context()) {
    mutable_span_context()->::lightstep::collector::SpanContext::MergeFrom(from.span_context());
  }
  if (from.relationship() != 0) {
    set_relationship(from.relationship());
  }
}

void Reference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reference::CopyFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reference::IsInitialized() const {
  return true;
}

void Reference::Swap(Reference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reference::InternalSwap(Reference* other) {
  using std::swap;
  swap(span_context_, other->span_context_);
  swap(relationship_, other->relationship_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reference::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Span::InitAsDefaultInstance() {
  ::lightstep::collector::_Span_default_instance_._instance.get_mutable()->span_context_ = const_cast< ::lightstep::collector::SpanContext*>(
      ::lightstep::collector::SpanContext::internal_default_instance());
  ::lightstep::collector::_Span_default_instance_._instance.get_mutable()->start_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Span::clear_start_timestamp() {
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Span::kSpanContextFieldNumber;
const int Span::kOperationNameFieldNumber;
const int Span::kReferencesFieldNumber;
const int Span::kStartTimestampFieldNumber;
const int Span::kDurationMicrosFieldNumber;
const int Span::kTagsFieldNumber;
const int Span::kLogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Span::Span()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsSpan();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.Span)
}
Span::Span(const Span& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      references_(from.references_),
      tags_(from.tags_),
      logs_(from.logs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_name().size() > 0) {
    operation_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_name_);
  }
  if (from.has_span_context()) {
    span_context_ = new ::lightstep::collector::SpanContext(*from.span_context_);
  } else {
    span_context_ = NULL;
  }
  if (from.has_start_timestamp()) {
    start_timestamp_ = new ::google::protobuf::Timestamp(*from.start_timestamp_);
  } else {
    start_timestamp_ = NULL;
  }
  duration_micros_ = from.duration_micros_;
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.Span)
}

void Span::SharedCtor() {
  operation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&span_context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_micros_) -
      reinterpret_cast<char*>(&span_context_)) + sizeof(duration_micros_));
  _cached_size_ = 0;
}

Span::~Span() {
  // @@protoc_insertion_point(destructor:lightstep.collector.Span)
  SharedDtor();
}

void Span::SharedDtor() {
  operation_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete span_context_;
  if (this != internal_default_instance()) delete start_timestamp_;
}

void Span::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Span::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Span& Span::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsSpan();
  return *internal_default_instance();
}

Span* Span::New(::google::protobuf::Arena* arena) const {
  Span* n = new Span;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Span::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.Span)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  references_.Clear();
  tags_.Clear();
  logs_.Clear();
  operation_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && span_context_ != NULL) {
    delete span_context_;
  }
  span_context_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
  duration_micros_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Span::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.Span)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightstep.collector.SpanContext span_context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_span_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_name().data(), static_cast<int>(this->operation_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.Span.operation_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.Reference references = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_references()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration_micros = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.KeyValue tags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.Log logs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_logs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.Span)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.Span)
  return false;
#undef DO_
}

void Span::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.Span)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightstep.collector.SpanContext span_context = 1;
  if (this->has_span_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->span_context_, output);
  }

  // string operation_name = 2;
  if (this->operation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_name().data(), static_cast<int>(this->operation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.Span.operation_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->operation_name(), output);
  }

  // repeated .lightstep.collector.Reference references = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->references_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->references(static_cast<int>(i)), output);
  }

  // .google.protobuf.Timestamp start_timestamp = 4;
  if (this->has_start_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->start_timestamp_, output);
  }

  // uint64 duration_micros = 5;
  if (this->duration_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->duration_micros(), output);
  }

  // repeated .lightstep.collector.KeyValue tags = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->tags(static_cast<int>(i)), output);
  }

  // repeated .lightstep.collector.Log logs = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->logs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.Span)
}

::google::protobuf::uint8* Span::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.Span)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightstep.collector.SpanContext span_context = 1;
  if (this->has_span_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->span_context_, deterministic, target);
  }

  // string operation_name = 2;
  if (this->operation_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_name().data(), static_cast<int>(this->operation_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.Span.operation_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->operation_name(), target);
  }

  // repeated .lightstep.collector.Reference references = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->references_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->references(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp start_timestamp = 4;
  if (this->has_start_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->start_timestamp_, deterministic, target);
  }

  // uint64 duration_micros = 5;
  if (this->duration_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->duration_micros(), target);
  }

  // repeated .lightstep.collector.KeyValue tags = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->tags(static_cast<int>(i)), deterministic, target);
  }

  // repeated .lightstep.collector.Log logs = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->logs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.Span)
  return target;
}

size_t Span::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.Span)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .lightstep.collector.Reference references = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->references_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->references(static_cast<int>(i)));
    }
  }

  // repeated .lightstep.collector.KeyValue tags = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  // repeated .lightstep.collector.Log logs = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->logs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logs(static_cast<int>(i)));
    }
  }

  // string operation_name = 2;
  if (this->operation_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_name());
  }

  // .lightstep.collector.SpanContext span_context = 1;
  if (this->has_span_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->span_context_);
  }

  // .google.protobuf.Timestamp start_timestamp = 4;
  if (this->has_start_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_timestamp_);
  }

  // uint64 duration_micros = 5;
  if (this->duration_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration_micros());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Span::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.Span)
  GOOGLE_DCHECK_NE(&from, this);
  const Span* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Span>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.Span)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.Span)
    MergeFrom(*source);
  }
}

void Span::MergeFrom(const Span& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.Span)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  references_.MergeFrom(from.references_);
  tags_.MergeFrom(from.tags_);
  logs_.MergeFrom(from.logs_);
  if (from.operation_name().size() > 0) {

    operation_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_name_);
  }
  if (from.has_span_context()) {
    mutable_span_context()->::lightstep::collector::SpanContext::MergeFrom(from.span_context());
  }
  if (from.has_start_timestamp()) {
    mutable_start_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.start_timestamp());
  }
  if (from.duration_micros() != 0) {
    set_duration_micros(from.duration_micros());
  }
}

void Span::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.Span)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Span::CopyFrom(const Span& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.Span)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Span::IsInitialized() const {
  return true;
}

void Span::Swap(Span* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Span::InternalSwap(Span* other) {
  using std::swap;
  references_.InternalSwap(&other->references_);
  tags_.InternalSwap(&other->tags_);
  logs_.InternalSwap(&other->logs_);
  operation_name_.Swap(&other->operation_name_);
  swap(span_context_, other->span_context_);
  swap(start_timestamp_, other->start_timestamp_);
  swap(duration_micros_, other->duration_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Span::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reporter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reporter::kReporterIdFieldNumber;
const int Reporter::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reporter::Reporter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsReporter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.Reporter)
}
Reporter::Reporter(const Reporter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tags_(from.tags_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reporter_id_ = from.reporter_id_;
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.Reporter)
}

void Reporter::SharedCtor() {
  reporter_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Reporter::~Reporter() {
  // @@protoc_insertion_point(destructor:lightstep.collector.Reporter)
  SharedDtor();
}

void Reporter::SharedDtor() {
}

void Reporter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reporter::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reporter& Reporter::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsReporter();
  return *internal_default_instance();
}

Reporter* Reporter::New(::google::protobuf::Arena* arena) const {
  Reporter* n = new Reporter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reporter::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.Reporter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  reporter_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Reporter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.Reporter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 reporter_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &reporter_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.KeyValue tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.Reporter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.Reporter)
  return false;
#undef DO_
}

void Reporter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.Reporter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 reporter_id = 1;
  if (this->reporter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->reporter_id(), output);
  }

  // repeated .lightstep.collector.KeyValue tags = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->tags(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.Reporter)
}

::google::protobuf::uint8* Reporter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.Reporter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 reporter_id = 1;
  if (this->reporter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->reporter_id(), target);
  }

  // repeated .lightstep.collector.KeyValue tags = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->tags(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.Reporter)
  return target;
}

size_t Reporter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.Reporter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .lightstep.collector.KeyValue tags = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  // uint64 reporter_id = 1;
  if (this->reporter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->reporter_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reporter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.Reporter)
  GOOGLE_DCHECK_NE(&from, this);
  const Reporter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reporter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.Reporter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.Reporter)
    MergeFrom(*source);
  }
}

void Reporter::MergeFrom(const Reporter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.Reporter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.reporter_id() != 0) {
    set_reporter_id(from.reporter_id());
  }
}

void Reporter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.Reporter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reporter::CopyFrom(const Reporter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.Reporter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reporter::IsInitialized() const {
  return true;
}

void Reporter::Swap(Reporter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reporter::InternalSwap(Reporter* other) {
  using std::swap;
  tags_.InternalSwap(&other->tags_);
  swap(reporter_id_, other->reporter_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reporter::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MetricsSample::InitAsDefaultInstance() {
  ::lightstep::collector::_MetricsSample_default_instance_.int_value_ = GOOGLE_LONGLONG(0);
  ::lightstep::collector::_MetricsSample_default_instance_.double_value_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricsSample::kNameFieldNumber;
const int MetricsSample::kIntValueFieldNumber;
const int MetricsSample::kDoubleValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricsSample::MetricsSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsMetricsSample();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.MetricsSample)
}
MetricsSample::MetricsSample(const MetricsSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.MetricsSample)
}

void MetricsSample::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
  _cached_size_ = 0;
}

MetricsSample::~MetricsSample() {
  // @@protoc_insertion_point(destructor:lightstep.collector.MetricsSample)
  SharedDtor();
}

void MetricsSample::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void MetricsSample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetricsSample::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetricsSample& MetricsSample::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsMetricsSample();
  return *internal_default_instance();
}

MetricsSample* MetricsSample::New(::google::protobuf::Arena* arena) const {
  MetricsSample* n = new MetricsSample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetricsSample::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:lightstep.collector.MetricsSample)
  switch (value_case()) {
    case kIntValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void MetricsSample::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.MetricsSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_value();
  _internal_metadata_.Clear();
}

bool MetricsSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.MetricsSample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.MetricsSample.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.MetricsSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.MetricsSample)
  return false;
#undef DO_
}

void MetricsSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.MetricsSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.MetricsSample.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int64 int_value = 2;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int_value(), output);
  }

  // double double_value = 3;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.MetricsSample)
}

::google::protobuf::uint8* MetricsSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.MetricsSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.MetricsSample.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int64 int_value = 2;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int_value(), target);
  }

  // double double_value = 3;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.MetricsSample)
  return target;
}

size_t MetricsSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.MetricsSample)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (value_case()) {
    // int64 int_value = 2;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    // double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetricsSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.MetricsSample)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricsSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricsSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.MetricsSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.MetricsSample)
    MergeFrom(*source);
  }
}

void MetricsSample::MergeFrom(const MetricsSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.MetricsSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.value_case()) {
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void MetricsSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.MetricsSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricsSample::CopyFrom(const MetricsSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.MetricsSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricsSample::IsInitialized() const {
  return true;
}

void MetricsSample::Swap(MetricsSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricsSample::InternalSwap(MetricsSample* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetricsSample::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InternalMetrics::InitAsDefaultInstance() {
  ::lightstep::collector::_InternalMetrics_default_instance_._instance.get_mutable()->start_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void InternalMetrics::clear_start_timestamp() {
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InternalMetrics::kStartTimestampFieldNumber;
const int InternalMetrics::kDurationMicrosFieldNumber;
const int InternalMetrics::kLogsFieldNumber;
const int InternalMetrics::kCountsFieldNumber;
const int InternalMetrics::kGaugesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InternalMetrics::InternalMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsInternalMetrics();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.InternalMetrics)
}
InternalMetrics::InternalMetrics(const InternalMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      logs_(from.logs_),
      counts_(from.counts_),
      gauges_(from.gauges_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_timestamp()) {
    start_timestamp_ = new ::google::protobuf::Timestamp(*from.start_timestamp_);
  } else {
    start_timestamp_ = NULL;
  }
  duration_micros_ = from.duration_micros_;
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.InternalMetrics)
}

void InternalMetrics::SharedCtor() {
  ::memset(&start_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_micros_) -
      reinterpret_cast<char*>(&start_timestamp_)) + sizeof(duration_micros_));
  _cached_size_ = 0;
}

InternalMetrics::~InternalMetrics() {
  // @@protoc_insertion_point(destructor:lightstep.collector.InternalMetrics)
  SharedDtor();
}

void InternalMetrics::SharedDtor() {
  if (this != internal_default_instance()) delete start_timestamp_;
}

void InternalMetrics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InternalMetrics::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InternalMetrics& InternalMetrics::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsInternalMetrics();
  return *internal_default_instance();
}

InternalMetrics* InternalMetrics::New(::google::protobuf::Arena* arena) const {
  InternalMetrics* n = new InternalMetrics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InternalMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.InternalMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  counts_.Clear();
  gauges_.Clear();
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
  duration_micros_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool InternalMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.InternalMetrics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration_micros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.Log logs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_logs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.MetricsSample counts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_counts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.MetricsSample gauges = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_gauges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.InternalMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.InternalMetrics)
  return false;
#undef DO_
}

void InternalMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.InternalMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_timestamp = 1;
  if (this->has_start_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_timestamp_, output);
  }

  // uint64 duration_micros = 2;
  if (this->duration_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->duration_micros(), output);
  }

  // repeated .lightstep.collector.Log logs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->logs(static_cast<int>(i)), output);
  }

  // repeated .lightstep.collector.MetricsSample counts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->counts(static_cast<int>(i)), output);
  }

  // repeated .lightstep.collector.MetricsSample gauges = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gauges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->gauges(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.InternalMetrics)
}

::google::protobuf::uint8* InternalMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.InternalMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_timestamp = 1;
  if (this->has_start_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_timestamp_, deterministic, target);
  }

  // uint64 duration_micros = 2;
  if (this->duration_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->duration_micros(), target);
  }

  // repeated .lightstep.collector.Log logs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->logs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .lightstep.collector.MetricsSample counts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->counts(static_cast<int>(i)), deterministic, target);
  }

  // repeated .lightstep.collector.MetricsSample gauges = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gauges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->gauges(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.InternalMetrics)
  return target;
}

size_t InternalMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.InternalMetrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .lightstep.collector.Log logs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->logs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logs(static_cast<int>(i)));
    }
  }

  // repeated .lightstep.collector.MetricsSample counts = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->counts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->counts(static_cast<int>(i)));
    }
  }

  // repeated .lightstep.collector.MetricsSample gauges = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->gauges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gauges(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp start_timestamp = 1;
  if (this->has_start_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_timestamp_);
  }

  // uint64 duration_micros = 2;
  if (this->duration_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration_micros());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InternalMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.InternalMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const InternalMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InternalMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.InternalMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.InternalMetrics)
    MergeFrom(*source);
  }
}

void InternalMetrics::MergeFrom(const InternalMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.InternalMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  counts_.MergeFrom(from.counts_);
  gauges_.MergeFrom(from.gauges_);
  if (from.has_start_timestamp()) {
    mutable_start_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.start_timestamp());
  }
  if (from.duration_micros() != 0) {
    set_duration_micros(from.duration_micros());
  }
}

void InternalMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.InternalMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalMetrics::CopyFrom(const InternalMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.InternalMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalMetrics::IsInitialized() const {
  return true;
}

void InternalMetrics::Swap(InternalMetrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InternalMetrics::InternalSwap(InternalMetrics* other) {
  using std::swap;
  logs_.InternalSwap(&other->logs_);
  counts_.InternalSwap(&other->counts_);
  gauges_.InternalSwap(&other->gauges_);
  swap(start_timestamp_, other->start_timestamp_);
  swap(duration_micros_, other->duration_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InternalMetrics::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Auth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Auth::kAccessTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Auth::Auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsAuth();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.Auth)
}
Auth::Auth(const Auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_token().size() > 0) {
    access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
  }
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.Auth)
}

void Auth::SharedCtor() {
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Auth::~Auth() {
  // @@protoc_insertion_point(destructor:lightstep.collector.Auth)
  SharedDtor();
}

void Auth::SharedDtor() {
  access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Auth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Auth::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Auth& Auth::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsAuth();
  return *internal_default_instance();
}

Auth* Auth::New(::google::protobuf::Arena* arena) const {
  Auth* n = new Auth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Auth::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.Auth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string access_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_token().data(), static_cast<int>(this->access_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.Auth.access_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.Auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.Auth)
  return false;
#undef DO_
}

void Auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.Auth.access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.Auth)
}

::google::protobuf::uint8* Auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.Auth.access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.Auth)
  return target;
}

size_t Auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.Auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string access_token = 1;
  if (this->access_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  const Auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.Auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.Auth)
    MergeFrom(*source);
  }
}

void Auth::MergeFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.access_token().size() > 0) {

    access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
  }
}

void Auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Auth::CopyFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Auth::IsInitialized() const {
  return true;
}

void Auth::Swap(Auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Auth::InternalSwap(Auth* other) {
  using std::swap;
  access_token_.Swap(&other->access_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Auth::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportRequest::InitAsDefaultInstance() {
  ::lightstep::collector::_ReportRequest_default_instance_._instance.get_mutable()->reporter_ = const_cast< ::lightstep::collector::Reporter*>(
      ::lightstep::collector::Reporter::internal_default_instance());
  ::lightstep::collector::_ReportRequest_default_instance_._instance.get_mutable()->auth_ = const_cast< ::lightstep::collector::Auth*>(
      ::lightstep::collector::Auth::internal_default_instance());
  ::lightstep::collector::_ReportRequest_default_instance_._instance.get_mutable()->internal_metrics_ = const_cast< ::lightstep::collector::InternalMetrics*>(
      ::lightstep::collector::InternalMetrics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportRequest::kReporterFieldNumber;
const int ReportRequest::kAuthFieldNumber;
const int ReportRequest::kSpansFieldNumber;
const int ReportRequest::kTimestampOffsetMicrosFieldNumber;
const int ReportRequest::kInternalMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportRequest::ReportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsReportRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.ReportRequest)
}
ReportRequest::ReportRequest(const ReportRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      spans_(from.spans_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reporter()) {
    reporter_ = new ::lightstep::collector::Reporter(*from.reporter_);
  } else {
    reporter_ = NULL;
  }
  if (from.has_auth()) {
    auth_ = new ::lightstep::collector::Auth(*from.auth_);
  } else {
    auth_ = NULL;
  }
  if (from.has_internal_metrics()) {
    internal_metrics_ = new ::lightstep::collector::InternalMetrics(*from.internal_metrics_);
  } else {
    internal_metrics_ = NULL;
  }
  timestamp_offset_micros_ = from.timestamp_offset_micros_;
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.ReportRequest)
}

void ReportRequest::SharedCtor() {
  ::memset(&reporter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_offset_micros_) -
      reinterpret_cast<char*>(&reporter_)) + sizeof(timestamp_offset_micros_));
  _cached_size_ = 0;
}

ReportRequest::~ReportRequest() {
  // @@protoc_insertion_point(destructor:lightstep.collector.ReportRequest)
  SharedDtor();
}

void ReportRequest::SharedDtor() {
  if (this != internal_default_instance()) delete reporter_;
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete internal_metrics_;
}

void ReportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportRequest::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportRequest& ReportRequest::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsReportRequest();
  return *internal_default_instance();
}

ReportRequest* ReportRequest::New(::google::protobuf::Arena* arena) const {
  ReportRequest* n = new ReportRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spans_.Clear();
  if (GetArenaNoVirtual() == NULL && reporter_ != NULL) {
    delete reporter_;
  }
  reporter_ = NULL;
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) {
    delete auth_;
  }
  auth_ = NULL;
  if (GetArenaNoVirtual() == NULL && internal_metrics_ != NULL) {
    delete internal_metrics_;
  }
  internal_metrics_ = NULL;
  timestamp_offset_micros_ = 0u;
  _internal_metadata_.Clear();
}

bool ReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.ReportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .lightstep.collector.Reporter reporter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reporter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lightstep.collector.Auth auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lightstep.collector.Span spans = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_spans()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timestamp_offset_micros = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_offset_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lightstep.collector.InternalMetrics internal_metrics = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_internal_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.ReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.ReportRequest)
  return false;
#undef DO_
}

void ReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightstep.collector.Reporter reporter = 1;
  if (this->has_reporter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->reporter_, output);
  }

  // .lightstep.collector.Auth auth = 2;
  if (this->has_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->auth_, output);
  }

  // repeated .lightstep.collector.Span spans = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spans_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->spans(static_cast<int>(i)), output);
  }

  // uint32 timestamp_offset_micros = 5;
  if (this->timestamp_offset_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->timestamp_offset_micros(), output);
  }

  // .lightstep.collector.InternalMetrics internal_metrics = 6;
  if (this->has_internal_metrics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->internal_metrics_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.ReportRequest)
}

::google::protobuf::uint8* ReportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .lightstep.collector.Reporter reporter = 1;
  if (this->has_reporter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->reporter_, deterministic, target);
  }

  // .lightstep.collector.Auth auth = 2;
  if (this->has_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->auth_, deterministic, target);
  }

  // repeated .lightstep.collector.Span spans = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spans_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->spans(static_cast<int>(i)), deterministic, target);
  }

  // uint32 timestamp_offset_micros = 5;
  if (this->timestamp_offset_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->timestamp_offset_micros(), target);
  }

  // .lightstep.collector.InternalMetrics internal_metrics = 6;
  if (this->has_internal_metrics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->internal_metrics_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.ReportRequest)
  return target;
}

size_t ReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.ReportRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .lightstep.collector.Span spans = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->spans_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spans(static_cast<int>(i)));
    }
  }

  // .lightstep.collector.Reporter reporter = 1;
  if (this->has_reporter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->reporter_);
  }

  // .lightstep.collector.Auth auth = 2;
  if (this->has_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->auth_);
  }

  // .lightstep.collector.InternalMetrics internal_metrics = 6;
  if (this->has_internal_metrics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->internal_metrics_);
  }

  // uint32 timestamp_offset_micros = 5;
  if (this->timestamp_offset_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp_offset_micros());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.ReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.ReportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.ReportRequest)
    MergeFrom(*source);
  }
}

void ReportRequest::MergeFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.ReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spans_.MergeFrom(from.spans_);
  if (from.has_reporter()) {
    mutable_reporter()->::lightstep::collector::Reporter::MergeFrom(from.reporter());
  }
  if (from.has_auth()) {
    mutable_auth()->::lightstep::collector::Auth::MergeFrom(from.auth());
  }
  if (from.has_internal_metrics()) {
    mutable_internal_metrics()->::lightstep::collector::InternalMetrics::MergeFrom(from.internal_metrics());
  }
  if (from.timestamp_offset_micros() != 0) {
    set_timestamp_offset_micros(from.timestamp_offset_micros());
  }
}

void ReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportRequest::CopyFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportRequest::IsInitialized() const {
  return true;
}

void ReportRequest::Swap(ReportRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportRequest::InternalSwap(ReportRequest* other) {
  using std::swap;
  spans_.InternalSwap(&other->spans_);
  swap(reporter_, other->reporter_);
  swap(auth_, other->auth_);
  swap(internal_metrics_, other->internal_metrics_);
  swap(timestamp_offset_micros_, other->timestamp_offset_micros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportRequest::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kDisableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disable_ = from.disable_;
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.Command)
}

void Command::SharedCtor() {
  disable_ = false;
  _cached_size_ = 0;
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:lightstep.collector.Command)
  SharedDtor();
}

void Command::SharedDtor() {
}

void Command::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command& Command::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsCommand();
  return *internal_default_instance();
}

Command* Command::New(::google::protobuf::Arena* arena) const {
  Command* n = new Command;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disable_ = false;
  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.Command)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool disable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disable = 1;
  if (this->disable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool disable = 1;
  if (this->disable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.Command)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool disable = 1;
  if (this->disable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.disable() != 0) {
    set_disable(from.disable());
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  swap(disable_, other->disable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportResponse::InitAsDefaultInstance() {
  ::lightstep::collector::_ReportResponse_default_instance_._instance.get_mutable()->receive_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::lightstep::collector::_ReportResponse_default_instance_._instance.get_mutable()->transmit_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ReportResponse::clear_receive_timestamp() {
  if (GetArenaNoVirtual() == NULL && receive_timestamp_ != NULL) {
    delete receive_timestamp_;
  }
  receive_timestamp_ = NULL;
}
void ReportResponse::clear_transmit_timestamp() {
  if (GetArenaNoVirtual() == NULL && transmit_timestamp_ != NULL) {
    delete transmit_timestamp_;
  }
  transmit_timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportResponse::kCommandsFieldNumber;
const int ReportResponse::kReceiveTimestampFieldNumber;
const int ReportResponse::kTransmitTimestampFieldNumber;
const int ReportResponse::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportResponse::ReportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_collector_2eproto::InitDefaultsReportResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.collector.ReportResponse)
}
ReportResponse::ReportResponse(const ReportResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      commands_(from.commands_),
      errors_(from.errors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_receive_timestamp()) {
    receive_timestamp_ = new ::google::protobuf::Timestamp(*from.receive_timestamp_);
  } else {
    receive_timestamp_ = NULL;
  }
  if (from.has_transmit_timestamp()) {
    transmit_timestamp_ = new ::google::protobuf::Timestamp(*from.transmit_timestamp_);
  } else {
    transmit_timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lightstep.collector.ReportResponse)
}

void ReportResponse::SharedCtor() {
  ::memset(&receive_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transmit_timestamp_) -
      reinterpret_cast<char*>(&receive_timestamp_)) + sizeof(transmit_timestamp_));
  _cached_size_ = 0;
}

ReportResponse::~ReportResponse() {
  // @@protoc_insertion_point(destructor:lightstep.collector.ReportResponse)
  SharedDtor();
}

void ReportResponse::SharedDtor() {
  if (this != internal_default_instance()) delete receive_timestamp_;
  if (this != internal_default_instance()) delete transmit_timestamp_;
}

void ReportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportResponse::descriptor() {
  ::protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportResponse& ReportResponse::default_instance() {
  ::protobuf_collector_2eproto::InitDefaultsReportResponse();
  return *internal_default_instance();
}

ReportResponse* ReportResponse::New(::google::protobuf::Arena* arena) const {
  ReportResponse* n = new ReportResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.collector.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  commands_.Clear();
  errors_.Clear();
  if (GetArenaNoVirtual() == NULL && receive_timestamp_ != NULL) {
    delete receive_timestamp_;
  }
  receive_timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && transmit_timestamp_ != NULL) {
    delete transmit_timestamp_;
  }
  transmit_timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool ReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.collector.ReportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .lightstep.collector.Command commands = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_commands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp receive_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_receive_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp transmit_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transmit_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string errors = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_errors()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errors(this->errors_size() - 1).data(),
            static_cast<int>(this->errors(this->errors_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.collector.ReportResponse.errors"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.collector.ReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.collector.ReportResponse)
  return false;
#undef DO_
}

void ReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.collector.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lightstep.collector.Command commands = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->commands_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commands(static_cast<int>(i)), output);
  }

  // .google.protobuf.Timestamp receive_timestamp = 2;
  if (this->has_receive_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->receive_timestamp_, output);
  }

  // .google.protobuf.Timestamp transmit_timestamp = 3;
  if (this->has_transmit_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->transmit_timestamp_, output);
  }

  // repeated string errors = 4;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors(i).data(), static_cast<int>(this->errors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.ReportResponse.errors");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->errors(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.collector.ReportResponse)
}

::google::protobuf::uint8* ReportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.collector.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lightstep.collector.Command commands = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->commands_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->commands(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp receive_timestamp = 2;
  if (this->has_receive_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->receive_timestamp_, deterministic, target);
  }

  // .google.protobuf.Timestamp transmit_timestamp = 3;
  if (this->has_transmit_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->transmit_timestamp_, deterministic, target);
  }

  // repeated string errors = 4;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors(i).data(), static_cast<int>(this->errors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.collector.ReportResponse.errors");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->errors(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.collector.ReportResponse)
  return target;
}

size_t ReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.collector.ReportResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .lightstep.collector.Command commands = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->commands_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->commands(static_cast<int>(i)));
    }
  }

  // repeated string errors = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->errors_size());
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->errors(i));
  }

  // .google.protobuf.Timestamp receive_timestamp = 2;
  if (this->has_receive_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->receive_timestamp_);
  }

  // .google.protobuf.Timestamp transmit_timestamp = 3;
  if (this->has_transmit_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transmit_timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.collector.ReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.collector.ReportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.collector.ReportResponse)
    MergeFrom(*source);
  }
}

void ReportResponse::MergeFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.collector.ReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  commands_.MergeFrom(from.commands_);
  errors_.MergeFrom(from.errors_);
  if (from.has_receive_timestamp()) {
    mutable_receive_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.receive_timestamp());
  }
  if (from.has_transmit_timestamp()) {
    mutable_transmit_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.transmit_timestamp());
  }
}

void ReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.collector.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportResponse::CopyFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.collector.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportResponse::IsInitialized() const {
  return true;
}

void ReportResponse::Swap(ReportResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportResponse::InternalSwap(ReportResponse* other) {
  using std::swap;
  commands_.InternalSwap(&other->commands_);
  errors_.InternalSwap(&other->errors_);
  swap(receive_timestamp_, other->receive_timestamp_);
  swap(transmit_timestamp_, other->transmit_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportResponse::GetMetadata() const {
  protobuf_collector_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_collector_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace collector
}  // namespace lightstep

// @@protoc_insertion_point(global_scope)
